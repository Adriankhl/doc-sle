<?xml version="1.0" encoding="UTF-8"?>
<chapter xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xlink="http://www.w3.org/1999/xlink" xml:base="adm_sudo.xml" version="5.0" xml:id="cha-adm-sudo">
 <title>sudo
</title>
 <info>
  <dm:docmanager xmlns:dm="urn:x-suse:ns:docmanager">
   <dm:bugtracker/>
   <dm:translation>Ja</dm:translation>
  </dm:docmanager>
 </info>
 <para>
  Viele Kommandos und Systemdienstprogramme müssen als <systemitem class="username">root</systemitem> ausgeführt werden, um Dateien zu bearbeiten und/oder Tasks auszuführen, für die nur der Superuser berechtigt ist. Aus Sicherheitsgründen und um das unbeabsichtigte Ausführen gefährlicher Kommandos zu vermeiden, ist es allgemein ratsam, sich nicht direkt als <systemitem class="username">root</systemitem> anzumelden. Stattdessen wird empfohlen, als normaler, nicht privilegierter Benutzer zu arbeiten und das <command>sudo</command>-Kommando zum Ausführen von Kommandos mit erhöhten Berechtigungen zu verwenden. 
 </para>
 <para>
  Auf <phrase role="productname"><phrase os="sles">SUSE Linux Enterprise Server</phrase></phrase> ist <command>sudo</command> standardmäßig auf eine ähnliche Funktionsweise wie „su“ konfiguriert. Jedoch bietet <command>sudo</command> die Möglichkeit, Benutzern das Ausführen von Kommandos mit Berechtigungen jedes anderen Benutzers mit umfassenden Konfigurationsmöglichkeiten zu erlauben. Dies kann dazu genutzt werden, Rollen mit bestimmten Berechtigungen bestimmten Benutzern und Gruppen zuzuweisen. Es ist beispielsweise möglich, Mitgliedern der Gruppe <systemitem class="groupname">users</systemitem> das Ausführen eines Kommandos mit den Berechtigungen von <systemitem class="username">wilber</systemitem> zu erlauben. Der Zugriff auf das Kommando kann zusätzlich eingeschränkt werden, indem beispielsweise das Angeben jeglicher Kommandooptionen verboten wird. Während „su“ immer das <systemitem class="username">root</systemitem>-Passwort für die Authentifizierung mit PAM erfordert, kann <command>sudo</command> für die Authentifizierung mit Ihren eigenen Berechtigungsnachweisen konfiguriert werden. Dies erhöht die Sicherheit, da das <systemitem class="username">root</systemitem>-Passwort nicht freigegeben werden muss. Sie können Mitgliedern der Gruppe <systemitem class="groupname">users</systemitem> beispielsweise erlauben, ein <command>frobnicate</command>-Kommando als <systemitem class="username">wilber</systemitem> auszuführen, mit der Einschränkung, dass keine Argumente angegeben werden. Dies kann dazu genutzt werden, Rollen mit bestimmten Funktionen bestimmten Benutzern und Gruppen zuzuweisen.
 </para>
 <sect1 xml:id="sec-adm-sudo-usage">
  <title>Grundlegende Verwendung von <command>sudo</command></title>

  <para>
   <command>sudo</command> ist einfach zu verwenden und dabei sehr funktionsreich.
  </para>

  <sect2 xml:id="sec-adm-sudo-usage-cmd">
   <title>Ausführung eines einzelnen Kommandos</title>
   <para>
    Wenn Sie als normaler Benutzer angemeldet sind, können Sie alle Befehle als <systemitem class="username">root</systemitem> ausführen, indem Sie <command>sudo</command> vor den Befehl setzen. Eine Eingabeaufforderung für das root-Passwort erscheint und bei erfolgreicher Authentifizierung wird das Kommando als <systemitem class="username">root</systemitem> ausgeführt:
   </para>
<screen>
<prompt>tux &gt; </prompt><command>id -un</command><co xml:id="co-sudo-usage-id"/>
tux
<prompt>tux &gt; </prompt><command>sudo id -un</command>
root's password:<co xml:id="co-sudo-usage-pw"/>
root
<prompt>tux &gt; </prompt><command>id -un</command>
tux<co xml:id="co-sudo-usage-after"/>
<prompt>tux &gt; </prompt><command>sudo id -un</command>
<co xml:id="co-sudo-usage-nopw"/>
root
</screen>
   <calloutlist>
    <callout arearefs="co-sudo-usage-id">
     <para>
      Das Kommando <command>id -un</command> druckt den Anmeldenamen des aktuellen Benutzers.
     </para>
    </callout>
    <callout arearefs="co-sudo-usage-pw">
     <para>
      Das Passwort wird bei der Eingabe weder als Klartext noch durch Punkte angezeigt.
     </para>
    </callout>
    <callout arearefs="co-sudo-usage-after">
     <para>
      Nur Kommandos, die mit <command>sudo</command> beginnen, werden mit erhöhten Berechtigungen ausgeführt. Wenn Sie dasselbe Kommando ohne das Präfix <command>sudo</command> ausführen, wird es wieder mit den Berechtigungen des aktuellen Benutzers ausgeführt.
     </para>
    </callout>
    <callout arearefs="co-sudo-usage-nopw">
     <para>
      Für einen begrenzten Zeitraum müssen Sie das <systemitem class="username">root</systemitem>-Passwort nicht erneut eingeben.
     </para>
    </callout>
   </calloutlist>
   <tip>
    <title>E/A-Umleitung</title>
    <para>
     Die E/A-Umleitung funktioniert nicht so, wie Sie es wahrscheinlich erwarten:
    </para>
<screen>
<prompt>tux &gt; </prompt> sudo echo s &gt; /proc/sysrq-trigger
bash: /proc/sysrq-trigger: Permission denied
<prompt>tux &gt; </prompt> sudo cat &lt; /proc/1/maps
bash: /proc/1/maps: Permission denied
</screen>
    <para>
     Nur die <command>echo</command>-/<command>cat</command>-Binärdatei wird mit erhöhten Berechtigungen ausgeführt. Die Umleitung erfolgt über die Shell des Benutzers mit Benutzerberechtigungen. Sie können entweder eine Shell starten, wie in <xref linkend="sec-sudo-shell"/> beschrieben, oder stattdessen das Dienstprogramm <command>dd</command> verwenden:
    </para>
<screen>
echo s | sudo dd of=/proc/sysrq-trigger
sudo dd if=/proc/1/maps | cat 
</screen>
   </tip>
  </sect2>

  <sect2 xml:id="sec-sudo-shell">
   <title>Starten einer Shell</title>
   <para>
    Es kann mühselig sein, jedem Befehl <command>sudo</command> voranstellen zu müssen. Sie könnten eine Shell als <command>sudo bash</command>-Kommando angeben. Es wird jedoch empfohlen, einen der integrierten Mechanismen zum Starten einer Shell zu verwenden:
   </para>
   <variablelist>
    <varlistentry>
     <term><literal>sudo -s (&lt;Kommando&gt;)</literal>
     </term>
     <listitem>
      <para>
       Startet eine von der Umgebungsvariablen<envar>SHELL</envar> angegebene Shell oder die Standard-Shell des Zielbenutzers. Wird ein Kommando angegeben, wird es an die Shell übergeben (mit der Option <option>-c</option>), sonst wird die Shell im interaktiven Modus ausgeführt.
      </para>
<screen>
<prompt>tux:~ &gt; </prompt>sudo -i
root's password:
<prompt>root:/home/tux # </prompt>exit
<prompt>tux:~ &gt; </prompt>
</screen>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><literal>sudo -i (&lt;Kommando&gt;)</literal>
     </term>
     <listitem>
      <para>
       Wie <option>-s</option>, startet die Shell jedoch als Login-Shell. Dies bedeutet, dass die Startdateien der Shell (<filename>.profile</filename> usw.) verarbeitet werden und das aktuelle Home-Verzeichnis als Basisverzeichnis des Zielbenutzers festgelegt wird.
      </para>
<screen>
<prompt>tux:~ &gt; </prompt>sudo -i
root's password:
<prompt>root:~ # </prompt>exit
<prompt>tux:~ &gt; </prompt>
            </screen>
     </listitem>
    </varlistentry>
   </variablelist>
  </sect2>

  <sect2 xml:id="sec-adm-sudo-usage-env">
   <title>Umgebungsvariablen</title>
   <para>
    Standardmäßig gibt <command>sudo</command> keine Umgebungsvariablen weiter:
   </para>
<screen>
<prompt>tux &gt; </prompt>ENVVAR=test env | grep ENVVAR
ENVVAR=test
<prompt>tux &gt; </prompt>ENVVAR=test sudo env | grep ENVVAR
root's password:
<co xml:id="co-sudo-env-novar"/>
<prompt>tux &gt; </prompt>
      </screen>
   <calloutlist>
    <callout arearefs="co-sudo-env-novar">
     <para>
      Die leere Ausgabe zeigt, dass die Umgebungsvariable <envar>ENVVAR</envar> im Kontext des Kommandos, das mit <command>sudo</command> ausgeführt wurde, nicht vorhanden war.
     </para>
    </callout>
   </calloutlist>
   <para>
    Dieses Verhalten kann mit der Option <literal>env_reset</literal> geändert werden. Siehe <xref linkend="tab-adm-sudo-options"/>.
   </para>
  </sect2>
 </sect1>
 <sect1 xml:id="sec-sudo-conf">
  <title>Konfigurieren von <command>sudo</command></title>

  <para>
   <command>sudo</command> ist ein sehr flexibles Werkzeug mit umfassenden Konfigurationsmöglichkeiten.
  </para>

  <note>
   <title>Versehentliches Aussperren aus sudo</title>
   <para>
    Wenn Sie sich selbst versehentlich aus <command>sudo</command> ausgesperrt haben, können Sie <command>su -</command> und das <systemitem class="username">root</systemitem>-Passwort verwenden, um eine root-Shell zu erhalten, und <command>visudo</command> ausführen, um den Fehler zu beheben.
   </para>
  </note>

  <sect2 xml:id="sec-sudo-conf-edit">
   <title>Bearbeiten der Konfigurationsdateien</title>
   
   <para>
    Die Hauptkonfigurationsdatei mit den Richtlinien für <command>sudo</command> ist <filename>/etc/sudoers</filename>. Da es möglich ist, sich selbst aus dem System auszusperren, wenn in dieser Datei Fehler enthalten sind, wird dringend empfohlen, <command>visudo</command> zum Bearbeiten zu verwenden. Gleichzeitige Änderungen an der geöffneten Datei werden so verhindert und es wird vor dem Speichern auf Syntaxfehler geprüft.
   </para>
   <para>
    Trotz des Namens können Sie andere Editoren als „vi“ verwenden, indem Sie die Umgebungsvariable <envar>EDITOR</envar> festlegen. Beispiel:
   </para>
<screen>sudo EDITOR=<replaceable>/usr/bin/nano</replaceable> visudo</screen>
   <para>
    Die Datei <filename>/etc/sudoers</filename> selbst hingegen wird von den Systempaketen bereitgestellt und Änderungen können bei Aktualisierungen verloren gehen. Daher wird empfohlen, benutzerdefinierte Konfigurationen in Dateien im Verzeichnis <filename>/etc/sudoers.d/</filename> abzulegen. Jede Datei in diesem Verzeichnis ist automatisch eingeschlossen. Um eine Datei in diesem Unterverzeichnis zu erstellen oder zu bearbeiten, führen Sie das folgende Kommando aus:
   </para>
<screen>sudo visudo -f /etc/sudoers.d/<replaceable>NAME</replaceable></screen>
   <para>
    Alternativ mit einem anderen Editor (beispielsweise <command>nano</command>):
   </para>
<screen>sudo EDITOR=<replaceable>/usr/bin/nano</replaceable> visudo -f /etc/sudoers.d/<replaceable>NAME</replaceable></screen>
   <note>
    <title>Ignorierte Dateien in <filename>/etc/sudoers.d</filename></title>
    <para>
     Das Kommando <literal>#includedir</literal> in <filename>/etc/sudoers</filename>, das für <filename>/etc/sudoers.d</filename> verwendet wird, ignoriert Dateien, die mit einer Tilde (<literal>~</literal>) enden oder einen Punkt (<literal>.</literal>) enthalten.
    </para>
   </note>
   <para>
    Führen Sie <command>man 8 visudo</command> aus, um weitere Informationen zum Kommando <command>visudo</command> zu erhalten.
   </para>
  </sect2>

  <sect2 xml:id="sec-sudo-conf-syntax">
   <title>Basiskonfigurationssyntax von sudoers</title>
   <para>
    In den sudoers-Konfigurationsdateien gibt es zwei Optionstypen: Strings und Flags. Strings können beliebige Werte enthalten, Flags hingegen können nur aktiviert (ON) oder deaktiviert (OFF) werden. Die wichtigsten Syntaxkonstrukte für sudoers-Konfigurationsdateien sind:
   </para>
<screen>
# Everything on a line after a # gets ignored <co xml:id="co-sudo-syntax-comment"/>
Defaults !insults # Disable the insults flag <co xml:id="co-sudo-syntax-flag"/>
Defaults env_keep += "DISPLAY HOME" # Add DISPLAY and HOME to env_keep
tux ALL = NOPASSWD: /usr/bin/frobnicate, PASSWD: /usr/bin/journalctl <co xml:id="co-sudo-syntax-rule"/>
</screen>
   <calloutlist>
    <callout arearefs="co-sudo-syntax-comment">
     <para>
      Es gibt zwei Ausnahmen: <literal>#include</literal> und <literal>#includedir</literal> sind normale Kommandos. Gefolgt von Zahlen, gibt es eine UID an.
     </para>
    </callout>
    <callout arearefs="co-sudo-syntax-flag">
     <para>
      Entfernen Sie das Ausrufezeichen (<literal>!</literal>), um für das angegebene Flag ON festzulegen.
     </para>
    </callout>
    <callout arearefs="co-sudo-syntax-rule">
     <para>
      Siehe <xref linkend="sec-sudo-conf-rule"/>.
     </para>
    </callout>
   </calloutlist>
   <table xml:id="tab-adm-sudo-options">
    <title>Hilfreiche Flags und Optionen</title>
    <tgroup cols="3">
     <thead>
      <row>
       <entry>
        <para>
         Optionsname
        </para>
       </entry>
       <entry>
        <para>
         Beschreibung
        </para>
       </entry>
       <entry>
        <para>
         Beispiel
        </para>
       </entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry><literal>targetpw</literal>
       </entry>
       <entry>
        <para>
         Dieses Flag steuert, ob der aufrufende Benutzer das Passwort des Zielbenutzers (ON) (beispielsweise <systemitem class="username">root</systemitem>) oder des aufrufenden Benutzers (OFF) eingeben muss.
        </para>
       </entry>
       <entry>
<screen>Defaults targetpw # Turn targetpw flag ON</screen>
       </entry>
      </row>
      <row>
       <entry><literal>rootpw</literal>
       </entry>
       <entry>
        <para>
         Ist diese Option festgelegt, fordert <command>sudo</command> die Eingabe des <systemitem class="username">root</systemitem>-Passworts und nicht des Passworts des Zielbenutzers oder des aufrufenden Benutzers. Standardmäßig ist OFF festgelegt.
        </para>
       </entry>
       <entry>
<screen>Defaults !rootpw # Turn rootpw flag OFF</screen>
       </entry>
      </row>
      <row>
       <entry><literal>env_reset</literal>
       </entry>
       <entry>
        <para>
         Ist diese Option festgelegt, richtet <command>sudo</command> eine Minimalumgebung ein, in der nur <envar>TERM</envar>, <envar>PATH</envar>, <envar>HOME</envar>, <envar>MAIL</envar>, <envar>SHELL</envar>, <envar>LOGNAME</envar>, <envar>USER</envar>, <envar>USERNAME</envar> und <envar>SUDO_*</envar> festgelegt sind. Zusätzlich werden Variablen aus der aufrufenden Umgebung importiert, die in <literal>env_keep</literal> aufgelistet sind. Standardmäßig ist ON festgelegt.
        </para>
       </entry>
       <entry>
<screen>Defaults env_reset # Turn env_reset flag ON</screen>
       </entry>
      </row>
      <row>
       <entry><literal>env_keep</literal>
       </entry>
       <entry>
        <para>
         Eine Liste der Umgebungsvariablen, die beizubehalten sind, wenn für das Flag <literal>env_reset</literal> ON festgelegt ist.
        </para>
       </entry>
       <entry>
<screen>
# Set env_keep to contain EDITOR and PROMPT
Defaults env_keep = "EDITOR PROMPT"
Defaults env_keep += "JRE_HOME" # Add JRE_HOME
Defaults env_keep -= "JRE_HOME" # Remove JRE_HOME
</screen>
       </entry>
      </row>
      <row>
       <entry><literal>env_delete</literal>
       </entry>
       <entry>
        <para>
         Eine Liste der Umgebungsvariablen, die zu löschen sind, wenn für das Flag <literal>env_reset</literal> OFF festgelegt ist.
        </para>
       </entry>
       <entry>
<screen>
# Set env_delete to contain EDITOR and PROMPT
Defaults env_delete = "EDITOR PROMPT"
Defaults env_delete += "JRE_HOME" # Add JRE_HOME
Defaults env_delete -= "JRE_HOME" # Remove JRE_HOME
</screen>
       </entry>
      </row>
     </tbody>
    </tgroup>
   </table>
   <para>
    Das Token <literal>Defaults</literal> kann auch zum Erstellen von Aliassen für eine Sammlung von Benutzern, Hosts oder Kommandos verwendet werden. Außerdem ist es möglich, eine Option anzuwenden, die nur für eine bestimmte Reihe von Benutzern gültig ist.
   </para>
   <para>
    Genauere Informationen zur Konfigurationsdatei <filename>/etc/sudoers</filename> erhalten Sie mit dem Kommando <command>man 5 sudoers</command>.
   </para>
  </sect2>

  <sect2 xml:id="sec-sudo-conf-rule">
   <title>Regeln in sudoers</title>
   <para>
    Die Regeln in der sudoers-Konfiguration können sehr komplex sein. In diesem Abschnitt werden daher nur die Grundlagen abgedeckt. Jede Regel befolgt ein Basisschema (<literal>[]</literal> markiert optionale Teile):
   </para>
<screen>
#Who      Where         As whom      Tag                What
User_List Host_List = [(User_List)] [NOPASSWD:|PASSWD:] Cmnd_List
</screen>
   <variablelist>
    <title>Syntax für sudoers-Regeln</title>
    <varlistentry>
     <term><literal>User_List</literal>
     </term>
     <listitem>
      <para>
       Eine oder mehrere Kennungen (getrennt durch <literal>,</literal>): Entweder ein Benutzername, eine Gruppe im Format <literal>%GROUPNAME</literal> oder eine Benutzer-ID im Format <literal>#UID</literal>. Eine Negation erzielen Sie mit dem Präfix <literal>!</literal>
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><literal>Host_List</literal>
     </term>
     <listitem>
      <para>
       Eine oder mehrere Kennungen (getrennt durch <literal>,</literal>): Entweder ein (vollständig qualifizierter) Hostname oder eine IP-Adresse. Eine Negation erzielen Sie mit dem Präfix <literal>!</literal> <literal>ALL</literal> ist die übliche Option für <literal>Host_List</literal>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><literal>NOPASSWD:|PASSWD:</literal>
     </term>
     <listitem>
      <para>
       Der Benutzer wird nicht aufgefordert, ein Passwort einzugeben, wenn Kommandos ausgeführt werden, die <literal>CMDSPEC</literal> nach <literal>NOPASSWD:</literal> entsprechen.
      </para>
      <para>
       <literal>PASSWD</literal> ist der Standardwert. Er muss nur angegeben werden, wenn beide Werte in der gleichen Zeile sind:
      </para>
<screen>tux ALL = PASSWD: /usr/bin/foo, NOPASSWD: /usr/bin/bar</screen>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><literal>Cmnd_List</literal>
     </term>
     <listitem>
      <para>
       Eine oder mehrere Kennungen (getrennt durch <literal>,</literal>): Ein Pfad zu einer ausführbaren Datei, gefolgt von erlaubten Argumenten oder keinen weiteren Angaben.
      </para>
<screen>
/usr/bin/foo     # Anything allowed
/usr/bin/foo bar # Only "/usr/bin/foo bar" allowed
/usr/bin/foo ""  # No arguments allowed
</screen>
     </listitem>
    </varlistentry>
   </variablelist>
   <para>
    <literal>ALL</literal> kann als <literal>User_List</literal>, <literal>Host_List</literal> und <literal>Cmnd_List</literal> verwendet werden.
   </para>
   <para>
    Eine Regel, die es <systemitem class="username">tux</systemitem> erlaubt, alle Kommandos als „root“ ohne Eingabe des Passworts auszuführen:
   </para>
<screen>tux ALL = NOPASSWD: ALL</screen>
   <para>
    Eine Regel, die es <systemitem class="username">tux</systemitem> erlaubt, <command>systemctl restart apache2</command> auszuführen:
   </para>
<screen>tux ALL = /usr/bin/systemctl restart apache2</screen>
   <para>
    Eine Regel, die es <systemitem class="username">tux</systemitem> erlaubt, <command>wall</command> als <systemitem>admin</systemitem> ohne Argumente auszuführen:
   </para>
<screen>tux ALL = (admin) /usr/bin/wall ""</screen>
   <warning>
    <title>Gefährliche Konstrukte</title>
    <para>
     Konstrukte des Typs
    </para>
<screen>ALL ALL = ALL</screen>
    <para>
     <emphasis>dürfen nicht</emphasis> ohne <literal>Defaults targetpw</literal> verwendet werden, sonst kann jeder Kommandos als <systemitem class="username">root</systemitem> ausführen.
    </para>
   </warning>
  </sect2>
 </sect1>
 <sect1 xml:id="sec-sudo-usecases">
  <title>Häufige Einsatzmöglichkeiten</title>

  <para>
   Obwohl die Standardkonfiguration oft für einfache Konfigurationen und Desktopumgebungen ausreicht, können benutzerdefinierte Konfigurationen sehr hilfreich sein.
  </para>

  <sect2 xml:id="sec-sudo-usecases-userpw">
   <title>Verwenden von <command>sudo</command> ohne <systemitem class="username">root</systemitem>-Passwort</title>
   <para>
    In Anwendungsfällen mit besonderen Einschränkungen (<quote>Benutzer X kann Kommando Y nur als <systemitem class="username">root</systemitem></quote> ausführen) ist dies nicht möglich. In anderen Fällen ist es weiterhin vorteilhaft, eine Art Trennung zu haben. Grundsätzlich können Mitglieder der Gruppe <systemitem class="groupname">wheel</systemitem> alle Kommandos mit <command>sudo</command> als „root“ ausführen.
   </para>
   <procedure>
    <step>
     <para>
      Fügen Sie sich selbst zur Gruppe <systemitem class="groupname">wheel</systemitem> hinzu.
     </para>
     <para>
      Ist Ihr Benutzerkonto nicht bereits Mitglied der Gruppe <systemitem class="groupname">wheel</systemitem>, fügen Sie es hinzu, indem Sie <command>sudo usermod -a -G wheel <replaceable>BENUTZERNAME</replaceable></command> ausführen und sich ab- und wieder anmelden. Überprüfen Sie, ob die Änderung erfolgreich war, indem Sie <command>groups <replaceable>BENUTZERNAME</replaceable></command> ausführen.
     </para>
    </step>
    <step>
     <para>
      Legen Sie die Authentifizierung mit dem Passwort des aufrufenden Benutzers als Standard fest.
     </para>
     <para>
      Erstellen Sie die Datei <filename>/etc/sudoers.d/userpw</filename> mit <command>visudo</command> (siehe <xref linkend="sec-sudo-conf-edit"/>) und fügen Sie Folgendes hinzu:
     </para>
<screen>Defaults !targetpw</screen>
    </step>
    <step>
     <para>
      Wählen Sie eine neue Standardregel aus.
     </para>
     <para>
      Je nachdem, ob Sie möchten, dass Benutzer ihre Passwörter erneut eingeben oder nicht, entfernen Sie das Kommentarzeichen in der entsprechenden Zeile in <filename>/etc/sudoers</filename> und kommentieren Sie die Standardregel aus.
     </para>
<screen>
## Uncomment to allow members of group wheel to execute any command
# %wheel ALL=(ALL) ALL

## Same thing without a password
# %wheel ALL=(ALL) NOPASSWD: ALL
</screen>
    </step>
    <step>
     <para>
      Gestalten Sie die Standardregel restriktiver.
     </para>
     <para>
      Kommentieren Sie die Regel, die alles erlaubt, in <filename>/etc/sudoers</filename> aus oder löschen Sie sie:
     </para>
<screen>ALL     ALL=(ALL) ALL   # WARNING! Only use this together with 'Defaults targetpw'!</screen>
     <warning>
      <title>Gefährliche Regel in sudoers</title>
      <para>
       Vergessen Sie diesen Schritt nicht, sonst kann <emphasis>jeder</emphasis> Benutzer <emphasis>alle</emphasis> Kommandos als <systemitem class="username">root</systemitem> ausführen!
      </para>
     </warning>
    </step>
    <step>
     <para>
      Testen Sie die Konfiguration.
     </para>
     <para>
      Versuchen Sie, <command>sudo</command> als Mitglied und Nicht-Mitglied von <systemitem class="groupname">wheel</systemitem> auszuführen.
     </para>
<screen>
<prompt>tux:~ &gt; </prompt>groups
users wheel
<prompt>tux:~ &gt; </prompt>sudo id -un
tux's password:
root
<prompt>wilber:~ &gt; </prompt>groups
users
<prompt>wilber:~ &gt; </prompt>sudo id -un
wilber is not in the sudoers file.  This incident will be reported.
          </screen>
    </step>
   </procedure>
  </sect2>

  <sect2 xml:id="sec-sudo-usecases-xorg">
   <title>Verwenden von <command>sudo</command> mit X.Org-Anwendungen</title>
   <para>
    Wenn Sie Grafikanwendungen mit <command>sudo</command> starten, stoßen Sie auf den folgenden Fehler:
   </para>
<screen>
<prompt>tux &gt; </prompt>sudo xterm
xterm: Xt error: Can't open display: %s
xterm: DISPLAY is not set
      </screen>
   <para>
    YaST wählt die ncurses-Schnittstelle und nicht die grafische Schnittstelle.
   </para>
   <para>
    Um X.Org in Anwendungen zu verwenden, die mit <command>sudo</command> gestartet werden, müssen die Umgebungsvariablen <envar>DISPLAY</envar> und <envar>XAUTHORITY</envar> übertragen werden. Um dies zu konfigurieren, erstellen Sie die Datei <filename>/etc/sudoers.d/xorg</filename> (siehe <xref linkend="sec-sudo-conf-edit"/>) und fügen Sie die folgende Zeile hinzu:
   </para>
<screen>Defaults env_keep += "DISPLAY XAUTHORITY"</screen>
   <para>
    Wenn die Variable <envar>XAUTHORITY</envar> nicht bereits entsprechend festgelegt ist, legen Sie sie wie folgt fest:
   </para>
<screen>export XAUTHORITY=~/.Xauthority</screen>
   <para>
    Jetzt können X.Org-Anwendungen wie üblich ausgeführt werden:
   </para>
<screen>sudo yast2</screen>

  </sect2>
 </sect1>
 <sect1 xml:id="sec-adm-sudo-moreinfo">
  <title>Weitere Informationen</title>

  <para>
   Einen kurzen Überblick über die verfügbaren Kommandozeilenschalter können Sie mit <command>sudo --help</command> abrufen. Eine Erklärung und andere wichtige Informationen finden Sie auf der man-Seite: <command>man 8 sudo</command>. Die Konfiguration ist auf der man-Seite <command>man 5 sudoers</command> dokumentiert.
  </para>
 </sect1>
</chapter>
