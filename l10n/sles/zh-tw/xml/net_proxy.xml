<?xml version="1.0" encoding="UTF-8"?>
<chapter xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xlink="http://www.w3.org/1999/xlink" xml:base="net_proxy.xml" version="5.0" xml:id="cha-squid">
 <title>代理伺服器 Squid</title>
 <info>
  <abstract>
   <para>
    Squid 是廣泛用於 Linux 與 UNIX 平台的代理快取。這表示它會將要求的網際網路物件 (例如網頁伺服器或 FTP 伺服器上的資料)，儲存在比伺服器更接近要求工作站的機器上。您可設定多階層，以確保即使在對終端使用者而言透明的模式下，也能達到最佳的回應速度和較低的頻寬使用量。您可使用其他諸如 squidGuard 的軟體來過濾 Web 內容。
   </para>
  </abstract>
  <dm:docmanager xmlns:dm="urn:x-suse:ns:docmanager">
   <dm:bugtracker/>
   <dm:translation>yes</dm:translation>
  </dm:docmanager>
 </info><indexterm>
 <primary>Squid</primary></indexterm><indexterm>
 <primary>代理</primary>
 <see>Squid</see></indexterm><indexterm>
 <primary>Squid</primary>
 <secondary>快取</secondary></indexterm><indexterm>
 <primary>代理</primary>
 <secondary>快取</secondary></indexterm>
 <para>
  Squid 可做為代理快取記憶體。它會將物件要求從用戶端 (在此例中是從網頁瀏覽器) 重新導向至伺服器。當從伺服器而來的要求物件到達時，它會將物件傳送到用戶端，並在硬碟快取記憶體中保留物件的副本。快取的其中一個優點是，當有數個用戶端要求相同的物件時，可以從硬碟快取來提供該物件。這可讓用戶端比從網際網路更快地擷取資料。這個程序也可以減少網路流量。<indexterm>
  <primary> 代理</primary>
  <secondary> 優點</secondary>
  </indexterm>
 </para>
 <para>
  <indexterm>
  <primary> Squid</primary>
  <secondary> 功能</secondary>
  </indexterm>  除了實際的快取之外，Squid 還提供其他許多功能︰
 </para>
 <itemizedlist>
  <listitem>
   <para>
    在代理伺服器的互通階層之間分配負載
   </para>
  </listitem>
  <listitem>
   <para>
    針對所有存取代理的用戶端定義嚴密的存取控制清單
   </para>
  </listitem>
  <listitem>
   <para>
    允許或拒絕使用其他應用程式存取特定網頁
   </para>
  </listitem>
  <listitem>
   <para>
    針對頻繁造訪的網頁產生統計資料，用於評估網頁瀏覽習慣
   </para>
  </listitem>
 </itemizedlist>
 <para>
  Squid 不是一般的代理。一般而言，它只會代理 HTTP 連接。它支援 FTP、Gopher、SSL 以及 WAIS 通訊協定，但不支援其他網際網路通訊協定，例如針對新聞或視訊會議的通訊協定。因為 Squid 只支援將 UDP 通訊協定用於在不同快取之間提供通訊功能，許多多媒體程式並不受支援。
 </para>
 <sect1 xml:id="sec-squid-cacheinfos">
  <title>關於代理快取的說明</title>

  <para>
   當 Squid 做為代理快取記憶體時，使用方法有多種。若與防火牆合併，它有助於提高安全性。多個代理可一起使用。它也可以判斷應該快取物件類型和持續的時間長短。
  </para>

  <sect2 xml:id="sec-squid-security">
   <title>Squid 以及安全性</title><indexterm>
   <primary>Squid</primary>
   <secondary>安全性</secondary></indexterm><indexterm>
   <primary>安全性</primary>
   <secondary>Squid</secondary></indexterm>
   <para>
    Squid 可與防火牆配合使用，以便使用代理快取記憶體來保護內部網路不受外部的存取。防火牆將會拒絕所有的用戶端存取 Squid 以外的外部服務。所有的網路連接都必須由代理來建立。藉由這種組態方式，Squid 可完全控制網頁存取。
   </para>
   <para>
    <indexterm>
    <primary> Squid</primary>
    <secondary> 安全性</secondary>
    </indexterm>  如果防火牆組態包含 DMZ，則代理應在此區域中操作。<xref linkend="sec-squid-proxyconfigtrans"/> 將描述如何執行「<emphasis>透明</emphasis>」代理。這簡化了用戶端的組態，因為在此情況下，它們不需要有關代理的任何資訊。
   </para>
  </sect2>

  <sect2 xml:id="sec-squid-morecaches">
   <title>多個快取</title><indexterm>
   <primary> Squid</primary>
   <secondary> 快取記憶體</secondary></indexterm> 
   <para>
    經過設定之後，可在多個 Squid 例項之間交換物件。這可減少系統的總負荷，並可增加在區域網路中取回物件的機會。您也可以設定快取階層，使快取可以將物件要求轉送至旁支快取或上層快取，如此其可從區域網路中的另一個快取或直接從來源要求物件。
   </para>
   <para>
    為快取記憶體階層選擇適當的拓樸是非常重要的，因為這樣它就不會增加網路的整體流量。就大型的網路而言，理想的做法是︰為每個子網路設定代理伺服器，並將它們與上層代理連接，再連線至 ISP 的代理快取。
   </para>
   <para>
    這些通訊都是由在 UDP 通訊協定最上層執行的 ICP (網際網路快取通訊協定) 所處理。在快取之間的資料傳輸是使用以 TCP 為基礎的 HTTP (超文字傳輸通訊協定，Hypertext Transmission Protocol) 來處理。
   </para>
   <para>
    為了找到最適合向其要求物件的伺服器，一個快取會將 ICP 要求傳送到所有旁支代理。旁支代理會透過 ICP 回應答覆這些要求。若偵測到物件，它們會使用代碼 <literal>HIT</literal>，若未偵測到，則使用 <literal>MISS</literal>。
   </para>
   <para>
    如果發現多個 <literal>HIT</literal> 回應，代理伺服器會依據哪個快取傳送回覆的速度最快或哪部伺服器較近等因素來決定要從哪部伺服器下載。如果沒有收到滿意的回應，則會將要求傳送到上層快取。<remark>Is timestamp a factor? - sknorr, 2016-06-24</remark>
   </para>
   <note>
    <title>Squid 如何避免物件重複</title>
    <para>
     為了避免網路上不同的快取記憶體中出現物件重複，系統會使用其他 ICP 通訊協定。例如 CARP (快取陣列路由通訊協定) 或 HTCP (超文字快取通訊協定)。在網路中維護愈多的物件，則找到所需物件的機率也就愈大。
    </para>
   </note>
  </sect2>

  <sect2 xml:id="sec-squid-latching">
   <title>快取網際網路物件</title><indexterm>
   <primary> Squid</primary>
   <secondary> 物件狀態</secondary></indexterm> 
   <para>
    網路中提供的很多物件都不是靜態的，例如動態產生的頁面和 TLS/SSL 加密內容。此類物件是不會被快取的，因為每次存取這些物件時，它們都會改變。<remark>Squid can now decrypt TLS traffic with plugins. Not sure whether
     that is then stored or not. Also, not sure how/whether to get this
     information in here. - sknorr, 2016-06-24
    </remark>
   </para>
   <para>
    為確定物件在快取中應保留的時間，系統會為物件指定其中一種狀態。網頁以及代理伺服器會藉由新增標頭至這些物件來找出物件的狀態，例如<quote>上一次修改</quote>或<quote>到期</quote>以及對應的日期。也可使用指定不得快取的物件的其他標題。
   </para>
   <para>
    快取中的物件通常會因缺少可用磁碟空間而透過 LRU (最久未用) 之類的演算法進行替換。這表示代理會刪除那些最久沒有被要求的物件。
   </para>
  </sect2>
 </sect1>
 <sect1 xml:id="sec-squid-sysneeds">
  <title>系統要求</title><indexterm>

  <primary> Squid</primary>

  <secondary> 系統需求</secondary></indexterm> 

  <para>
   系統要求主要取決於該系統必須承擔的最大網路負載。因此請檢查負載尖峰值，因為在這些時段，負載可能會達到日平均值的四倍以上。若不能確定，請稍稍高估系統要求。若 Squid 的工作負荷臨近其處理能力上限，可能會嚴重影響服務品質。接下來的幾節將依重要程度依次指出系統因素︰
  </para>



  <orderedlist>
   <listitem>
    <para>
     RAM 大小
    </para>
   </listitem>
   <listitem>
    <para>
     CPU 速度/實體 CPU 核心
    </para>
   </listitem>
   <listitem>
    <para>
     磁碟快取的大小
    </para>
   </listitem>
   <listitem>
    <para>
     硬碟/SSD 及其架構
    </para>
   </listitem>
  </orderedlist>

  <sect2 xml:id="sec-squid-ram">
   <title>RAM</title><indexterm>
   <primary> Squid</primary>
   <secondary> RAM</secondary></indexterm> 
   <para>
    Squid 所需的記憶體 (RAM) 容量與快取中的物件數量有直接的關係。隨機存取記憶體的速度比硬碟/SSD 快很多。因此，請務必讓 Squid 程序擁有足夠的記憶體，因為若其程序必須交換到磁碟，系統效能會大幅降低。
   </para>
   <para>
    Squid 也會將快取記憶體物件的參照以及常要求的物件儲存在主記憶體中以加速此資料的擷取速度。除此之外，Squid 需要在記憶體中保留其他的資料，例如所有已處理 IP 位址的表格、精確的網域名稱快取、最常要求的物件、存取控制清單、緩衝區等等。
   </para>



  </sect2>

  <sect2 xml:id="sec-squid-cpu">
   <title>CPU</title><indexterm>
   <primary> Squid</primary>
   <secondary> CPU</secondary></indexterm> 
   <para>
    Squid 已經過優化，在處理器核心數量較少 (4 - 8 個實體核心) 的情況下工作狀態最好，這樣每個核心都能提供出色的效能。像超執行緒這類提供虛擬核心的技術會影響效能。
   </para>
   <para>
    要充分利用多個 CPU 核心，必須設定多個寫入不同快取裝置的工作執行緒。預設情況下，多核心支援通常都處於停用狀態。
   </para>

  </sect2>

  <sect2 xml:id="sec-squid-sysneeds-cache-size">
   <title>磁碟快取的大小</title><indexterm>
   <primary> Squid</primary>
   <secondary> 快取記憶體</secondary>
   <tertiary> 大小</tertiary></indexterm> 
   <para>
    在小的快取中，<literal>HIT</literal> (發現要求的物件已在該處) 的機率比較小，因為快取很容易就會填滿，所以較少要求的物件會替換為新的物件。例如，如果快取的可用空間為 1 GB，而使用者一天僅瀏覽 10 MB，則需要 100 多天才會將快取填滿。
   </para>
   <para>
    確定所需快取大小的最簡易方法是考量連接的最大傳輸速率。1 Mbit/s 連接的最大傳輸速率為 128 KB/s。如果所有流量都流向快取，一個小時內這些量會達到 460 MB。假設所有流量都是在 8 小時工作時間產生，則一天內會達到 3.6 GB。由於連接一般都不會用到其容量上限，因此可以假設快取記憶體所處理的總資料容量大約為 2 GB。因此在本例中，Squid 需要 2 GB 磁碟空間來存放一天內快取的資料瀏覽量。
   </para>
  </sect2>

  <sect2 xml:id="sec-squid-sysneeds-disk">
   <title>硬碟/SSD 架構</title>

   <para>
    速度在快取處理過程中扮演很重要的角色，因此應該特別注意這個因素。對於硬碟/SSD，此參數稱為<emphasis>隨機搜尋時間</emphasis>或<emphasis>隨機讀取效能</emphasis>，按毫秒計算。因為 Squid 從硬碟/SSD 讀取或寫入其中的資料區塊通常都很小，所以硬碟/SSD 的搜尋時間/讀取效能比其資料輸送量更重要。
   </para>
   <para>
    若要用做代理，高轉速硬碟或 SSD 是最好的選擇。使用硬碟時，採用多個較小硬碟的效果可能更佳，因為每個硬碟都有單獨的快取目錄，可避免讀取次數過多。
   </para>
   <para>
    如果采用 RAID 系統，可以犧牲速度來提升可靠性。但是基於效能考量，請避免使用 (軟體) RAID5 及類似設定。
   </para>
   <para>
    檔案系統的選擇通常無關緊要。但是，使用掛接選項 <literal>noatime</literal> 可提升效能 - Squid 提供自己的時戳，因此無需檔案系統追蹤存取時間。
   </para>
  </sect2>
 </sect1>
 <sect1 xml:id="sec-squid-start">
  <title>Squid 基本用法</title><indexterm>

  <primary> Squid</primary>

  <secondary> 啟動</secondary></indexterm> 

  <para>
   如果尚未安裝套件 
   <package>squid</package>
   ，請予以安裝。預設情況下，<systemitem>SUSE® Linux Enterprise Server</systemitem> 上不會安裝 <phrase role="productname"><phrase os="sles">squid</phrase></phrase> 套件。
  </para><indexterm>

  <primary> 組態檔案</primary>

  <secondary> resolv.conf</secondary></indexterm> 

  <para>
   Squid 在 <phrase role="productname"><phrase os="sles">SUSE® Linux Enterprise Server</phrase></phrase> 中已經過預先設定，可在安裝後直接啟動。為了確保啟動更平順，應該將網路設定為至少使用一部名稱伺服器，而且可連接網際網路。如果撥號連接是使用動態 DNS 組態，就有可能產生問題。在此情況下，至少應指定名稱伺服器，因為如果 Squid 在 <filename>/etc/resolv.conf</filename> 中未偵測到 DNS 伺服器，就不會啟動。
  </para>

  <sect2 xml:id="sec-squid-start-commands">
   <title>啟動 Squid</title><indexterm>
   <primary>Squid</primary>
   <secondary>目錄</secondary></indexterm><indexterm>
   <primary>程序檔</primary>
   <secondary>init.d</secondary>
   <tertiary>squid</tertiary></indexterm><indexterm>
   <primary>Squid</primary>
   <secondary>權限</secondary></indexterm><indexterm>
   <primary>組態檔案</primary>
   <secondary>squid.conf</secondary></indexterm>
   <para>
    若要啟動 Squid，請使用︰
   </para>
<screen><prompt>tux &gt; </prompt><command>sudo systemctl start squid</command></screen>
   <para>
    若要讓 Squid 隨系統一起啟動，請使用 <command>systemctl enable squid</command> 啟用該服務。
   </para>
  </sect2>

  <sect2 xml:id="sec-squid-check">
   <title>檢查 Squid 是否正在運作</title>
   <para>
    若要檢查 Squid 是否正在執行，請選擇下列其中一種方式︰
   </para>
   <itemizedlist>
    <listitem>
     <para>
      使用 <command>systemctl</command>︰
     </para>
<screen><prompt>tux &gt; </prompt><command>systemctl status squid</command></screen>
     <para>
      此指令的輸出應指出 Squid <literal>已載入</literal>且<literal>在使用中 (執行中)</literal>。
     </para>
    </listitem>
    <listitem>
     <para>
      使用 Squid 自身︰
     </para>
<screen><prompt>tux &gt; </prompt><command>sudo squid -k check | echo $?</command></screen>
     <para>
      此指令的輸出應當為 <literal>0</literal>，但也可能包含其他警告或訊息。
     </para>
    </listitem>
   </itemizedlist>
   <para>
    若要測試 Squid 在本地系統上的功能，請選擇下列其中一種方式︰
   </para>
   <itemizedlist>
    <listitem>
     <para>
      若要進行測試，您可以使用指令行工具 <command>squidclient</command>，它可向 Web 要求輸出回應，類似於 <command>wget</command> 或 <command>curl</command>。
     </para>
     <para>
      與這些工具不同的是，<command>squidclient</command> 會自動連接至 Squid 的預設代理設定 <literal>localhost:3128</literal>。不過，如果您變更過 Squid 的組態，則需要透過指令行選項將 <command>squidclient</command> 設定為使用其他設定。如需詳細資訊，請參閱 <command>squidclient --help</command>。
     </para>
     <example xml:id="ex-squidclient-request">
      <title>使用 <command>squidclient</command> 提交的要求</title>
<screen><prompt>tux &gt; </prompt><command>squidclient http://www.example.org</command>
HTTP/1.1 200 OK
Cache-Control: max-age=604800
Content-Type: text/html
Date: Fri, 22 Jun 2016 12:00:00 GMT
Expires: Fri, 29 Jun 2016 12:00:00 GMT
Last-Modified: Fri, 09 Aug 2013 23:54:35 GMT
Server: ECS (iad/182A)
Vary: Accept-Encoding
X-Cache: HIT
x-ec-custom-error: 1
Content-Length: 1270
X-Cache: MISS from moon<co xml:id="co-squid-miss"/>
X-Cache-Lookup: MISS from moon:3128
Via: 1.1 moon (squid/3.5.16)<co xml:id="co-squid-via"/>
Connection: close

&lt;!doctype html&gt;
&lt;html&gt;
&lt;head&gt;
    &lt;title&gt;Example Domain&lt;/title&gt;
[...]
&lt;/body&gt;
&lt;/html&gt;</screen>
      <para>
       <xref linkend="ex-squidclient-request"/>中顯示的輸出可以分成兩個部分︰
      </para>
      <orderedlist>
       <listitem>
        <para>
         回應的通訊協定標題︰空白行前面的幾行。
        </para>
       </listitem>
       <listitem>
        <para>
         回應的實際內容︰空白行後面的幾行。
        </para>
       </listitem>
      </orderedlist>
      <para>
       若要驗證是否使用了 Squid，請參閱所選的標題行︰
      </para>
      <calloutlist>
       <callout arearefs="co-squid-miss">
        <para>
         標題 <literal>X-Cache</literal> 的值指明所要求的文件不在電腦 <systemitem>moon</systemitem> 的 Squid 快取中 (<literal>MISS</literal>)。
        </para>
        <para>
         上面的範例包含兩行 <literal>X-Cache</literal>。您可以忽略第一個 <literal>X-Cache</literal> 標題，因為它是由來源 Web 伺服器的內部快取軟體產生。
        </para>
       </callout>
       <callout arearefs="co-squid-via">
        <para>
         標題 <literal>Via</literal> 的值指明 HTTP 版本、電腦名稱和正在使用的 Squid 的版本。
        </para>
       </callout>
      </calloutlist>
     </example>
    </listitem>
    <listitem>
     <para>
      使用瀏覽器︰將代理設定為 <option>localhost</option>，連接埠設定為 <option>3128</option>。然後，您可以載入一個頁面，並在瀏覽器的<emphasis>審查器</emphasis>或<emphasis>開發人員工具</emphasis>的<guimenu>網路</guimenu>面板中檢查回應標題。該標題應該會以<xref linkend="ex-squidclient-request"/>中所述的類似方式再次產生。
     </para>
    </listitem>
   </itemizedlist>
   <para>
    若要允許本地系統和其他系統的使用者存取 Squid 和網際網路，請將 <filename>/etc/squid/squid.conf</filename> 組態檔中的 <option>http_access deny all</option> 項目變更為 <option>http_access allow all</option>。然而，當您這麼做時，請考量到此動作將使 Squid 可供任何人完全存取。因此，需定義用於控制對代理的存取權限的 ACL (存取控制清單)。修改組態檔案後，必須重新載入或重新啟動 Squid。如需 ACL 的詳細資訊，請參閱<xref linkend="sec-squid-acl"/>。
   </para><indexterm>
   <primary>Squid</primary>
   <secondary>記錄檔案</secondary></indexterm><indexterm>
   <primary>記錄檔案</primary>
   <secondary>Squid</secondary></indexterm><indexterm>
   <primary>Squid</primary>
   <secondary>疑難排解</secondary></indexterm>
   <para>
    如果 Squid 在成功啟動後，仍然於一小段時間後即停止運作，請檢查是否有錯誤的名稱伺服器項目，或者是否缺少 <filename>/etc/resolv.conf</filename> 檔案。Squid 會在 <filename>/var/log/squid/cache.log</filename> 檔案中記錄啟動失敗的原因。
   </para>
  </sect2>

  <sect2 xml:id="sec-squid-stop">
   <title>停止、重新載入和重新啟動 Squid</title><indexterm>
   <primary> Squid</primary>
   <secondary> 停止</secondary></indexterm> 
   <para>
    請使用 <command>systemctl reload squid</command> 完成此動作。或者也可以使用 <command>systemctl restart squid</command> 完全重新啟動 Squid。
   </para>
   <para>
    <command>systemctl stop squid</command> 指令可關閉 Squid。這可能需要花一段時間，因為 Squid 會在中斷與用戶端的連接並將其資料寫入磁碟前，先等待半分鐘 (在 <filename>/etc/squid/squid.conf</filename> 中的 <option>shutdown_lifetime</option> 選項)。
   </para>
   <warning>
    <title>終止 Squid</title>
    <para>
     <indexterm>
     <primary> Squid</primary>
     <secondary> 快取記憶體</secondary>
     <tertiary> 損毀</tertiary>
     </indexterm> 使用 <command>kill</command> 或 <command>killall</command> 終止 Squid 可能會損毀快取記憶體。若要能夠重新啟動 Squid，必須刪除損毀的快取。
    </para>
   </warning>
  </sect2>

  <sect2 xml:id="sec-squid-remove">
   <title>移除 Squid</title><indexterm>
   <primary> Squid</primary>
   <secondary> 解除安裝</secondary></indexterm> 
   <para>
    從系統中移除 Squid 並不會移除快取階層與記錄檔案。若要移除這些階層，請手動刪除 <filename>/var/cache/squid</filename> 目錄。
   </para>
  </sect2>

  <sect2 xml:id="sec-squid-start-local-dns">
   <title>本地 DNS 伺服器</title><indexterm>
   <primary>DNS</primary>
   <secondary>Squid 與</secondary></indexterm><indexterm>
   <primary>Squid</primary>
   <secondary>DNS</secondary></indexterm><indexterm>
   <primary>組態檔案</primary>
   <secondary>named.conf</secondary></indexterm>
   <para>
    即使本地 DNS 伺服器不管理自己的網域，也可以設定本地 DNS 伺服器。它可以做為僅供快取的名稱伺服器，也可以透過根 名稱伺服器來解析 DNS 要求，而不需任何特殊的組態 (請參閱<xref linkend="sec-dns-bind"/>)。如何達成此目的，端視您在設定網際網路連線的組態時，是否選擇動態的 DNS 而定。
   </para>
   <variablelist>
    <varlistentry xml:id="vle-squid-dynamicdns">
     <term>動態 DNS</term>
     <listitem>
      <para>
       一般而言，使用動態 DNS 時，會由提供者在建立網際網路連接期間設定 DNS 伺服器，且 <filename>/etc/resolv.conf</filename> 本地檔案會自動進行調整。可以使用以下 sysconfig 變數在檔案 <filename>/etc/sysconfig/network/config</filename> 中控制此行為︰
       <constant>NETCONFIG_DNS_POLICY</constant> 。設定
       <constant>NETCONFIG_DNS_POLICY</constant> 至 <constant>""</constant>
       (使用 YaST sysconfig 編輯器)。
      </para>
      <para>
       然後在 <filename>/etc/resolv.conf</filename> 檔案中新增本地 DNS 伺服器，並將 <systemitem class="domainname">localhost</systemitem> 的 IP 位址設定為 <systemitem class="ipaddress">127.0.0.1</systemitem>。這樣，Squid 每次啟動時就能找到本地名稱伺服器。
      </para>
      <remark>FIXME ke: check it. Do you have to set more variables?</remark>
      <para>
       為了使提供者的名稱伺服器可供存取，請在 <filename>/etc/named.conf</filename> 組態檔案中的 <systemitem>forwarders</systemitem> 下指定該名稱伺服器及其 IP 位址。若使用動態 DNS，則可在建立連接時自動完成上述操作，方法是將 sysconfig 變數
       <constant>NETCONFIG_DNS_POLICY</constant>  設定為  <constant>auto</constant>。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>靜態 DNS</term>
     <listitem>
      <para>
       若使用靜態 DNS，建立連接時將不會執行任何自動的 DNS 調整，所以不必變更任何 sysconfig 變數。但是您必須依照<xref linkend="vle-squid-dynamicdns"/>中所述在 <filename>/etc/resolv.conf</filename> 檔案中指定本地 DNS 伺服器。除此之外，還必須在 <filename>/etc/named.conf</filename> 檔案中的 <systemitem>forwarders</systemitem> 下手動指定提供者的靜態名稱伺服器及其 IP 位址。
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
   <tip>
    <title>DNS 與防火牆</title>
    <para>
     如果您有執行防火牆，請確定 DNS 要求可以通過防火牆。
    </para>
   </tip>
  </sect2>
 </sect1>
 <sect1 xml:id="sec-squid-configfile">
  <title>/etc/squid/squid.conf 組態檔案</title><indexterm>

  <primary>Squid</primary>

  <secondary>組態</secondary></indexterm><indexterm>

  <primary>組態</primary>

  <secondary>Squid</secondary></indexterm><indexterm>

  <primary>組態檔案</primary>

  <secondary>squid.conf</secondary></indexterm>

  <para>
   所有的 Squid 代理伺服器的設定值都是在 <filename>/etc/squid/squid.conf</filename> 檔案中設定。在第一次啟動 Squid 時，此檔案不需做任何變更，但是外部用戶端一開始為拒絕存取。代理可供 <systemitem class="domainname">localhost</systemitem> 使用。預設的連接埠是 <option>3128</option>。預先安裝的 <filename>/etc/squid/squid.conf</filename> 組態檔可提供關於選項及許多範例的詳細資訊。
  </para>

  <para>
   許多項目標有備註，因此以備註字元 <literal>#</literal> 開頭。相關規格請見行尾。<remark>FIXME: Where is that not the case? - sknorr, 2016-06-05</remark>給定值一般與預設值相關聯，因此僅移除備註符號而不變更任何參數通常毫無效果。若有可能，請保留原始的備註行，在該行的下方插入選項以及修改過的值。如此一來，就可以輕易復原預設值，並與變更做比較。
  </para>

  <tip>
   <title>在更新後調整組態檔案</title>
   <para>
    如果您是從較早的 Squid 版本更新，建議您編輯新的 <filename>/etc/squid/squid.conf</filename>，並且只套用在舊檔案中所做的變更。
   </para>
   <para>
    有時候，該檔案中會新增、移除或修改 Squid 選項。因此，如果您嘗試使用舊的 <filename>squid.conf</filename>，Squid 可能會無法正常運作。
   </para>
  </tip>

  <sect2 xml:id="sec-squid-configfile-general">
   <title>一般組態選項</title>
   <para>
    下面列出了 Squid 的一些組態選項，但並不詳盡。<filename>/etc/squid/squid.conf.documented</filename> 中列出了 Squid 套件的完整選項清單，其中僅做了簡單記錄。
   </para>
   <variablelist>
    <varlistentry>
     <term><literal>http_port <replaceable>連接埠</replaceable></literal>
     </term>
     <listitem>
      <para>
       這是 Squid 傾聽用戶端要求所用的連接埠。預設的連接埠是 <option>3128</option>，但是 <option>8080</option> 也是常用的連接埠。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>
       <literal>cache_peer <replaceable>主機名稱</replaceable>
       <replaceable> 類型</replaceable> <replaceable> 代理連接埠</replaceable> <replaceable> ICP 連接埠</replaceable></literal>
     </term>
     <listitem>
      <para>
       此選項允許建立協同工作的快取網路。快取對等是一台同樣代管網路快取且與您自己的電腦有某種關係的電腦。<replaceable>類型</replaceable>指定關係的類型。類型可以是 <literal>parent</literal> 或 <literal>sibling</literal>。
      </para>
      <para>
       對於<replaceable>主機名稱</replaceable>，請指定要使用的代理的名稱或 IP 位址。對於<replaceable>代理連接埠</replaceable>，請指定瀏覽器中要使用的連接埠號碼 (通常為 <option>8080</option>)。將 <replaceable>ICP 連接埠</replaceable>設定為 <option>7</option>，如果上層的 ICP 連接埠未知且其用途與提供者無關，則設定為 <option>0</option>。
      </para>
      <para>
       若要讓 Squid 以網頁瀏覽器而非代理的方式工作，請禁止使用 ICP 通訊協定。您可以附加選項 <option>default</option> 和 <option>no-query</option> 來實現此目的。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><literal>cache_mem <replaceable>大小</replaceable></literal>
     </term>
     <listitem>
      <para>
       此選項定義 Squid 可用於常用回覆的記憶體容量。預設值為 <option>8 MB</option>。這不指定 Squid 的記憶體使用量，而且可以超過。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>
       <literal>cache_dir <replaceable>儲存類型</replaceable> <replaceable> 快取目錄</replaceable>
       <replaceable> 快取大小</replaceable>
       <replaceable> 層級 1 目錄</replaceable>
       <replaceable> 層級 2 目錄</replaceable></literal>
     </term>
     <listitem>
      <para>
       選項 <literal>cache_dir</literal> 定義磁碟快取的目錄。在 <phrase role="productname"><phrase os="sles">SUSE Linux Enterprise Server</phrase></phrase> 上的預設組態中，Squid 不會建立磁碟快取。
      </para>
      <para>
       預留位置<replaceable>儲存類型</replaceable>可以是下列其中一種︰
      </para>
      <itemizedlist>
       <listitem>
        <para>
         目錄式儲存類型︰<literal>ufs</literal>、<literal>aufs</literal> (預設類型)、<literal>diskd</literal>。這三類都是 <literal>ufs</literal> 儲存形式的變體。不過，雖然 <literal>ufs</literal> 是做為核心 Squid 執行緒的一部分執行，但 <literal>aufs</literal> 是在單獨的執行緒中執行，而 <literal>diskd</literal> 則使用單獨的程序。這表示後兩種類型可避免因磁碟 I/O 而封鎖 Squid。
        </para>
       </listitem>
       <listitem>
        <para>
         資料庫式儲存系統︰<literal>rock</literal>。此儲存形式依賴於單一資料庫檔案，在此檔案中，每個物件佔用固定大小的一或多個記憶體單位 (<quote>插槽</quote>)。
        </para>
       </listitem>
      </itemizedlist>
      <para>
       下文將只介紹基於 <literal>ufs</literal> 的儲存類型的參數。<literal>rock</literal> 的參數有些不同。
      </para>
      <para>
       <replaceable>快取目錄</replaceable>是磁碟快取的目錄，預設為 <filename>/var/cache/squid</filename>。<replaceable>快取大小</replaceable>是該目錄的最大大小 (以 MB 為單位)，預設設定為 100 MB。請將其設定為介於可用磁碟空間的 50% 和最大 80% 之間的值。
      </para>
      <para>
       最後兩個值<replaceable>層級 1 目錄</replaceable>和<replaceable>層級 2 目錄</replaceable>指定<replaceable>快取目錄</replaceable>中建立的子目錄數。預設情況下，在<replaceable>快取目錄</replaceable>下的第一層級會建立 16 個子目錄，其中每個子目錄下又有 256 個子目錄。提高這些值時請務必謹慎，因為建立太多目錄會導致效能問題。
      </para>
      <para>
       如果您有數個共用一個快取的磁碟，請指定數行 <option>cache_dir</option>。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><option>cache_access_log <replaceable>記錄檔案</replaceable></option>
     </term>
     <term><option>cache_log <replaceable>記錄檔案</replaceable></option>
     </term>
     <term><option>cache_store_log <replaceable>記錄檔案</replaceable></option>
     </term>
     <listitem>
      <para>
       <indexterm>
       <primary> Squid</primary>
       <secondary> 記錄檔案</secondary>
       </indexterm> <indexterm>
       <primary>   記錄檔案 </primary>
       <secondary>Squid </secondary>
       </indexterm> 這三個選項指定 Squid 用於記錄其所有動作的路徑。一般情況下，無需變更此處的任何設定。如果 Squid 負荷過重，則可能需要將快取與記錄檔案分散到數個磁碟上。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><option>client_netmask <replaceable>網路遮罩</replaceable></option>
     </term>
     <listitem>
      <para>
       此選項允許透過套用子網路遮罩在記錄檔案中遮罩用戶端的 IP 位址。例如，若要將 IP 位址的最後一位設定為 <literal>0</literal>，請指定 <systemitem class="netmask">255.255.255.0</systemitem>。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><option>ftp_user <replaceable>電子郵件</replaceable></option>
     </term>
     <listitem>
      <para>
       此選項允許設定 Squid 應該用於匿名 FTP 登入的密碼。請在此處指定有效的電子郵件地址，因為一些 FTP 伺服器會檢查這些資料的有效性。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><option>cache_mgr <replaceable>電子郵件</replaceable></option>
     </term>
     <listitem>
      <para>
       如果 Squid 意外當機，將會向此電子郵件地址傳送一封郵件。預設值為<emphasis>網站管理員</emphasis>。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><option>logfile_rotate <replaceable>值</replaceable></option>
     </term>
     <listitem>
      <para>
       如果您執行 <command>squid</command> <option>-k rotate</option>，則 <command>Squid</command> 會輪替記錄檔案。在此程序中會計算檔案的數量，而且在到達指定的值後，就會覆寫最舊的檔案。預設值為 <option>10</option>，表示輪替編號為 0 到 9 的記錄檔案。
      </para>
      <para>
       但是，在 <phrase role="productname"><phrase os="sles">SUSE Linux Enterprise Server</phrase></phrase> 上，記錄檔案的輪替是透過使用 <systemitem class="daemon">logrotate</systemitem> 和組態檔案 <filename>/etc/logrotate.d/squid</filename> 自動執行的。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><option>append_domain <replaceable>網域</replaceable></option>
     </term>
     <listitem>
      <para>
       使用 <emphasis>append_domain</emphasis> 可指定當未指定網域時自動附加的網域。通常可在此處指定您自己的網域，因此在瀏覽器中指定 <emphasis>www</emphasis> 將存取您自己的 Web 伺服器。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><option>forwarded_for <replaceable>狀態</replaceable></option>
     </term>
     <listitem>
      <para>
       如果此選項設定為 <literal>on</literal>，則會將如下所示的一行新增至標題︰
      </para>
<screen>X-Forwarded-For: 192.168.0.1</screen>
      <para>
       如果您將選項設定為 <literal>off</literal>，則 Squid 會從 HTTP 要求中移除用戶端的 IP 位址及系統名稱。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><option>negative_ttl <replaceable>時間</replaceable></option>
     </term>
     <term><option>negative_dns_ttl <replaceable>時間</replaceable></option>
     </term>
     <listitem>
      <para>
       如果設定了這些選項，Squid 將快取某些類型的失敗，例如 <literal>404</literal> 回應。之後，它將拒絕發出新要求，即使當時資源可供使用。
      </para>
      <para>
       預設情況下，<option>negative_ttl</option> 設定為 <literal>0</literal>，<option>negative_dns_ttl</option> 設定為 <literal>1 minute</literal>。這表示預設情況下不會快取對 Web 要求的負面回應，但會將 DNS 要求的負面回應快取 1 分鐘。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><option>never_direct allow <replaceable>ACL 名稱</replaceable></option>
     </term>
     <listitem>
      <para>
       為了防止 Squid 接受直接來自網際網路的要求，請使用選項 <literal>never_direct</literal> 以強制連接連到另一個代理。事先必須已在 <option>cache_peer</option> 中指定該代理。如果將 <replaceable>ACL 名稱</replaceable>指定為 <literal>all</literal>，則所有要求將直接轉送至 <literal>parent</literal>。有時這可能是必要的，例如，您所使用的提供者規定了其代理的使用方式或拒絕其防火牆直接存取網際網路時。
      </para>
      <remark>
       Last sentence sounds as if from another era... Does it still make sense?
       - sknorr, 2016-07-07
      </remark>
     </listitem>
    </varlistentry>
   </variablelist>
  </sect2>

  <sect2 xml:id="sec-squid-acl">
   <title>存取控制的選項</title><indexterm>
   <primary>Squid</primary>
   <secondary>ACL</secondary></indexterm><indexterm>
   <primary>Squid</primary>
   <secondary>權限</secondary></indexterm>
   <para>
    Squid 會提供一個詳細系統來控制代理存取。這些存取控制清單 (ACL) 都是包含依順序處理的規則的清單。在使用 ACL 前必須先進行定義。某些預設的 ACL，例如 <literal>all</literal> 與 <literal>localhost</literal> 已經存在。然而，僅定義 ACL 並不代表實際上會套用。僅當存在對應的 <option>http_access</option> 規則時才會套用。
   </para>
   <para>
    選項 <option>acl</option> 的語法如下所示︰
   </para>
<screen>acl <replaceable>ACL_NAME</replaceable> <replaceable>TYPE</replaceable> <replaceable>DATA</replaceable></screen>
   <para>
    此語法中的預留位置含義如下所示︰
   </para>
   <itemizedlist>
    <listitem>
     <para>
      名稱 <replaceable>ACL_NAME</replaceable> 可以隨意選擇。
     </para>
    </listitem>
    <listitem>
     <para>
      對於 <replaceable>TYPE</replaceable>，<filename>/etc/squid/squid.conf</filename> 檔案的 <literal>ACCESS CONTROLS</literal> 區段中提供了多個不同的選項，您可以從中選取。
     </para>
    </listitem>
    <listitem>
     <para>
      <replaceable>DATA</replaceable> 的規格視個別的 ACL 類型而定，也可以從檔案讀取。例如，<quote>透過</quote>主機名稱、IP 位址或 URL。
     </para>
    </listitem>
   </itemizedlist>
   <para>
    如需 ACL 規則類型的詳細資訊，請參閱 <link xlink:href="http://www.squid-cache.org/Versions/v3/3.5/cfgman/acl.html"/> 上的 Squid 文件。
   </para>
   <example xml:id="ex-squid-school">
    <title>定義 ACL 規則</title>
<screen>
acl mysurfers srcdomain .example.com <co xml:id="co-squid-school-surfer"/>
acl teachers src 192.168.1.0/255.255.255.0 <co xml:id="co-squid-school-teacher"/>
acl students src 192.168.7.0-192.168.9.0/255.255.255.0 <co xml:id="co-squid-school-student"/>
acl lunch time MTWHF 12:00-15:00 <co xml:id="co-squid-school-time"/>
</screen>
    <calloutlist>
     <callout arearefs="co-squid-school-surfer">
      <para>
       此 ACL 將 <literal>mysurfers</literal> 定義為來自 <literal>.example.com</literal> 中的所有使用者 (由 IP 的反向查閱確定)。
      </para>
     </callout>
     <callout arearefs="co-squid-school-teacher">
      <para>
       此 ACL 將 <literal>teachers</literal> 定義為 IP 位址以 <literal>192.1 8.1.</literal> 開頭的電腦的使用者。
      </para>
     </callout>
     <callout arearefs="co-squid-school-student">
      <para>
       此 ACL 將 <literal>students</literal> 定義為 IP 位址以 <literal>192.168.7.</literal>、<literal>192.168.8.</literal> 或 <literal>192.168.9.</literal> 開頭的電腦的使用者。
      </para>
     </callout>
     <callout arearefs="co-squid-school-time">
      <para>
       此 ACL 將 <literal>lunch</literal> 定義為星期一至星期五的中午到下午 3 點的時間。
      </para>
     </callout>
    </calloutlist>
   </example>
   <variablelist>
    <varlistentry>
     <term>http_access allow <replaceable>ACL 名稱</replaceable>
     </term>
     <listitem>
      <para>
       <option>http_access</option> 定義哪些人可使用代理，以及哪些人可存取網際網路的哪些內容。為此必須定義 ACL。上文中已經定義了 <literal>localhost</literal> 和 <literal>all</literal>，您可以透過 <literal>deny</literal> 或 <literal>allow</literal> 拒絕或允許對它們的存取。您可以建立包含任何數量 <option>http_access</option> 項目的清單，並依從上到下的順序處理。系統會依據出現的先後順序允許或拒絕存取相應的 URL。最後一個項目應該永遠為 <option>http_access deny all</option>。在下面的範例中，<literal>localhost</literal> 可隨意存取任何內容，而所有其他的主機則完全被拒絕存取︰
      </para>
<screen>
http_access allow localhost
http_access deny all
</screen>
      <para>
       在另一個使用這些規則的範例中，<systemitem class="groupname">teachers</systemitem> 群組永遠具有網際網路的存取權。群組 <systemitem class="groupname">students</systemitem> 僅在星期一至星期五的午餐時間才有存取權︰
      </para>
<screen>
http_access deny localhost
http_access allow teachers
http_access allow students lunch time
http_access deny all
</screen>
      <para>
       基於可讀性考量，請在組態檔案 <filename>/etc/squid/squid.conf</filename> 中將所有 <option>http_access</option> 選項指定在一個區塊中。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><option>url_rewrite_program <replaceable>路徑</replaceable></option>
     </term>
     <listitem>
      <para>
       此選項可用於指定 URL 重寫器。例如，它可以是 squidGuard (<filename>/usr/sbin/squidGuard</filename>)，以便允許封鎖不需要的 URL。藉由此選項，可以透過代理驗證和適當的 ACL 針對各類使用者群組單獨控制網際網路存取權限。
      </para>
      <para>
       如需 squidGuard 的詳細資訊，請參閱<xref linkend="sec-squid-squidguard"/>。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><option>auth_param basic program <replaceable>路徑</replaceable></option>
     </term>
     <listitem>
      <para>
       如果必須在代理上對使用者進行驗證，請設定對應的程式，例如 <filename>/usr/sbin/pam_auth</filename>。當第一次存取 <command>pam_auth</command> 時，使用者會看到需要其指定使用者名稱與密碼的登入視窗。此外，您還需要一個 ACL，以便僅讓具備有效登入的用戶端使用網際網路︰
      </para>
<screen>
acl password proxy_auth REQUIRED

http_access allow password
http_access deny all
</screen>
      <para>
       在 <option>acl proxy_auth</option> 選項中，使用 <literal>REQUIRED</literal> 表示接受所有有效的使用者名稱。<literal>REQUIRED</literal> 還可以替換為允許的使用者名稱清單。
      </para>
      <remark>
       FIXME: last sentence used to end in "or with the path to such a list."
       Squid documentation does not mention this possibility, so removing this
       for the moment. - sknorr, 2016-07-07
      </remark>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><option>ident_lookup_access allow <replaceable>ACL 名稱</replaceable></option>
     </term>
     <listitem>
      <para>
       藉由此選項，可以執行 ident 要求，以便為類型為 <literal>src</literal> 的 ACL 定義的所有用戶端確定每個使用者的身分。或者，可以針對所有用戶端使用此選項，對於 <replaceable>ACL 名稱</replaceable>，則套用預先定義的 ACL <literal>all</literal>。
      </para>
      <para>
       <option>ident_lookup_access</option> 涵蓋的所有用戶端都必須執行 ident 精靈。在 Linux 上，您可以將 <systemitem class="daemon">pidentd</systemitem> (
       <package>pidentd</package>
       套件) 用做 ident 精靈。對於其他作業系統，通常有免費的軟體可供使用。若要確保只有 ident 查閱成功的用戶端才有權存取，請定義對應的 ACL︰
      </para>
<screen>
acl identhosts ident REQUIRED

http_access allow identhosts
http_access deny all
</screen>
      <para>
       在 <option>acl identhosts ident</option> 選項中，使用 <literal>REQUIRED</literal> 表示接受所有有效的使用者名稱。<literal>REQUIRED</literal> 還可以替換為允許的使用者名稱清單。
      </para>
      <para>
       使用 <literal>ident</literal> 會延緩存取時間，因為對每個要求都要重複 ident 查閱。
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </sect2>
 </sect1>
 <sect1 xml:id="sec-squid-proxyconfigtrans">
  <title>設定操作順暢的代理</title><indexterm>

  <primary>proxy</primary>

  <secondary>操作順暢</secondary></indexterm><indexterm>

  <primary>Squid</primary>

  <secondary>操作順暢的 Proxy</secondary></indexterm>

  <para>
   使用代理伺服器的一般方式如下︰網頁瀏覽器將要求傳送至代理伺服器的某個連接埠，而代理伺服器永遠都會提供這些所需物件，無論它們是否在快取中。不過，在某些情況下，Squid 的透明代理模式很有效︰
  </para>

  <itemizedlist>
   <listitem>
    <para>
     若出於安全原因，建議所有的用戶端都使用代理瀏覽網際網路。
    </para>
   </listitem>
   <listitem>
    <para>
     若所有的用戶端都必須使用代理，不論它們是否清楚這一點。
    </para>
   </listitem>
   <listitem>
    <para>
     若網路上的代理已轉移，但現有的用戶端需要保留其原有的組態。
    </para>
   </listitem>
  </itemizedlist>

  <para>
   透明代理會攔截並回應網頁瀏覽器的要求，因此網頁瀏覽器可收到所要求的頁面，但並不知道它們來自何處。顧名思義，整個過程對於使用者而言是透明的。
  </para>

  <procedure xml:id="pro-squid-transparent">
   <title>Squid 充當透明代理</title>
   <step>
    <para>
     在 <filename>/etc/squid/squid.conf</filename> 的 <option>http_port</option> 選項行中新增 <literal>transparent</literal> 參數︰
    </para>
<screen>http_port 3128 transparent</screen>
   </step>
   <step>
    <para>
     重新啟動 Squid︰
    </para>
<screen><prompt>tux &gt; </prompt><command>sudo systemctl restart squid</command></screen>
   </step>
   <step>
    <para>
     設定 SuSEFirewall2 以將 HTTP 流量重新導向至 <option>http_proxy</option> 中指定的連接埠 (在上例中為 3128)。若要執行此動作，請編輯組態檔案 <filename>/etc/sysconfig/SuSEfirewall2</filename>。
    </para>
    <para>
     此範例假設您使用的是以下裝置︰
    </para>
    <itemizedlist>
     <listitem>
      <para>
       指向網際網路的裝置︰<literal>FW_DEV_EXT="eth1"</literal>
      </para>
     </listitem>
     <listitem>
      <para>
       指向網路的裝置︰<literal>FW_DEV_INT="eth0"</literal>
      </para>
     </listitem>
    </itemizedlist>
    <para>
     在防火牆上定義供不受信任的 (外部) 網路 (如網際網路) 存取的連接埠與服務 (請參閱 <filename>/etc/services</filename>)。在此範例中，僅提供對外的 Web 服務︰
    </para>
<screen>
FW_SERVICES_EXT_TCP="www"
</screen>
    <para>
     在從安全 (內部) 網路存取的防火牆上，定義埠或服務 (請參閱 <filename>/etc/services</filename>)，兩者都是透過 TCP 與 UDP 服務︰
    </para>
<screen>
FW_SERVICES_INT_TCP="domain www 3128"
FW_SERVICES_INT_UDP="domain"
</screen>
    <remark>
    FIXME: If I understand the comment above FW_REDIRECT in the config
    correctly, we don't need to mention 3128 here anymore. - sknorr, 2016-07-11
   </remark>
    <para>
     如此可允許存取 Web 服務與 Squid (預設埠為 <option>3128</option>)。<quote>domain</quote> 服務代表 DNS (網域名稱服務)。這個服務使用非常普遍。否則，只需從上述項目中移除 <literal>domain</literal> 並將以下選項設定為 <literal>no</literal>︰
    </para>
<screen>FW_SERVICE_DNS="yes"</screen>
    <para>
     <option>FW_REDIRECT</option> 這一選項十分重要，因為它的作用是將 HTTP 流量實際重新導向至特定的連接埠。組態檔案會在選項上面的備註中對語法進行解釋︰
    </para>
<screen># Format:
# list of &lt;source network&gt;[,&lt;destination network&gt;,&lt;protocol&gt;[,dport[:lport]]
# Where protocol is either tcp or udp. dport is the original
# destination port and lport the port on the local machine to
# redirect the traffic to
#
# An exclamation mark in front of source or destination network
# means everything EXCEPT the specified network</screen>
    <para>
     即︰
    </para>
    <orderedlist>
     <listitem>
      <para>
       指定存取代理防火牆的內部網路的 IP 位址與網路遮罩。
      </para>
     </listitem>
     <listitem>
      <para>
       指定這些用戶端的要求傳送至的 IP 位址與網路遮罩。如果是網頁瀏覽器，請將網路指定為 <literal>0/0</literal>，萬用字元表示<quote>可到任何位置</quote>
      </para>
     </listitem>
     <listitem>
      <para>
       指定這些要求最初傳送至的連接埠。
      </para>
     </listitem>
     <listitem>
      <para>
       指定要將所有這些要求重新導向至的連接埠。在下面的範例中，只有 Web 服務 (連接埠 <literal>80</literal>) 會重新導向至代理連接埠 (連接埠 <literal>3128</literal>)。如果要新增更多網路或服務，請在相應項目中使用空格進行分隔。
      </para>
      <para>
       由於 Squid 支援除 HTTP 以外的通訊協定，您還可以將要求從其他連接埠重新導向至代理。例如，您還可以重新導向連接埠 21 (FTP) 和 443 (HTTPS 或 SSL)。
      </para>
     </listitem>
    </orderedlist>
    <para>
     因此，對於 Squid 組態，您可以使用︰
    </para>
<screen>FW_REDIRECT="192.168.0.0/16,0/0,tcp,80,3128"</screen>
   </step>
   <step>
    <para>
     在組態檔案 <filename>/etc/sysconfig/SuSEfirewall2</filename> 中，請確定 <option>START_FW</option> 這一項設定為 <literal>"yes"</literal>。
    </para>
   </step>
   <step>
    <para>
     重新啟動 SuSEFirewall2︰
    </para>
<screen><prompt>tux &gt; </prompt><command>sudo systemctl restart SuSEfirewall2</command></screen>
   </step>
   <step>
    <para>
     若要確認一切正常，請查看 <filename>/var/log/squid/access.log</filename> 中的 Squid 記錄檔案。若要確認是否已正確設定所有的連接埠，請從您的網路外的任何電腦對本機器上的連接埠進行掃描。只應開啟 Web 服務 (埠 80)。若要使用 <command>nmap</command> 掃描連接埠，請使用以下指令︰
    </para>
<screen><command>nmap</command> <option>-O <replaceable>IP_ADDRESS</replaceable></option></screen>
   </step>
  </procedure>
 </sect1>
 <sect1 xml:id="sec-squid-cachemgr">
  <title>使用 Squid 快取管理員 CGI 介面 (<systemitem class="resource">cachemgr.cgi</systemitem>)</title><indexterm>

  <primary>Squid</primary>

  <secondary>統計資料</secondary></indexterm><indexterm>

  <primary>Squid</primary>

  <secondary>cachemgr.cgi</secondary></indexterm>

  <para>
   Squid 快取管理員 CGI 介面 (<filename>cachemgr.cgi</filename>) 是一種 CGI 公用程式，用來顯示執行中 Squid 程序的記憶體使用量統計資料。您也可以用它來方便地管理快取和檢視統計資料，因為不需要登入伺服器。
  </para>



  <procedure xml:id="pro-squid-setup-cachemgr">
   <title>設定 <systemitem class="resource">cachemgr.cgi</systemitem></title>
   <step>
    <para>
     確定 Apache Web 伺服器正在系統上執行。依<xref linkend="cha-apache2"/> 中所述方式設定 Apache。請著重參閱<xref linkend="sec-apache2-cgi"/>。若要檢查 Apache 是否已在執行中，請使用︰
    </para>
<screen><prompt>tux &gt; </prompt><command>sudo systemctl status apache2</command></screen>
    <para>
     若顯示 <literal>inactive</literal>，您可以使用 <phrase role="productname"><phrase os="sles">SUSE Linux Enterprise Server</phrase></phrase> 預設設定啟動 Apache︰
    </para>
<screen><prompt>tux &gt; </prompt><command>sudo systemctl start apache2</command></screen>
   </step>
   <step>
    <para>
     現在，在 Apache 中啟用 <systemitem class="resource">cachemgr.cgi</systemitem>。為此，請為 <literal>ScriptAlias</literal> 建立一份組態檔案。
    </para>
    <para>
     在目錄 <filename>/etc/apache2/conf.d</filename> 中建立該檔案，並將其命名為 <filename>cachemgr.conf</filename>。在該檔案中新增下列內容︰
    </para>

<screen>ScriptAlias /squid/cgi-bin/ /usr/lib64/squid/

&lt;Directory "/usr/lib64/squid/"&gt;
Options +ExecCGI
AddHandler cgi-script .cgi
Require host <replaceable>HOST_NAME</replaceable>
&lt;/Directory&gt;
</screen>
    <para>
     將 <replaceable>HOST_NAME</replaceable> 替換為您要用於存取 <systemitem class="resource">cachemgr.cgi</systemitem> 的電腦的主機名稱。這樣可限制只有您的電腦方可存取 <systemitem class="resource">cachemgr.cgi</systemitem>。若要允許從任何位置存取該檔案，請改用 <literal>Require all granted</literal>。
    </para>


   </step>
   <step>
    <itemizedlist>
     <listitem>
      <para>
       如果 Squid 與您的 Apache Web 伺服器在同一台電腦上執行，則無需對 <filename>/etc/squid/squid.conf</filename> 進行任何變更，但需驗證 <filename>/etc/squid/squid.conf</filename> 是否包含以下幾行︰
      </para>

<screen>
  http_access allow manager localhost
  http_access deny manager
  </screen>
      <para>
       這幾行允許您從自己的電腦 (<literal>localhost</literal>) 存取管理員介面，但不允許從其他位置存取。
      </para>
     </listitem>
     <listitem>
      <para>
       如果 Squid 與您的 Apache Web 伺服器不在同一台電腦上執行，您需要新增其他規則，以便允許從 Squid 的 CGI 程序檔存取。為您的伺服器定義 ACL (將 <replaceable>WEB_SERVER_IP</replaceable> 替換為您的 Web 伺服器的 IP 位址)︰
      </para>
<screen>
acl webserver src <replaceable>WEB_SERVER_IP</replaceable>/255.255.255.255
</screen>
      <para>
       確定下列規則都包含在組態檔案中。與預設組態相比，只有中間的規則是新增的。不過，這些規則的前後順序非常重要。
      </para>
<screen>
http_access allow manager localhost
http_access allow manager webserver
http_access deny manager
</screen>
     </listitem>
    </itemizedlist>
   </step>
   <step performance="optional">
    <para>
     或者，您也可以為 <systemitem class="resource">cachemgr.cgi</systemitem> 設定一或多個密碼。這樣還可允許執行更多動作，例如在遠端關閉快取，或者檢視有關快取的詳細資訊。為此，請使用管理員的一或多個密碼以及允許的動作清單設定選項 <option>cache_mgr</option> 與 <option>cachemgr_passwd</option>。
    </para>
    <para>
     例如，若要明確允許在未經驗證的情況下檢視索引頁面、功能表、60 分鐘計數器的平均值，允許使用密碼 <literal>secretpassword</literal> 切換離線模式，以及完全停用任何其他功能，請使用以下組態︰
    </para>
<screen>
cache_mgr user
cachemgr_passwd none index menu 60min
cachemgr_passwd secretpassword offline_toggle
cachemgr_passwd disable all
</screen>
    <para>
     <option>cache_mgr</option> 定義使用者名稱。<option>cache_mgr</option> 定義使用哪個密碼允許哪些動作。
    </para>
    <para>
     <literal>none</literal> 和 <literal>disable</literal> 是特殊關鍵字︰<literal>none</literal> 表示無需使用密碼，<literal>disable</literal> 會徹底停用功能。
    </para>
    <para>
     登入 <systemitem class="resource">cachemgr.cgi</systemitem> 之後，便可全面查看完整的動作清單。若要瞭解在組態檔案中需如何參考操作，請查看動作頁面 URL 中 <literal>&amp;operation=</literal> 後面的字串。<literal>all</literal> 是特殊關鍵字，表示所有動作。
    </para>
   </step>
   <step>
    <para>
     在組態檔案變更後重新載入 Squid 和 Apache︰
    </para>
<screen><prompt>tux &gt; </prompt><command>sudo systemctl reload squid</command></screen>
   </step>
   <step>
    <para>
     若要檢視統計資料，請移至先前設定的 <systemitem class="resource">cachemgr.cgi</systemitem> 頁面。例如 <literal>http://webserver.example.org/squid/cgi-bin/cachemgr.cgi</literal>。
    </para>
    <para>
     選擇適當的伺服器，若已設定，請指定使用者名稱和密碼。然後按一下<guimenu>繼續</guimenu>並瀏覽不同的統計資料。
    </para>
   </step>
  </procedure>
 </sect1>
 <sect1 xml:id="sec-squid-squidguard">
  <title>squidGuard</title><indexterm>

  <primary> Squid</primary>

  <secondary>  squidGuard</secondary></indexterm> 

  <para>
   本節目的不是說明 squidGuard 的廣泛組態，而是簡單介紹並給予使用上的一些建議。如需更深入的組態問題，請參閱 squidGuard 網站，網址為 <link xlink:href="http://www.squidguard.org"/>。
  </para>

  <para>
   squidGuard 屬於自由軟體 (GPL)，是一個靈活而快速的過濾器，也是重新導向器以及 Squid 的存取控制器外掛程式。它可讓您在 Squid 快取上，針對不同的使用者群組，使用不同的限制來定義多重存取規則。squidGuard 使用 Squid 的標準重新導向器介面。squidGuard 可以執行下列動作︰
  </para>

  <itemizedlist>
   <listitem>
    <para>
     將某些使用者的 Web 存取權限制為一系列已接受或已知的 Web 伺服器或 URL。
    </para>
   </listitem>
   <listitem>
    <para>
     針對某些使用者，封鎖某些列示或列為黑名單的網頁伺服器或 URL 的存取權。
    </para>
   </listitem>
   <listitem>
    <para>
     針對某些使用者，封鎖符合一般運算式或文字清單的 URL。
    </para>
   </listitem>
   <listitem>
    <para>
     將封鎖的 URL，重新導向至<quote>智慧型</quote>的 CGI 資訊頁面。
    </para>
   </listitem>
   <listitem>
    <para>
     將未註冊的使用者重新導向至註冊表單。
    </para>
   </listitem>
   <listitem>
    <para>
     將橫幅重新導向至空白的 GIF。
    </para>
   </listitem>
   <listitem>
    <para>
     根據時間、星期、日期等，使用不同的存取規則。
    </para>
   </listitem>
   <listitem>
    <para>
     針對不同的使用者群組，使用不同的規則。
    </para>
   </listitem>
  </itemizedlist>

  <para>
   squidGuard 與 Squid 無法用於︰
  </para>

  <itemizedlist mark="bullet" spacing="normal">
   <listitem>
    <para>
     編輯、過濾或審查文件內的文字。
    </para>
   </listitem>
   <listitem>
    <para>
     編輯、過濾或審查 HTML 內嵌的程序檔，例如 JavaScript。
    </para>
   </listitem>
  </itemizedlist><indexterm>

  <primary> 組態檔案</primary>

  <secondary> squidguard.conf</secondary></indexterm><indexterm>

  <primary>   組態檔案</primary>

  <secondary> squid.conf </secondary></indexterm> 

  <procedure xml:id="pro-squidguard">
   <title>設定 squidGuard</title>
   <step>
    <para>
     使用前，請先安裝
     <package>squidGuard</package>
     。
    </para>
   </step>
   <step>
    <para>
     以 <filename>/etc/squidguard.conf</filename> 提供最小的組態檔。組態範例請見 <link xlink:href="http://www.squidguard.org/Doc/examples.html"/>。稍後請使用較複雜的組態設定值來測試。
    </para>
   </step>
   <step>
    <para>
     然後，建立一個<quote>存取遭拒</quote>HTML 頁面或 CGI 頁面，以便在用戶端要求存取黑名單中的網站時，Squid 可以重新導向到該頁面。強烈建議使用 Apache。
    </para>
   </step>
   <step>
    <para>
     現在，請將 Squid 設定為使用 squidGuard。在 <filename>/etc/squid/squid.conf</filename> 檔案中使用下列項目︰
    </para>
<screen>redirect_program /usr/bin/squidGuard</screen>
   </step>
   <step>
    <para>
     另一個稱為 <systemitem>redirect_children</systemitem> 的選項會設定在機器上執行之<quote>重新導向</quote>(在此範例中為 squidGuard) 程序的數量。您設定的程序越多，所需的 RAM 就越多。先嘗試較小的數字，例如 <literal>4</literal>︰
    </para>
<screen>redirect_children 4</screen>
   </step>
   <step>
    <para>
     最後，執行 <command>systemctl reload squid</command>，讓 Squid 載入新的組態。現在，請使用瀏覽器測試您的設定值。
    </para>
   </step>
  </procedure>
 </sect1>
 <sect1 xml:id="sec-squid-calamaris">
  <title>使用 Calamaris 產生快取報告</title><indexterm>

  <primary>Squid</primary>

  <secondary>Calamaris</secondary></indexterm><indexterm>

  <primary>Squid</primary>

  <secondary>報告</secondary></indexterm>

  <para>
   Calamaris 是一種 Perl 程序檔，用來產生 ASCII 或 HTML 格式的快取記憶體活動報告。它使用原生的 Squid 存取記錄檔。Calamaris 的首頁網址為 <link xlink:href="http://cord.de/calamaris-english"/>。此工具不屬於 <phrase role="productname"><phrase os="sles">SUSE Linux Enterprise Server</phrase></phrase> 預設安裝範圍，若想使用它，可以安裝 <systemitem>calamaris</systemitem> 套件。
  </para>

  <para>
   以 <systemitem class="username">root</systemitem> 身分登入，然後輸入︰
  </para>

<screen>cat access1.log [access2.log access3.log] | calamaris <replaceable>options</replaceable> &gt; reportfile</screen>

  <para>
   如果使用的記錄檔案不止一個，請確定它們依時間順序排列，時間越早的檔案越靠前。為此，您可以如上例一般逐個列出檔案，也可以使用 <filename>access{1..3}.log</filename>。
  </para>

  <para>
   <command>calamaris</command> 可使用下列選項︰
  </para>

  <variablelist>
   <varlistentry>
    <term><option>-a</option>
    </term>
    <listitem>
     <para>
      輸出所有可用的報告
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><option>-w</option>
    </term>
    <listitem>
     <para>
      以 HTML 報告輸出
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><option>-l</option>
    </term>
    <listitem>
     <para>
      在報告標題中包含訊息或標誌
     </para>
    </listitem>
   </varlistentry>
  </variablelist>

  <para>
   在程式的手冊頁中，使用 <command>man</command> <option>calamaris</option> 可以找到各種選項的詳細資訊。
  </para>

  <para>
   以下是典型的範例︰
  </para>

<screen>
cat access.log.{10..1} access.log | calamaris -a -w \
&gt; /usr/local/httpd/htdocs/Squid/squidreport.html
</screen>

  <para>
   這會將報告放在網頁伺服器的目錄中。需要有 Apache 才能檢視報告。
  </para>
 </sect1>
 <sect1 xml:id="sec-squid-moreinfo">
  <title>更多資訊</title>

  <para>
   請瀏覽 Squid 的首頁，網址為 <link xlink:href="http://www.squid-cache.org/"/>。此處可以找到<quote>Squid 使用者指南</quote>(Squid User Guide) 以及有關 Squid 常見問題集 (FAQ) 的豐富資訊。
  </para>

  <para>
   除此之外，還可以在 <link xlink:href="http://www.squid-cache.org/Support/mailing-lists.html"/> 中找到 Squid 的郵件清單。
  </para>
 </sect1>
</chapter>
