<?xml version="1.0" encoding="UTF-8"?>
<chapter xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xlink="http://www.w3.org/1999/xlink" xml:base="ay_create_control_file.xml" version="5.0" role="General" xml:id="cha-autoyast-create-control-file">
 <title>创建 AutoYaST 控制文件</title>
 <info>
      <dm:docmanager xmlns:dm="urn:x-suse:ns:docmanager">
        <dm:bugtracker/>
        <dm:translation>是</dm:translation>
      </dm:docmanager>
    </info>
    <sect1 xml:id="Autoinstallation-collectInfo">
   <title>收集信息</title>

   <para>
    要创建控制文件，您需要收集有关所要安装系统的信息。这包括硬件数据和网络信息等。请确保已收集有关您要安装的计算机的以下信息：
   </para>

   <itemizedlist mark="bullet" spacing="normal">
    <listitem>
     <para>
      硬盘类型和大小
     </para>
    </listitem>
    <listitem>
     <para>
      图形界面和连接的监视器（如果有）
     </para>
    </listitem>
    <listitem>
     <para>
      网络接口和 MAC 地址（如果已知，例如使用 DHCP 时）
     </para>
    </listitem>
   </itemizedlist>
   <para>
    另外，请校验是否安装 <package>autoyast2-installation</package> 和 
    <package>autoyast2</package> 。
   </para>
  </sect1>
  
  <sect1 xml:id="CreateProfile-CMS">
   <title>使用配置管理系统 (CMS)</title>

   <para>
    我们提供了基于 YaST 的配置界面，用于创建一个或多个计算机的控制文件。此系统依赖于现有模块，这些模块通常用于在常规操作模式下配置计算机，例如在安装 <phrase role="productname"><phrase os="sles">SUSE Linux Enterprise Server</phrase></phrase> 后进行配置。
   </para>

   <para>
    配置管理系统可让您轻松创建控制文件，以及管理可在包含多个客户端的联网环境中使用的配置储存库。
   </para>

   <figure os="sles;sled">
    <title>配置系统</title>
    <mediaobject>
     <imageobject role="html">
      <imagedata fileref="autoyast2-maindialog.png"/>
     </imageobject>
     <imageobject role="fo">
      <imagedata fileref="autoyast2-maindialog.png" width="75%"/>
     </imageobject>
    </mediaobject>
   </figure>

   

   <sect2 xml:id="CreateProfile-CMS-new">
    <title>创建新控制文件</title>
     <para>
      创建 AutoYaST 配置文件的最简单方法是使用现有 <phrase role="productname"><phrase os="sles">SUSE Linux Enterprise Server</phrase></phrase> 系统作为模板。在已安装的系统上，启动 <menuchoice>
      <guimenu>YaST</guimenu> <guimenu>杂项</guimenu>
      <guimenu>自动安装</guimenu></menuchoice>。接下来，从菜单中选择<menuchoice>
      <guimenu>工具</guimenu> <guimenu>创建参考配置文件</guimenu>
      </menuchoice>。选择您要包含在配置文件中的系统组件。或者，通过在命令行中运行 <command>sudo yast clone_system</command> 创建包含完整系统配置的配置文件。
     </para>
     <para>
      这两种方法都会创建文件 <filename>/root/autoinst.xml</filename>。在命令行中创建的版本可用于设置在其上创建了配置文件的系统的相同克隆。但是，通常需要调整该文件，才能安装多个非常类似但不完全相同的计算机。为此，可以使用您偏好的文本编辑器/XML 编辑器调整配置文件。
     </para>
    <para>
     控制文件的几乎所有资源都可以使用配置管理系统进行配置，只存在几种例外情况。该系统具有灵活性，某些资源的配置与 YaST 控制中心提供的配置相同。除了现有模块和用户熟悉的模块以外，我们还创建了新的界面用于完成特殊和复杂的配置，例如分区、一般选项和软件的配置。
    </para>
    <para>
     此外，使用 CMS 还能保证生成的控制文件的有效性，并可直接使用该控制文件来启动自动安装。
    </para>
    <para>
     确保已安装配置系统（软件包 <systemitem class="resource">autoyast2</systemitem>），然后使用 YaST 控制中心或者以 root 身份使用以下命令来调用该系统（确保正确设置 <envar>DISPLAY</envar> 变量，以启动图形用户界面而不是基于文本的界面）：
    </para>
<screen>/sbin/yast2 autoyast</screen>
   </sect2>
  </sect1>
  <sect1 xml:id="CreateProfile-Manual">
   <title>手动创建/编辑控制文件</title>

   <para>
    如果您要手动编辑控制文件，请确保它采用有效语法。要检查语法，请使用发行套件自带的工具。例如，要校验文件的格式是否正确（采用有效的 XML 结构），请使用 <systemitem>libxml2</systemitem> 软件包中提供的实用程序 <command>xmllint</command>：
   </para>

<screen>xmllint &lt;control file&gt;</screen>

   <para>
    如果控制文件的格式不正确（例如，某个标记缺少结束部分），<command>xmllint</command> 将报告错误。
   </para>


   <para>
    要验证控制文件，请使用同名软件包中的工具 <command>jing</command>。在验证过程中，会检测放错位置或缺少的标记与属性以及错误的属性值。<phrase os="sles">软件包
    <package>jing</package> 是随 SUSE Software Development Kit 一起提供的。</phrase>
   </para>

<screen>jing /usr/share/YaST2/schema/autoyast/rng/profile.rng &lt;control file&gt;</screen>

   <para>
    <literal>/usr/share/YaST2/schema/autoyast/rng/profile.rng</literal> 由软件包 <literal>yast2-schema</literal> 提供。此文件描述 AutoYaST 配置文件的语法和类。
   </para>


   <para>
    在继续自动安装之前，请修复此类检查发现的所有错误。如果控制文件无效或格式不正确，将无法启动自动安装过程。
   </para>

   <para>
    您可以使用系统上提供的任何 XML 编辑器，或者支持 XML 的任何文本编辑器（例如 Emacs 和 Vim）。但是，为许多计算机手动创建控制文件并不是最好的做法；控制文件仅应看作是自动安装引擎与配置管理系统 (CMS) 之间的接口。
   </para>

   <tip>
    <title>使用 Emacs 作为 XML 编辑器</title>
    <para>
     内置的 nxml-mode 将 Emacs 转变成了一个具有自动标记填写和验证功能的成熟 XML 编辑器。有关如何设置 nxml-mode 的说明，请参见 Emacs 帮助。
    </para>
   </tip>
  </sect1>
  <sect1 xml:id="CreateProfile-XSLT">
   <title>使用 XSLT 通过脚本创建控制文件</title>

   <para>
    如果您有一个模板并想要通过脚本或命令行更改一些设置，请使用 <literal>xsltproc</literal> 之类的 XSLT 处理器。例如，如果您有一个 AutoYaST 控制文件，而出于任何原因您想要通过脚本填写主机名则可以使用 XSLT。（如果您经常需要执行此操作，应考虑编写操作脚本。）
   </para>

   <para>
    首先创建一个 XSL 文件：
   </para>

   <example>
    <title>通过脚本替换主机名/域的示例文件</title>
<screen>&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
  xmlns:y2="http://www.suse.com/1.0/yast2ns"
  xmlns:config="http://www.suse.com/1.0/configns"
  xmlns="http://www.suse.com/1.0/yast2ns"
  version="1.0"&gt;
  &lt;xsl:output method="xml" encoding="UTF-8" indent="yes" omit-xml-declaration="no" cdata-section-elements="source"/&gt;

  &lt;!-- the parameter names --&gt;
  &lt;xsl:param name="hostname"/&gt;
  &lt;xsl:param name="domain"/&gt;

  &lt;xsl:template match="/"&gt;
    &lt;xsl:apply-templates select="@*|node()"/&gt;
  &lt;/xsl:template&gt;

  &lt;xsl:template match="y2:dns"&gt;
    &lt;xsl:copy&gt;
      &lt;!-- where to copy the parameters --&gt;
      &lt;domain&gt;&lt;xsl:value-of select="string($domain)"/&gt;&lt;/domain&gt;
      &lt;hostname&gt;&lt;xsl:value-of select="string($hostname)"/&gt;&lt;/hostname&gt;
      &lt;xsl:apply-templates select="@*|node()"/&gt;
    &lt;/xsl:copy&gt;
  &lt;/xsl:template&gt;


  &lt;xsl:template match="@*|node()" &gt;
    &lt;xsl:copy&gt;
      &lt;xsl:apply-templates select="@*|node()"/&gt;
    &lt;/xsl:copy&gt;
  &lt;/xsl:template&gt;

&lt;/xsl:stylesheet&gt;
</screen>
   </example>

   <para>
    此文件需要用户以参数的形式提供主机名和域名。
   </para>

<screen>&lt;xsl:param name="hostname"/&gt;
&lt;xsl:param name="domain"/&gt;</screen>

   <para>
    控制文件的 DNS 部分包含这些参数的副本。这意味着，如果 DNS 部分已包含一个域元素，您将获得另一个域元素，如此会导致冲突。
   </para>




   <para>
    有关 XSLT 的详细信息，请访问官方网页 <link xlink:href="http://www.w3.org/TR/xslt">www.w3.org/TR/xslt</link>
   </para>
  </sect1>
 </chapter>
