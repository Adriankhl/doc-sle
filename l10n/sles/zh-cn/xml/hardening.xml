<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet href="urn:x-suse:xslt:profiling:docbook50-profile.xsl"
 type="text/xml"
 title="Profiling step"?>
<?provo dirname="security/"?>
<book xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xlink="http://www.w3.org/1999/xlink" xml:base="hardening.xml" version="5.0" xml:lang="zh-cn" xml:id="book-hardening">
 <info>
  <dm:docmanager xmlns:dm="urn:x-suse:ns:docmanager">
   <dm:bugtracker>
    <dm:assignee>fs@suse.com</dm:assignee>
   </dm:bugtracker>
   <dm:translation>是</dm:translation>
  </dm:docmanager>
  <title>强化指南</title><productname><phrase role="productname"><phrase os="sles">SUSE Linux Enterprise Server</phrase></phrase></productname>
  <productnumber><phrase role="productnumber"><phrase os="sles;sled">15 SP2</phrase></phrase></productnumber><date>
<?dbtimestamp format="Y"?>
 年 <?dbtimestamp format="B"?>
 月 <?dbtimestamp format="d"?>
 日
</date>
  <xi:include href="common_copyright_gfdl.xml"/>
  <abstract>
   <para>
    处理安装和设置安全 SUSE Linux Enterprise Server 的特定事项以及进一步确保和强化安装所需的额外安装后步骤。支持管理员选择与安全相关的选项并做出决策。
   </para>
  </abstract>
 </info>
 <preface xml:id="pre-hardening-about">
 <title>关于本指南</title>
 <para>
  《<phrase role="productname"><phrase os="sles">SUSE Linux Enterprise Server</phrase></phrase> 强化指南》涉及安装和设置安全 <phrase role="productname"><phrase os="sles">SUSE Linux Enterprise Server</phrase></phrase> 的特定事项，以及进一步保护和强化该安装所需的额外安装后过程。最适合在安装期间以及安装后对服务器应用安全和强化元素和过程，其目的在于提高系统适用性以满足管理员要求。
 </para>
 <para>
  本指南支持管理员做出与安全有关的选择和决策。应将各个步骤和过程视为建议，而非需严格遵守的规则。通常，您将需要自行评估您组织措施的有用性。
 </para>
 <para>
  最终目标是提升系统的安全价值。有关安全术语含义的定义各不相同，但我们要确定一种简单且抽象的定义：
 </para>
 <para>
  <emphasis>一个良好的系统应是可执行预期操作且操作有效的系统。</emphasis>
 </para>
 <para>
  <emphasis>一个安全的系统应是不执行任何其他操作的良好系统。</emphasis>
 </para>
 <para>
  本指南的重点在于<quote>不执行任何其他操作</quote>。Linux 系统就是按此标准构建的，并强制执行安全策略。这些策略包含下列概念（仅包含相当常见的概念并非完整列表）：
 </para>
 <itemizedlist>
  <listitem>
   <para>
    DAC（自主访问控制）：由 <command>chmod</command> 和 <command>chown</command> 设置的文件和目录权限。
   </para>
  </listitem>
  <listitem>
   <para>
    特权端口：TCP 和 UDP 端口 0-1023，且原始套接字只能由 <systemitem class="username">root</systemitem> 用户使用。
   </para>
  </listitem>
  <listitem>
   <para>
    其他特权操作：装载内核模块、配置网络接口、Linux 内核的所有安全相关设置。这些操作只能由 root 用户（用户 ID 为 0）或拥有必要权限的任何其他进程来执行。
   </para>
  </listitem>
 </itemizedlist>
 <para>
  攻击系统即表示尝试越过特权边界，例如通过规避或破坏特权边界的方式。这意味着系统管理员或程序员未曾预料到此种情况。
 </para>
 <para>
  强化系统意即通过减少系统暴露给攻击者的区域（通常称为攻击面），来提高防御门槛。强化的系统还可以提供各种措施，以便在有不得不暴露给潜在攻击者的系统漏洞时，可降低其影响。
 </para>
 <para>
  安全与决策相关，一旦安全与功能之间（明显）产生冲突，将由这些决策进行权衡。虽然可以认为所有系统都应尽可能设置得安全，但在某些情况下，一些安全和强化级别可能就太小题大做了。每个系统的操作环境有其各自的安全要求，这些要求源自业务驱动因素或合规要求。例如，可将 SUSE Linux Enterprise Server 配置为符合 SOX、HIPAA 和 PCIDSS 等安全标准。还可将其设置为满足德国联邦信息安全局 (Bundesamt für Sicherheit in der Informationstechnik) 的要求，如 BSI TR-02102-1 中所述。应执行有效的业务要求分析，以确定要对服务器应用或定义为基线服务器构建一部分的恰当安全和强化级别。
 </para>
 <para>
  我们最后要强调的一点是：您可能会在合规框架中遇到无关技术或并非出于提高安全性目的的个别要求。只实施所需的操作可能会是一种卓有成效的态度，而一旦与安全相抵触，相较于盲目遵守规范，本文中的讨论更多是出于您合规框架的总体目标。我们鼓励您对列表中认为适得其反的项目提出异议。
 </para>
 <sect1 xml:id="pre-hardening-about-assumptions">
  <title>假设和范围</title>

  <para>
   本文档通常旨在为单台服务器目标或主机提供参考，但适用范围一般亦可涵盖多台计算机。我们通常假设安全目标可涵盖运行 <phrase role="productname"><phrase os="sles">SUSE Linux Enterprise Server</phrase></phrase> 的一个或多个系统。
  </para>

  <para>
   对于系统所连接网络的敌对性，或使用系统所提供服务的用户的合作性质，我们明确<emphasis>不</emphasis>做任何假设。
  </para>

  <para>
   同时，这意味着您在通读本文档时，需自行部分定义您的上下文。您将需要扩展各个部分的含义，使其适合您的环境。在某些情况下（例如暴露在因特网上的服务器用例），本文档可能不充分或不完全，但它仍不失为一个可以帮助您提高置信度，确信系统会如您所希望的那样运作的良好起点。
  </para>

  <para>
   关于信任：信任关系存在于参与网络交易的所有系统之间。因此，使用系统的用户之间的信任关系就会在这些系统之间传输。由信任关系构成的信任链的强度仅取决于最弱的环节。较好的做法是通过图形方式（图表式概览或网络分布图）直观显示与服务之间的信任关系。一般由资源拥有者强制执行施加在该资源上的策略；通常是提供资源的服务器。打开连接以请求资源的客户端只能负责其所执行的操作。此类操作指的是打开连接以开始执行的操作，但不包括其他操作。
  </para>

  <para>
   恶意用户都是一些特殊且唯一的个例：人力资源部门或许可以解决您计算环境中的一些安全问题；此外，还可以采取一些技术措施。如果您需要解决缺少人力资源部门（以及管理层）支持的问题，请确保您环境中的必要监管满足您的需求，且会为您的意愿提供支持而非制造阻碍。
  </para>

  <para>
   拥有系统管理特权的人员会被自动视为可信人员。
  </para>

  <para>
   不具有任何其他安全框架（例如 SELinux）的 Linux 系统是一种单级别安全系统：即从安全策略角度来说，就是只有超级用户 (root) 和非特权用户。系统用户即为有权出于其特定目的而访问相关文件的非 root 用户身份。这种简单的划分使得管理责任分离变得复杂。一些工具可提供帮助：使用 sudo(8) 执行管理任务，但应注意，在越过特权边界之后，以 root 特权运行的程序将不再针对非特权用户强制执行任何文件访问策略。以 root 身份运行的 vi(1) 可读取和写入系统中的任何文件。
  </para>

  <para>
   另一款工具 NetIQ 的 Privileged User Manager 产品可降低滥用或意外误用管理特权风险。可从下列网址获取更多信息：
  </para>

  <itemizedlist>
   <listitem>
    <para>
     <link xlink:href="https://www.netiq.com/products/privileged-user-manager/"/>
    </para>
   </listitem>
  </itemizedlist>

  <para>
   服务器的物理安全是本文中的另一项假设，即服务器所在位置受到安全保护，不会被窃取或由未经授权的人员操作。安全专家中普遍存在一种冷静解决方案，就是<quote>十秒钟拒绝服务</quote>，即拔出电线并重引导服务器。必须确保物理安全且物理访问必须受控。否则，有关这些系统最小可用性的所有假设都将无效。
  </para>

  <note>
   <title>加密法</title>
   <para>
    通常鼓励使用加密法保护与您系统提供的服务进行交易的机密性。实施加密增强功能的需求在很大程度上取决于所有参与系统的操作环境。请注意，您需要确认加密法能为您的所有服务提供所有可能的安全保障，并确认无法通过开启服务的<quote>加密</quote>选项（如果您所在环境可以轻松通过勾选按钮获取加密）自动提供这些安全保障。
   </para>
   <variablelist>
    <varlistentry>
     <term>机密性</term>
     <listitem>
      <para>
       防止读取交易内容
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>隐私</term>
     <listitem>
      <para>
       防止知悉交易存在以及其可能具有的一些属性，例如大小、相关方的身份及他们的存在等。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>完整性</term>
     <listitem>
      <para>
       防止更改内容。请注意，加密法不会自动提供此类保护。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>真实性</term>
     <listitem>
      <para>
       防止身份欺诈。不知道参与实体身份的加密法无法提供此价值。
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
   <para>
    请注意，以机密性为目的的数据加密只能将要保护数据的大小从实际大小减少到用于加密数据的密钥大小。这将导致出现已加密交易的密钥交换问题，并且对于已加密数据储存而言，将导致出现密钥管理问题。由于要以明文处理数据（通常存在例外！），您需要在处理数据时解锁保险库。在文件系统或块设备层上加密此类数据有助于防止系统被盗，但此措施对于系统运行时的数据机密性并无任何帮助。
   </para>
  </note>

  <para>
   如果您要实施涵盖网络上多台主机的一致性安全策略，则组织过程<emphasis>必须</emphasis>确保所有这些主机都可信任并使用强制执行组织范围安全策略的兼容安全配置进行了配置。只需隔离维护同一信任域中数据的系统组，便足以实现控制；最后，对于最终用户和其他系统，需要仔细设计、配置、检查和监视这些系统的访问控制。
  </para>

  <important>
   <title>信任数据</title>
   <para>
    数据的受信任程度可仅与来源域相关。如果数据离开可在其中强制执行安全策略的域，则将与目标域的信任关联。
   </para>
  </important>

  <para>
   要查看有关安全的行业最佳实践、良好安全流程的开发、控制、开发、审核、审计做法以及事件管理，请参见公共 RFC（征求意见文档）。RFC 2196 是由全球社区和个人安全和流程专家不断完善的文档。您可以在此处在线查看该文档：<link xlink:href="http://www.faqs.org/rfcs/rfc2196.html"/>。RFC 是一个开放的动态文档，邀请他人提供意见和评论。欢迎提供增强和改进意见；您将在文档中找到向何处发送这些建议的说明。
  </para>

  <para>
   本指南为如何设置和安全地安装 <phrase role="productname"><phrase os="sles">SUSE Linux Enterprise Server</phrase></phrase> 提供了初步的指导，但它并不是系统管理员了解如何安全地操作 Linux 所需的唯一信息。本指南中假设读者已知道并了解一般的操作安全原则，尤其是 Linux 管理命令和配置选项。
  </para>
 </sect1>
 <sect1 xml:id="sec-content-hardening">
  <title>本指南的内容</title>

  <para>
   <xref linkend="cha-common-criteria"/>包含通用准则和 <phrase role="productname"><phrase os="sles">SUSE Linux Enterprise Server</phrase></phrase> 的参考。<xref linkend="cha-security-protection"/>包含更多一般系统安全和服务保护方案。
  </para>
 </sect1>
 <xi:include href="common_intro_available_doc_i.xml"/>
 <xi:include href="common_intro_feedback_i.xml"/>
 <xi:include href="common_intro_typografie_i.xml"/>
</preface>
 <chapter xml:id="cha-common-criteria">
  <title>通用准则</title>
  <info>
   <abstract>
    <para>
    通用准则是指用于评估和衡量 IT 产品安全价值的最知名且使用最广泛的方法。该方法旨在保持独立性，以独立的实验室开展评估，然后由认证机构予以认证。安全功能要求 (SFR) 汇总在所谓的保护配置文件 (PP) 中。如果安全目标 (ST) 的定义与评估保障级别 (EAL) 相若，便可以比较不同产品的安全功能。（安全目标的定义通常会参考 PP — 如果存在满足产品用途的 PP。）
   </para>
   </abstract>
  </info>
  <sect1 xml:id="sec-common-criteria-introduction">
   <title>简介</title>

   <para>
    要清楚定义 IT 产品中的安全并非易事。安全应被视为一个永无止境的过程，而不是一个可满足或不可满足的静态条件。通用准则证书（EAL7 以下级别）并未对系统的错误倾向做出清楚说明，但却为产品添加了一项无法仅通过技术存在进行说明的重要价值：即，某人已独立检查了系统设计，所用方法与其声明相对应，并已在生产和维护产品时进行明确关注。
   </para>

   <para>
    该证书为产品及其安全功能以及公司设计、构建和工程处理产品的流程指定了成熟程度，并将在整个产品生命周期内对其进行维护。因此，通用准则旨在做到面面俱到，将与 IT 产品安全相关的一切因素全部考虑在内。
   </para>
  </sect1>
  <sect1 xml:id="sec-common-criteria-eal">
   <title>评估保障级别 (EAL)</title>
   <para>
    评估保障级别表示产品满足所述声明的可信度。级别范围从 1 到 7：
   </para>

   <itemizedlist>
    <listitem>
     <para>
      EAL1：功能测试
     </para>
    </listitem>
    <listitem>
     <para>
      EAL2：结构测试
     </para>
    </listitem>
    <listitem>
     <para>
      EAL3：系统测试及检查
     </para>
    </listitem>
    <listitem>
     <para>
      EAL4：系统设计、测试和审核
     </para>
    </listitem>
    <listitem>
     <para>
      EAL5：半形式化设计和测试
     </para>
    </listitem>
    <listitem>
     <para>
      EAL6：半形式化验证的设计和测试
     </para>
    </listitem>
    <listitem>
     <para>
      EAL7：形式化验证的设计和测试
     </para>
    </listitem>
   </itemizedlist>

   <para>
    EAL1 只为产品满足安全要求提供基本保障，EAL2 到 EAL4 为中等保障级别。EAL5 到 EAL7 描述中到高以及高级保障。如果某个产品从设计之初便未以较高级别保障为目标，则 EAL4 将是产品预期可拥有的最高保障级别。
   </para>
  </sect1>

  <sect1 xml:id="sec-common-criteria-principles">
   <title>一般指导原则</title>

   <para>
   本指南中的大多数建议基于以下准则。在您定义自己的安全流程或确定本文中未明确涉及的配置时，请考虑这些准则。
   </para>

   <variablelist>
    <varlistentry>
     <term>尽可能使用数据加密</term>
     <listitem>
      <para>
       请参见本指南的<xref linkend="pre-hardening-about"/>部分。在<xref linkend="pre-hardening-about-assumptions"/>中，对加密法的限制进行了简要概述。
      </para>
      <para>
       请注意，加密法固然有用，但只适用于它能胜任的特定目的。使用加密法并非获得更高系统安全性的通用配方，它也可能会给系统带来额外的风险。请就是否使用加密法做出明智决策，并有责任为您的决策提供理由。虚假的安全感比本身的弱点可能更有害。
      </para>

      <para>
       <phrase role="productname"><phrase os="sles">SUSE Linux Enterprise Server</phrase></phrase> 支持对以下项目进行加密：
      </para>
      <itemizedlist>
       <listitem>
        <para>
         用于远程登录（<command>openssh</command>、<command>man ssh(1)</command>）的网络连接（<command>openssl</command> 命令、<command>stunnel</command>）
        </para>
       </listitem>
       <listitem>
        <para>
         文件 (<command>gpg</command>)
        </para>
       </listitem>
       <listitem>
        <para>
         位于块层的整个文件系统（<literal>dm-crypt</literal>、<command>cryptsetup</command>）
        </para>
       </listitem>
       <listitem>
        <para>
         VPN（<command>ipsec</command>、<command>openvpn</command>）
        </para>
       </listitem>
      </itemizedlist>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>最小软件包安装</term>
     <listitem>
     <para>
       将您系统中的已安装软件包限制为最小数量会很有用。无法执行未安装的二进制文件。
      </para>
      <para>
       在系统安装期间，您可以限制所要安装的软件包集。例如，您可以取消选择所有软件包，而只选择您要使用的软件包。例如，在 YaST 中选择 <systemitem>apache2-mod_perl</systemitem> 软件包将自动选择安装 Apache 软件包运行所需的所有软件包。常常会人为减少依赖项，以便更灵活地处理系统的依赖关系树。您可以选择最小系统，并在其中构建包含（叶）软件包选项的依赖关系树。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>服务隔离 — 在独立的系统上运行不同的服务</term>
     <listitem>
      <para>
       可能的情况下，服务器应专用于提供一项服务或一个应用程序。如果攻击者能够成功利用一项服务中的软件缺陷（假设该缺陷允许访问其他服务），这将限制可能被入侵的其他服务数。
      </para>
      <para>
       为系统上提供的服务使用 AppArmor 是一种有效的限制方法。有关详细信息，请参见<xref linkend="part-apparmor"/>和 <command>apparmor</command> 手册页。
      </para>
      <para>
       <phrase role="productname"><phrase os="sles">SUSE Linux Enterprise Server</phrase></phrase> 支持使用虚拟化技术。虽然虚拟化一般设计用于服务器整合目的，但它对于服务隔离也很有用。不过，虚拟化技术<emphasis>无法</emphasis>比拟通过在不同物理计算机上运行服务所提供的隔离强度，也无法代替后者。请注意，超级管理程序隔离虚拟机的能力并不高于或强于 Linux 内核隔离进程及其地址空间的能力。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>
      系统指纹和备份
     </term>
     <listitem>
      <para>
       执行定期备份及设置系统指纹十分重要，在应对系统成功攻击的情况下尤其如此。请将其作为安全惯例不可或缺的一部分，以校验备份是否正常工作。
      </para>
      <para>
       快速直接的可访问备份可增加您对系统完整性的信心。但备份机制/解决方案拥有足够的版本控制支持亦十分重要，以便您能够跟踪系统中的更改。示例：软件包的安装时间 (<command>rpm</command> <option>-q</option>
       <option>--queryformat='%{INSTALLTIME} %{NAME}\n'</option>
       <replaceable>软件包名称</replaceable>) 必须与备份日志文件中的已更改文件对应。
      </para>
      <para>
       <phrase role="productname"><phrase os="sles">SUSE Linux Enterprise Server</phrase></phrase> <phrase role="productnumber"><phrase os="sles;sled">15 SP2</phrase></phrase> 上存在多个工具，可用于检测未知但却成功的攻击。无需花费太多精力对其进行配置。
      </para>
      <para>
       特别建议您使用文件和目录完整性检查器 <systemitem class="resource">AIDE</systemitem>（高级入侵检测环境）。当运行以进行初始化时，它会创建系统中列于其配置文件中的所有文件的哈希数据库。这样就可以在稍后校验所有已分类文件的完整性。
      </para>
      <warning>
       <title>后门</title>
       <para>
        如果您使用 AIDE，请将哈希数据库复制到潜在攻击者无法访问的位置。否则，攻击者可能会在植入后门之后修改完整性数据库，导致完整性措施目标无法达成。
       </para>
       <para>
        攻击者也可能已在内核中植入后门。除了很难检测之外，基于内核的后门还可有效去除系统入侵的所有痕迹，致使系统更改几乎变得无法察觉。因此，需要通过救援系统（或已手动装入目标系统文件系统的任何其他独立系统）来执行完整性检查。
       </para>
      </warning>
       <para>
        请注意，安全更新的应用程序会令完整性数据库失效。<command>rpm</command> <option>-qlv packagename</option> 可列出软件包中包含的文件。RPM 子系统非常强大，所含数据由其自行维护。可使用 <option>--queryformat</option> 命令行选项对其进行访问。利用 RPM 的某些子功能，可更方便管理包含已更改文件的完整性数据库的差异更新。
       </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </sect1>
  <sect1 xml:id="sec-common-criteria-more">
   <title>更多信息</title>
   <para>
    通用准则评估可检查已评估设置中产品的特定配置。有关如何安装和配置用作通用准则评估中基线的参考系统，请参见通用准则评估文档的<quote>管理员指南</quote>部分。
   </para>

   <para>
    不过，将已评估配置理解为<emphasis>已强化</emphasis>配置是不正确的。在安装后去除 setuid 位和管理过程的规定有助于实现合理的特定配置。但这对于强化声明是不够的。
   </para>
  <itemizedlist>
   <listitem>
     <para>
      有关 <phrase role="productname"><phrase os="sles">SUSE Linux Enterprise Server</phrase></phrase> 安全认证和功能的详细信息，请参见 <link xlink:href="https://www.suse.com/support/security/certifications/"/>。
     </para>
   </listitem>
   <listitem>
    <para>
    <link xlink:href="https://www.suse.com/support/security/"/> 上提供有 SUSE 安全资源的列表。
    </para>
   </listitem>
   <listitem>
    <para>
    除与通用准则工作相关的文档外，另请参见以下手册页：
    </para>
    <simplelist>
     <member>pam(8)、pam(5)</member>
     <member>apparmor(7) 和参考的手册页</member>
     <member>rsyslogd(8)、syslog(8)、syslogd(8)</member>
     <member>fstab(5)、mount(8)、losetup(8)、cryptsetup(8)</member>
     <member>haveged(8)、random(4)</member>
     <member>ssh(1)、sshd(8)、ssh_config(5)、sshd_config(5)、ssh-agent(1)、ssh-add(1)、ssh-keygen(1)</member>
     <member>cron(1)、crontab(5)、at(1)、atd(8)</member>
     <member>systemctl(1)、daemon(7)、systemd.unit(5)、systemd.special(5)、kernel-command-line(7)、bootup(7)、systemd.directives</member>
    </simplelist>
   </listitem>
  </itemizedlist>
 </sect1>
 </chapter>

 <chapter xml:id="cha-security-protection">
  <title>Linux 安全和服务保护方法</title>
  <info>
   <abstract>
    <para>
     在<xref linkend="cha-common-criteria"/>中，我们提到了 IBM 针对选定硬件子集倡议的通用准则 EAL 4+ 认证安装和设置。此认证版本为想要构建安全且经过强化的基本系统的客户奠定了良好的基础，但可能无法涵盖所有服务和许多客户感兴趣的软件。
    </para>
    <para>
     下一部分将提供一个更通用的视图，并针对 <phrase role="productname"><phrase os="sles">SUSE Linux Enterprise Server</phrase></phrase> 系统安全提供建议和指导。从上一部分来看，本部分的一些主题似乎是重复的，但其实上下文非常不同。更多细节将会在一些章节中提供，当然还提供了一些适用于大量服务的更通用的示例。
    </para>
   </abstract>
  </info>
  <para>
   指南的本部分将只提供基本建议，而不是严格的规则。此部分中的过程和示例应可让您将安全增强技术应用于更多类型的基于服务器的服务和程序。
  </para>
  <para>
   本章中的一些主题已在之前讨论过，但此处提供了更多细节和说明。精选的一般主题包括：
  </para>
  <itemizedlist>
   <listitem>
    <para>
     物理安全 – 保护服务器远离环境威胁（人员、地点、事物）。
    </para>
   </listitem>
   <listitem>
    <para>
     安全策略和过程 – 服务器生命周期管理、磁盘/媒体回收、备份和存档安全。
    </para>
   </listitem>
   <listitem>
    <para>
     系统监视 – 与事件通知/管理有关的过程。
    </para>
   </listitem>
   <listitem>
    <para>
     系统自动化 – 适用于自动安全措施的机制和/或过程。启发、帐户控制、安全报告和修正、自动关闭等。
    </para>
   </listitem>
   <listitem>
    <para>
     系统管理 – 获取软件包的方法、校验和签名密钥、修补过程和建议。
    </para>
   </listitem>
   <listitem>
    <para>
     保护网络 – 添加程序、端口和服务封装程序 – iptables、tcpwrappers、services。
    </para>
   </listitem>
   <listitem>
    <para>
     远程访问 – 额外的 SSH 信息和密钥联合身份验证。CA 集成。
    </para>
   </listitem>
   <listitem>
    <para>
     通用服务 – 邮件、NFS 和自动装入。
    </para>
   </listitem>
   <listitem>
    <para>
     保护内核和 init 进程 – 参数、systemd 目标和引导脚本。
    </para>
   </listitem>
   <listitem>
    <para>
     访问控制 – 用户/组/权限。
    </para>
   </listitem>
   <listitem>
    <para>
     口令安全和警告 – 正确设置口令和标题。
    </para>
   </listitem>
   <listitem>
    <para>
     其他安全性 – 各种安全设置和杂项。
    </para>
   </listitem>
   <listitem>
    <para>
     资源 – Web 链接、文档和示例参考、操作指南和一般信息、产品链接。
    </para>
   </listitem>
  </itemizedlist>
  <para>
   按主题层次结构再次对各章节进行组织，以确保连续性。请参见主目录以方便参考。
  </para>
  <sect1 xml:id="sec-sec-prot-general-physical">
   <title>物理安全</title>

   <para>
    物理安全应予以最大限度的关注。Linux 生产服务器应安放于加锁的数据中心之内，只有通过安全检查的人员才能访问。您也可以考虑使用引导加载程序口令，具体视环境和情况而定。
   </para>

   <para>
    此外，还要考虑如下问题：
   </para>

   <itemizedlist>
    <listitem>
     <para>
      哪些人拥有主机的直接物理访问权限？
     </para>
    </listitem>
    <listitem>
     <para>
      他们是否应拥有这些权限？
     </para>
    </listitem>
    <listitem>
     <para>
      是否可以保护主机不被篡改，以及是否应进行此保护？
     </para>
    </listitem>
   </itemizedlist>

   <para>
    特定系统上所需的物理安全成本视情况而定，并且根据可用资金其成本也可能会有很大差别。
   </para>

   <sect2 xml:id="sec-sec-prot-general-physical-locks">
    <title>系统锁</title>
    <para>
     数据中心内的大部分服务器机架都包含锁定功能。通常是位于机架正面的搭扣锁/圆筒锁，可让您转动插入锁定（或未锁定）位置的钥匙，以允许（或拒绝）进入。笼锁可防止有人篡改或窃取服务器的设备/介质，或者开箱直接操作/破坏硬件。防止系统重引导或从备用设备（例如 CD/DVD/USB 驱动器等）引导也很重要。
    </para>
    <para>
     一些服务器还配有箱锁。根据系统供应商的设计和构造，这些锁可以发挥不同的作用。许多系统都设计为当尝试打开未开锁的系统时进行自我禁用。其他配有设备保护盖的系统将不允许插入或拔下键盘或鼠标。虽然有时锁是一项很实用的功能，但它们通常质量较差，很容易会被怀有不良意图的攻击者破坏。
    </para>
   </sect2>
  </sect1>
  <sect1 xml:id="sec-sec-prot-general-bios">
   <title>锁定 BIOS</title>

   <tip>
    <title>安全引导</title>
    <para>
     本节仅介绍确保引导进程安全的基本方法。要了解使用 UEFI 和安全引导功能的更高级引导保护的相关信息，请参见<xref linkend="sec-uefi-secboot"/>。
    </para>
   </tip>

   <para>
    BIOS（基本输入/输出系统）或其继承者 UEFI（统一可扩展固件接口）是 PC 类系统上最低级别的软件/固件。运行 Linux 的其他硬件类型（POWER、IBM Z）也配有执行与 PC BIOS 类似功能的低级别固件。当本文档提及 BIOS 时，通常指的是 BIOS 和/或 UEFI。BIOS 指示系统配置，使系统处于一个定义良好的状态，并提供访问低级别硬件的例程。BIOS 执行已配置的 Linux 引导加载程序（例如 GRUB 2）来引导主机。
   </para>

   <para>
    大部分 BIOS 实施都可配置为阻止未经授权的用户操作系统及引导设置。通常通过设置 BIOS 管理员或引导口令来完成。只有更改系统配置时才需要输入管理员口令，但在每次正常引导时都需要引导口令。对于大多数用例，设置管理员口令并将引导限制为内置硬盘便已足够。这样，攻击者便无法只引导 Linux live CD 或 USB 闪存盘。虽然这并不会提供高级别的安全（可以重设置、去除或修改 BIOS – 假设用例访问权限），但它可以作为另一种保护措施。
   </para>

   <para>
    许多 BIOS 固件具有各种其他安全相关设置。请与系统供应商联系，可查阅系统文档或在系统引导时检查 BIOS，来了解更多信息。
   </para>

   <important>
    <title>在设置了 BIOS 引导口令的情况下引导</title>
    <para>
     如果系统设置了引导口令，主机将不会在无人照管的情况下引导（例如当系统重引导或发生电源故障）。这是一种权衡。
    </para>
   </important>
   <important>
    <title>丢失 BIOS 管理员口令</title>
    <para>
     首次设置系统时，通常不会要求提供 BIOS 管理员口令。请不要忘记该口令，否则您将需要通过硬件操作清除 BIOS 内存以再次获得访问权限。
    </para>
   </important>
  </sect1>
  <sect1 xml:id="sec-sec-prot-general-bootloader">
   <title>通过引导加载程序提供的安全性</title>

   <para>
    <phrase role="productname"><phrase os="sles">SUSE Linux Enterprise Server</phrase></phrase> 中默认使用的 Linux 引导加载程序 GRUB 2 可设置引导口令。它还提供了口令功能，以便只有管理员才能启动交互操作（例如编辑菜单项和进入命令行界面）。如果指定了口令，在您按 <keycap>C</keycap> 键和 <keycap>E</keycap> 键并输入正确的口令之前，GRUB 2 将不允许任何交互控制。
   </para>

   <para>
    有关示例，请参见 GRUB 2 手册页。
   </para>

   <para>
    设置这些口令时请务必记住它们！此外，启用这些口令可能只会减缓入侵，而不一定能阻止入侵。同样，有些人可能会从移动设备引导，并装入您的根分区。如果您使用的是 BIOS 级别安全性和引导加载程序，较好的做法是禁用从您计算机 BIOS 中的移动设备进行引导的功能，然后还要通过口令来保护 BIOS 本身。
   </para>

   <para>
    另请注意，需要将引导加载程序配置文件的模式更改为 <literal>600</literal>（仅限 <systemitem class="username">root</systemitem> 读取/写入）以对其进行保护，否则其他人将能够读取您的口令或哈希！
   </para>
  </sect1>

  <sect1 xml:id="sec-sec-prot-general-seccheck">
   <title>使用 seccheck 运行自动安全检查</title>
   <para>
    <command>seccheck</command> SUSE 安全检查器是一组外壳脚本，旨在定期自动检查系统的本地安全，并通过电子邮件向 root 用户或管理员配置的任何用户发送报告。
   </para>
   <para>
    如果 <package>seccheck</package> 未安装（在您的系统上），请使用 <command>sudo zypper in seccheck</command> 进行安装。这些脚本由 <systemitem class="daemon">systemd</systemitem> 计时器进行控制，该计时器默认未启用，必须由管理员进行启用。
   </para>
    <para>
        有以下四种 <command>seccheck</command> 计时器：
    </para>
    <itemizedlist>
        <listitem>
            <para>
                /usr/lib/systemd/system/seccheck-daily.timer
            </para>
        </listitem>
         <listitem>
            <para>
                /usr/lib/systemd/system/seccheck-monthly.timer
            </para>
        </listitem>
         <listitem>
            <para>
                /usr/lib/systemd/system/seccheck-weekly.timer
            </para>
        </listitem>
         <listitem>
            <para>
                /usr/lib/systemd/system/seccheck-autologout.timer
            </para>
        </listitem>
    </itemizedlist>
    <para>
       <literal>seccheck-daily.timer</literal>、<literal>seccheck-monthly.timer</literal> 和 <literal>seccheck-weekly.timer</literal> 运行多项检查，如<xref linkend="sec-sec-prot-general-seccheck-config"/>中所述。<literal>seccheck-autologout.timer</literal> 可注销非活动用户，请参见<xref linkend="sec-sec-prot-general-seccheck-autologout"/>。
   </para>
   <para>
      您可以将 seccheck 邮件的收件人由 root 更改为 <filename>/etc/sysconfig/seccheck</filename> 中的任何用户。以下示例将其更改为名为 <literal>firewall</literal> 的管理员用户：
    </para>
    <screen>SECCHK_USER="firewall"</screen>

   <sect2 xml:id="sec-sec-prot-general-seccheck-enable">
       <title>启用 Seccheck 计时器</title>
   <para>
       使用 <command>systemctl</command> 管理您的计时器，如同任何其他 systemd 计时器一样。以下示例启用并启动 <literal>seccheck-daily.timer</literal>：
   </para>
   <screen><prompt>tux &gt; </prompt><command>sudo</command> systemctl enable --now seccheck-daily.timer
   </screen>
   <para>
       列出所有活动计时器：
   </para>
   <screen><prompt>tux &gt; </prompt><command>sudo</command> systemctl list-timers</screen>
   <para>
       列出所有已启用的活动和非活动计时器：
   </para>
   <screen><prompt>tux &gt; </prompt><command>sudo</command> systemctl list-timers --all</screen>
   </sect2>
   <sect2 xml:id="sec-sec-prot-general-seccheck-config">
    <title>每日、每周和每月检查</title>
    <para>
     <command>seccheck</command> 执行下列每日检查：
    </para>
    <informaltable>
     <tgroup cols="2">
      <colspec colname="c1"/>
      <colspec colname="c2"/>
      <tbody>
       <row>
        <entry>
         <para>
          <filename>/etc/passwd</filename> 检查
         </para>
        </entry>
        <entry>
         <para>
          字段的长度/数量/内容，具有相同 UID 的帐户，UID/GID 为 0 或 1 的帐户（除了 root 和 bin）。
         </para>
        </entry>
       </row>
       <row>
        <entry>
         <para>
          <filename>/etc/shadow</filename> 检查
         </para>
        </entry>
        <entry>
         <para>
          字段的长度/数量/内容，没有口令的帐户
         </para>
        </entry>
       </row>
       <row>
        <entry>
         <para>
          <filename>/etc/group</filename> 检查
         </para>
        </entry>
        <entry>
         <para>
          字段的长度/数量/内容
         </para>
        </entry>
       </row>
       <row>
        <entry>
         <para>
          用户 root 检查
         </para>
        </entry>
        <entry>
         <para>
          安全 umask 和 <envar>PATH</envar>
         </para>
        </entry>
       </row>
       <row>
        <entry>
         <para>
          <filename>/etc/ftpusers</filename>
         </para>
        </entry>
        <entry>
         <para>
          检查是否将重要的系统用户置于此处
         </para>
        </entry>
       </row>
       <row>
        <entry>
         <para>
          <filename>/etc/aliases</filename>
         </para>
        </entry>
        <entry>
         <para>
          检查执行程序的邮件别名
         </para>
        </entry>
       </row>
       <row>
        <entry>
         <para>
          <filename>.rhosts</filename> 检查
         </para>
        </entry>
        <entry>
         <para>
          检查用户的 <filename>.rhosts</filename> 文件是否包含 + 符号
         </para>
        </entry>
       </row>
       <row>
        <entry>
         <para>
          用户主目录
         </para>
        </entry>
        <entry>
         <para>
          检查主目录是否可写入或被其他用户拥有
         </para>
        </entry>
       </row>
       <row>
        <entry>
         <para>
          点文件检查
         </para>
        </entry>
        <entry>
         <para>
          检查主目录中的众多点文件是否可写入或被其他用户拥有
         </para>
        </entry>
       </row>
       <row>
        <entry>
         <para>
          邮箱检查
         </para>
        </entry>
        <entry>
         <para>
          检查用户邮箱是否被用户拥有以及是否可读取
         </para>
        </entry>
       </row>
       <row>
        <entry>
         <para>
          NFS 导出检查
         </para>
        </entry>
        <entry>
         <para>
          不应进行全局导出
         </para>
        </entry>
       </row>
       <row>
        <entry>
         <para>
          NFS 导入检查
         </para>
        </entry>
        <entry>
         <para>
          NFS 装入应设置 <option>nosuid</option> 选项
         </para>
        </entry>
       </row>
       <row>
        <entry>
         <para>
          混杂检查
         </para>
        </entry>
        <entry>
         <para>
          检查网卡是否处于混杂模式
         </para>
        </entry>
       </row>
       <row>
        <entry>
         <para>
          列表模块
         </para>
        </entry>
        <entry>
         <para>
          列出装载的模块
         </para>
        </entry>
       </row>
       <row>
        <entry>
         <para>
          列表套接字
         </para>
        </entry>
        <entry>
         <para>
          列出打开的端口
         </para>
        </entry>
       </row>
      </tbody>
     </tgroup>
    </informaltable>

    <para>
       下表列出了每周检查：
   </para>

    <informaltable>
     <tgroup cols="2">
      <colspec colname="c1"/>
      <colspec colname="c2"/>
      <tbody>
       <row>
        <entry>
         <para>
          口令检查
         </para>
        </entry>
        <entry>
         <para>
          运行 <command>john</command> 以破解口令文件，用户将收到更改其口令的电子邮件通知
         </para>
        </entry>
       </row>
       <row>
        <entry>
         <para>
          RPM md5 检查
         </para>
        </entry>
        <entry>
         <para>
          通过 RPM 的 MD5 校验和功能检查已更改文件
         </para>
        </entry>
       </row>
       <row>
        <entry>
         <para>
          suid/sgid 检查
         </para>
        </entry>
        <entry>
         <para>
          列出所有 suid 和 sgid 文件
         </para>
        </entry>
       </row>
       <row>
        <entry>
         <para>
          可执行文件组写入
         </para>
        </entry>
        <entry>
         <para>
          列出组可写/全局可写的所有可执行文件
         </para>
        </entry>
       </row>
       <row>
        <entry>
         <para>
          可写入检查
         </para>
        </entry>
        <entry>
         <para>
          列出全局可写的所有文件（包括可执行文件）
         </para>
        </entry>
       </row>
       <row>
        <entry>
         <para>
          设备检查
         </para>
        </entry>
        <entry>
         <para>
          列出所有设备
         </para>
        </entry>
       </row>
      </tbody>
     </tgroup>
    </informaltable>

    <important>
     <title>使用 <command>john</command> 审计口令</title>
     <para>
      要启用口令审计，必须先安装软件包 <package>john</package>，即 John the Ripper 快速口令破解程序。该软件包可从 <link xlink:href="https://build.opensuse.org/package/show/security/john"/> 上的 openSUSE Build Service 获取。
     </para>
    </important>

    <para>
     每月检查会列显一份完整的报告，每日检查和每周检查的列显内容则不相同。
    </para>
   </sect2>

   <sect2 xml:id="sec-sec-prot-general-seccheck-autologout">
    <title>自动注销</title>
    <para>
     <systemitem>seccheck-autologout.timer</systemitem> 计时器每隔 10 分钟运行一次，检查远程和本地终端会话是否处于非活动状态，并在超过空闲时间后终止会话。
    </para>
    <para>
     在 <filename>/etc/security/autologout.conf</filename> 文件中配置您需要的超时。参数包括默认的空闲和注销延迟时间，以及限制特定于用户、组、TTY 设备和 SSH 会话的最大空闲时间的配置。<filename>/etc/security/autologout.conf</filename> 包含多个配置示例。
    </para>
   </sect2>
  </sect1>

  <sect1 xml:id="sec-sec-prot-general-retiring">
   <title>淘汰包含敏感数据的 Linux 服务器</title>

   <para>

    安全策略通常包含即将被淘汰或被处置的储存媒体的一些处理过程。磁盘和媒体擦除过程常常被描述为媒体的完全销毁。您可以在因特网上找到多个免费工具。搜索<quote>dod 磁盘擦除实用程序</quote>将返回多个搜索结果。要淘汰包含敏感数据的服务器，请务必确保无法从硬盘恢复数据。要确保已去除所有数据痕迹，可以使用 <command>scrub</command> 等擦除实用程序。许多擦除实用程序都会多次重写数据。这样可确保即使使用复杂的方法，也无法取回已擦除数据的任何部分。一些工具甚至可通过可引导移动设备进行操作，并根据美国国防部 (DoD) 标准去除数据。请注意，许多政府机构都会指定自己的数据安全标准。一些标准可能强于其他标准，但可能需要更多的实施时间。
   </para>

   <important>
    <title>擦除耗损均衡设备</title>
    <para>
     一些设备（例如 SSD）使用耗损均衡功能，不一定会在同一物理位置写入新数据。此类设备通常会提供自己的删除功能。
    </para>
   </important>

   <sect2 xml:id="sec-sec-prot-general-retiring-scrub">
    <title>scrub：磁盘重写实用程序</title>
    <para>
     <command>scrub</command> 利用重复模式来重写硬盘、文件和其他设备，旨在让从这些设备恢复数据变得更困难。它有三种基本操作模式：在字符或块设备上、在文件上或在指定目录上。有关详细信息，请参见手册页 <command>man 1 scrub</command>。
    </para>
    <variablelist>
     <title>支持的擦除方法</title>
     <varlistentry>
      <term>nnsa</term>
      <listitem>
       <para>
        用于清理可移动硬盘和不可移动硬盘的 4 轮 NNSA Policy Letter NAP-14.1-C (XVI-8)，需要使用伪随机模式重写所有位置两次，然后使用一种已知模式：ran- dom(x2)、0x00、verify。
       </para>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term>dod</term>
      <listitem>
       <para>
        用于清理可移动和不可移动 rigid 磁盘的 4 轮 DoD 5220.22-M 第 8-306 节程序 (d)，需要使用一个字符、其补充、一个随机字符重写所有可寻址位置，然后进行校验。注意：scrub 首先执行一轮随机，以使校验更容易：random、0x00、0xff、verify。
       </para>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term>bsi</term>
      <listitem>
       <para>
        德国信息技术安全中心 (<link xlink:href="http://www.bsi.bund.de"/>) 建议的 9 轮方法：0xff、0xfe、0xfd、0xfb、0xf7、0xef、0xdf、0xbf、0x7f。
       </para>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term>gutmann</term>
      <listitem>
       <para>
        下面引述的 Gutmann 文献中对规范化 35 轮序列进行了说明。
       </para>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term>schneier</term>
      <listitem>
       <para>
        Bruce Schneier 在“Applied Cryptography”（应用密码学，1996）中介绍的 7 轮方法：0x00、0xff、random(x5)
       </para>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term>pfitzner7</term>
      <listitem>
       <para>
        Roy Pfitzner 的 7 轮随机方法：random(x7)。
       </para>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term>pfitzner33</term>
      <listitem>
       <para>
        Roy Pfitzner 的 33 轮随机方法：random(x33)。
       </para>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term>usarmy</term>
      <listitem>
       <para>
        US Army AR380-19 方法：0x00、0xff、random。（注意：与 DoD 522.22-M 第 8-306 节的过程 (e) 相同，用于清理磁芯内存）。
       </para>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term>fillzero</term>
      <listitem>
       <para>
        1 轮模式：0x00。
       </para>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term>fillff</term>
      <listitem>
       <para>
        1 轮模式：0xff。
       </para>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term>random</term>
      <listitem>
       <para>
        1 轮模式：random(x1)。
       </para>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term>random2</term>
      <listitem>
       <para>
        2 轮模式：random(x2)。
       </para>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term>old</term>
      <listitem>
       <para>
        6 轮预发行版 1.7 擦除方法：0x00、0xff、0xaa、0x00、0x55、verify。
       </para>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term>fastold</term>
      <listitem>
       <para>
        5 轮模式：0x00、0xff、0xaa、0x55、verify。
       </para>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term>custom=string</term>
      <listitem>
       <para>
        1 轮自定义模式。字符串可能包含 C 样式数字转义符：\nnn（八进制）或 \xnn（十六进制）。
       </para>
      </listitem>
     </varlistentry>
    </variablelist>
   </sect2>
  </sect1>
  <sect1 xml:id="sec-sec-prot-general-backups">
   <title>备份</title>

   <para>
    如果您的系统被入侵，可以使用备份来恢复先前的系统状态。发生 bug 或意外时，也可以使用备份将当前系统与旧版本进行比较。对于生产系统而言，请务必针对灾难等情况进行一些非现场备份（例如磁带/可刻录媒体的非现场储存，或非现场发起的储存）。
   </para>

   <para>
    出于法律原因，一些公司和组织必须谨慎考虑备份过多信息以及保留时间过长的情况。如果您的环境设有销毁旧纸质文件的相关政策，您可能还需要将此政策扩展至 Linux 备份磁带。
   </para>

   <para>
    有关服务器的物理安全的规则也适用于备份。此外，还建议您对备份数据进行加密。可对单个备份存档执行此操作，也可对整个备份文件系统执行此操作（如适用）。如果备份媒体丢失（例如在运输途中），加密可保护数据免受未经授权的访问。如果备份系统本身遭到入侵，则适用相同的规则。在某种程度上，加密还可确保备份的完整性。但请注意，相应人员需要能够在紧急情况下解密备份。此外，还应考虑加密密钥本身被入侵而需要替换的情况。
   </para>

   <para>
    如果已知某个系统被入侵或疑似被入侵，请务必确定备份的完整性状态。如果在较长一段时间内都未检测到系统入侵，则有可能备份已包含被操控的配置文件或恶意程序。请保留足够长的备份历史以便检查可能的不合理差异。
   </para>

   <para>
    即使不存在任何已知安全违规，也应定期检查各备份中重要配置文件之间的差异，这有助于发现安全问题（甚至可能的意外错误配置）。此方法最适合内容不会频繁发生更改的文件和环境。
   </para>
  </sect1>
  <sect1 xml:id="sec-sec-prot-general-partitions">
   <title>磁盘分区</title>

   <para>
    服务器至少应该具有以下独立文件系统：<filename>/</filename>、<filename>/boot</filename>、<filename>/usr</filename>、<filename>/var</filename>、<filename>/tmp</filename> 和 <filename>/home</filename>。如此可避免一些问题，例如，<filename>/var</filename> 和 <filename>/tmp</filename> 下的日志记录空间和临时空间填满根分区。第三方应用程序也应位于独立的文件系统，例如在 <filename>/opt</filename> 下。
   </para>

   <para>
    独立文件系统的另一项优势是可以选择只适合文件系统层次结构中某些区域的特殊装入选项。一些相关的装入选项包括：
   </para>

   <itemizedlist>
    <listitem>
     <para>
      <literal>noexec</literal>：阻止文件执行。
     </para>
    </listitem>
    <listitem>
     <para>
      <literal>nodev</literal>：阻止使用字符或块特殊设备。
     </para>
    </listitem>
    <listitem>
     <para>
      <literal>nosuid</literal>：阻止 <literal>set-user-ID</literal> 或 <literal>set-group-ID</literal> 位生效。
     </para>
    </listitem>
    <listitem>
     <para>
      <literal>ro</literal>：以<literal>只读</literal>方式装入文件系统。
     </para>
    </listitem>
   </itemizedlist>

   <para>
    在对分区装入应用上述选项之前，需要仔细考虑每个选项。否则应用程序可能会停止工作，或者可能会违反支持状态。如果正确应用，装入选项有助于抵御某些类型的安全攻击或避免错误配置。例如，无需将 <literal>set-user-ID</literal> 二进制文件置于 <filename>/tmp</filename> 中。
   </para>

   <para>
    建议您查看<xref linkend="cha-common-criteria"/>。请务必了解是否需要将可能影响运行中系统的分区进行分隔（例如，日志文件会填满 <filename>/var/log</filename>，因此有必要将 <filename>/var</filename> 从 <filename>/</filename> 分区分隔出来）。另一个注意事项是您可能需要利用 LVM 或其他卷管理器，或者至少是扩展分区类型，来解决 PC 类系统上的四个主分区的限制。
   </para>

   <para>
    <phrase role="productname"><phrase os="sles">SUSE Linux Enterprise Server</phrase></phrase> 中的另一项功能是将分区甚至是充当容器的单个目录或文件进行加密。有关详细信息，请参见<xref linkend="cha-security-cryptofs"/>。
   </para>
  </sect1>
  <sect1 xml:id="sec-sec-prot-general-firewall">
   <title>防火墙 (iptables)</title>

   <para>
    本指南中不会详细介绍如何从头设置 Linux 防火墙。大多数公司都会使用专用防火墙或设备来保护其生产网络中的服务器。强烈建议设置防火墙以确保环境安全。
   </para>

   <para>
    <phrase role="productname"><phrase os="sles">SUSE Linux Enterprise Server</phrase></phrase> 还包括 <systemitem class="daemon">firewalld</systemitem>。这是一个防火墙守护程序，可使用 <command>firewall-cmd</command> 通过命令行进行配置，也可使用 <command>firewall-config</command> 在图形用户界面中配置。还可以通过 YaST 防火墙接口配置 <systemitem class="daemon">firewalld</systemitem> 的基本设置。有关 <systemitem class="daemon">firewalld</systemitem> 工作原理的详细信息，请参见 <link xlink:href="http://www.firewalld.org/documentation/"/>。
   </para>

   <para>
    如果您还对使用 <command>iptables</command> 直接编写防火墙规则的脚本感兴趣，因特网上提供了众多指南可供参考。相关资源请见附录。有关大量的 iptables 教程和示例，请参见 <link xlink:href="http://www.linuxguruz.com/iptables/"/>。还有称为 <command>nftables</command> 的下一代 Linux 防火墙实施。编写防火墙规则的脚本时，使用该防火墙实施会更简单且功能更强大。<link xlink:href="https://wiki.nftables.org/wiki-nftables/index.php/Main_Page"/> 中提供了有关 <command>nftables</command> 的详细信息。
   </para>

  </sect1>
  <sect1 xml:id="sec-sec-prot-general-kernel">
   <title>内核中的安全功能</title>

   <para>
    以下列表显示您可用于保护 Linux 服务器免受攻击的可调内核参数。其中一些为 SLE 发行套件中已包含的默认参数。要查看任何这些设置的当前状态，您可以查询内核（<filename>/proc/sys/...</filename> 内容）。例如，源路由设置位于 <filename>/proc/sys/net/ipv4/conf/all/accept_source_route</filename> 文件中。只显示文件的内容，以查看当前运行的内核是如何设置的。
   </para>

   <para>
    对于显示的每个可调内核参数，可修改需要受到影响的项更改，或将其添加到 <filename>/etc/sysctl.conf</filename> 配置文件中以使在重引导后保留更改。
   </para>

   <para>
    您可以使用以下命令，获取当前内核设置列表：
   </para>

<screen><prompt role="root">root # </prompt>sysctl -a</screen>

   <para>
    通过将 <command>sysctl</command> 命令的输出重定向到文件来储存内核设置的输出（以供比较或参考）是一个很好的方法，例如
   </para>

<screen><prompt role="root">root # </prompt>sysctl -A &gt; /root/sysctl.settings.store</screen>

   <para>
    由于 <phrase role="productname"><phrase os="sles">SUSE Linux Enterprise Server</phrase></phrase> 默认包含专注于安全的内核微调参数，您会看到将稀疏填充现有 <filename>/etc/sysctl.conf</filename> 文件。您可以选择使用上述储存全部内核设置的<quote>目录</quote>方法，然后选择您要在重引导时重置的那些参数。您可以将这些参数置于 <filename>/etc/sysctl.conf</filename> 文件中，重引导时便可以在此处提取它们，也可以通过运行命令 <command>sysctl</command>
    <option>-p</option> 将它们立即插入（到正在运行的内核中）。
   </para>

   <para>
    Oracle、SAP、DB2、Websphere 等众多第三方应用程序建议更改内核参数，以确保高性能的 I/O 或 CPU 处理。获取当前设置的完整列表有助于日后参考。
   </para>

   <sect2 xml:id="sec-sec-prot-general-kernel-syn-cookie">
    <title>启用 TCP SYN Cookie 保护（<phrase role="productname"><phrase os="sles">SUSE Linux Enterprise Server</phrase></phrase> <phrase role="productnumber"><phrase os="sles;sled">15 SP2</phrase></phrase> 中的默认设置）</title>
    <para>
     SYN 攻击是一种拒绝服务攻击，会消耗掉计算机上的所有资源。连接到网络的任何服务器都可能会受到此攻击。要启用 TCP SYN Cookie 保护，请编辑 <filename>/etc/sysctl.conf</filename> 文件，并确保包含下面一行和值：
    </para>
<screen>net.ipv4.tcp_syncookies = 1</screen>
    <note>
     <para>
      忽略配置选项的名称，它也适用于 IP6。
     </para>
    </note>
   </sect2>

   <sect2 xml:id="sec-sec-prot-general-route">
    <title>禁用 IP 源路由（<phrase role="productname"><phrase os="sles">SUSE Linux Enterprise Server</phrase></phrase> <phrase role="productnumber"><phrase os="sles;sled">15 SP2</phrase></phrase> 中的默认设置）</title>
    <para>
     源路由用于指定从来源到目标的网络路径或路由。联网用户可以使用此功能进行问题诊断。但如果入侵者能够将源路由包发送到网络，他们便可以截获答复，而您的服务器可能并不知道其未与可信的服务器进行通讯。
    </para>
<screen>net.ipv4.conf.all.accept_source_route = 0</screen>
    <para>
     或
    </para>
<screen>net.ipv6.conf.all.accept_source_route = 0</screen>
   </sect2>

   <sect2 xml:id="sec-sec-prot-general-icpm-redirect">
    <title>禁止接受 ICMP 重定向</title>
    <para>
     路由器使用 ICMP 重定向来告知服务器还有比服务器所选网络路径更好的其他网络路径。不过，入侵者可能会使用 ICMP 重定向包，通过让流量使用您不想使用的路径来更改主机的路由表。要禁止接受 ICMP 重定向，请编辑 <filename>/etc/sysctl.conf</filename> 文件并添加下面一行：
    </para>
<screen>net.ipv4.conf.all.accept_redirects = 0</screen>
    <para>
     或
    </para>
<screen>net.ipv6.conf.all.accept_redirects = 0</screen>
   </sect2>

   <sect2 xml:id="sec-sec-prot-general-ip-spoofing">
    <title>启用 IP 欺骗保护（<phrase role="productname"><phrase os="sles">SUSE Linux Enterprise Server</phrase></phrase> <phrase role="productnumber"><phrase os="sles;sled">15 SP2</phrase></phrase> 中的默认设置）</title>
    <remark>krahmer 2014-08-14: IPv6 should be handled separately</remark>
    <para>
     IP 欺骗是一种入侵者通过操控源地址以发送声称来自其他主机的包的技术。拒绝服务攻击经常会使用 IP 欺骗。有关 IP 欺骗的详细信息，请参见 <link xlink:href="http://en.wikipedia.org/wiki/IP_address_spoofing"/>。
    </para>
<screen>net.ipv4.conf.all.rp_filter = 1</screen>
   </sect2>

   <sect2 xml:id="sec-sec-prot-general-icpm-ignore">
    <title>启用忽略 ICMP 请求</title>
    <para>
     如果您希望或需要 Linux 忽略 <command>ping</command> 请求，请编辑 <filename>/etc/sysctl.conf</filename> 文件并添加下面一行：
    </para>
<screen>net.ipv4.icmp_echo_ignore_all = 1</screen>
    <para>
     在许多环境中都无法执行此操作，因为一些监视系统会使用基本 ICMP (ping) 来确定网络上设备的运行状况（或者至少能够做出响应）。
    </para>
   </sect2>

   <sect2 xml:id="sec-sec-prot-general-broadcast">
    <title>启用忽略广播请求（<phrase role="productname"><phrase os="sles">SUSE Linux Enterprise Server</phrase></phrase> <phrase role="productnumber"><phrase os="sles;sled">15 SP2</phrase></phrase> 中的默认设置）</title>
    <para>
     如果您希望或需要 Linux 忽略广播请求，请添加下面一行。
    </para>
<screen>net.ipv4.icmp_echo_ignore_broadcasts = 1</screen>
   </sect2>

   <sect2 xml:id="sec-sec-prot-general-errormsg">
    <title>启用不良错误消息保护（<phrase role="productname"><phrase os="sles">SUSE Linux Enterprise Server</phrase></phrase> <phrase role="productnumber"><phrase os="sles;sled">15 SP2</phrase></phrase> 中的默认设置）</title>
    <para>
     要提醒您网络中的不良错误消息，请添加下面一行。
    </para>
<screen>net.ipv4.icmp_ignore_bogus_error_responses = 1</screen>
   </sect2>

   <sect2 xml:id="sec-sec-prot-general-logging">
    <title>启用欺骗包、源路由包、重定向包的日志记录</title>
    <para>
     要开启欺骗包、源路由包和重定向包的日志记录，请编辑 <filename>/etc/sysctl.conf</filename> 文件并添加下面一行：
    </para>
<screen>net.ipv4.conf.all.log_martians = 1</screen>
    <note>
     <para>
      由于设置 <phrase role="productname"><phrase os="sles">SUSE Linux Enterprise Server</phrase></phrase>（使用 rsyslog）以进行网络事件跟踪的方式，这可能会导致记录大量消息。
     </para>
    </note>
   </sect2>

   <sect2 xml:id="sec-sec-prot-general-add-random">
    <title>缓冲溢出攻击缓解措施</title>
    <para>
     从 2.6.x 内核版本开始，Linux 提供<emphasis>地址空间布局随机化</emphasis> (ASLR) 和<emphasis>不执行</emphasis>（NX 位）功能来缓解缓冲区溢出攻击。有关更多信息，请参见:
    </para>
    <itemizedlist>
     <listitem>
      <para>
       <link xlink:href="http://searchenterpriselinux.techtarget.com/tip/Linux-virtual-address-randomization-and-impacting-buffer-overflows"/>
      </para>
     </listitem>
     <listitem>
      <para>
       <link xlink:href="https://en.wikipedia.org/wiki/Address_space_layout_randomization"/>
      </para>
     </listitem>
     <listitem>
      <para>
       <link xlink:href="https://en.wikipedia.org/wiki/NX_bit"/>
      </para>
     </listitem>
    </itemizedlist>
    <para>
     从版本 12 开始，<phrase role="productname"><phrase os="sles">SUSE Linux Enterprise Server</phrase></phrase> 随附了一些缓冲区溢出攻击缓解技术，默认会启用这些技术。
    </para>
    <para>
     默认情况下，ASLR 处于启用状态。您可使用以下命令通过输出进行校验。预期结果为 2：
    </para>
<screen><prompt>tux &gt; </prompt>cat /proc/sys/kernel/randomize_va_space
2</screen>
    <para>
     这将会随机分配动态关联库的堆、堆栈和装载地址。已使用特殊编译器标志（PIE 和 _FORTIFY_SOURCE）构建运行特权或处理网络数据的程序，以便更充分地利用随机分配文本和数据段。
    </para>
    <para>
     可执行文件的空间保护功能可防止执行预期不会执行的内存空间。Linux 使用<emphasis>不执行位</emphasis>。<phrase role="productname"><phrase os="sles">SUSE Linux Enterprise Server</phrase></phrase> 内核 x86 和 AMD64/Intel 64 体系结构上默认会启用此功能。每个程序都必须支持使用 NX 位。您可以检查您的系统是否支持 NX 位：
    </para>
<screen><prompt>tux &gt; </prompt>dmesg | grep '[NX|DX]*protection'
[    0.000000] NX (Execute Disable) protection: active</screen>
    <para>
     如果 NX 处于禁用状态，请检查您的 BIOS 或 UEFI 的设置是否启用该功能，并确保您的 CPU 支持该功能。
    </para>
    <para>
     此外，从版本 12 开始，<phrase role="productname"><phrase os="sles">SUSE Linux Enterprise Server</phrase></phrase> 可通过设置 <literal>kptr_restrict</literal> 来防止泄漏内部内核地址，使入侵内核的难度增加。
    </para>
<screen><prompt>tux &gt; </prompt>cat /proc/sys/kernel/kptr_restrict
1</screen>
    <para>
     在支持该功能的 CPU（更新的 AMD64/Intel 64 CPU）上，内核默认还会使用 SMEP 保护，可阻止从内核内部直接执行用户空间代码。攻击者通常会利用这一点入侵内核，因此这是一项很好的强化措施。
    </para>
   </sect2>

   <sect2 xml:id="sec-sec-prot-general-file-system">
    <title>文件系统强化</title>
    <para>
     为了减少通过特权程序（tmp-races、TOCTOU）访问不安全文件系统的漏洞，Linux 内核提供了两个 <command>sysctl</command> 变量，<phrase role="productname"><phrase os="sles">SUSE Linux Enterprise Server</phrase></phrase> <phrase role="productnumber"><phrase os="sles;sled">15 SP2</phrase></phrase> 上默认应已启用了这些变量：<literal>fs.protected_hardlinks</literal> 和 <literal>fs.protected_symlinks</literal> 或其相应的 <filename>/proc</filename> 项：
    </para>
<screen><prompt>tux &gt; </prompt>cat /proc/sys/fs/protected_hardlinks
1</screen>
    <para>
     通过将此项设为 <literal>1</literal>，用户将无法创建其不拥有的文件的软链接和硬链接。这将会减少不小心调用 open(2)、creat(2) 或类似函数的程序的常见漏洞入侵途经。
    </para>
<screen><prompt>tux &gt; </prompt>cat /proc/sys/fs/protected_symlinks
1</screen>
    <para>
     通过将此项设为 <literal>1</literal>，仅当在粘滞全局可写目录之外，或者当链接的 UID 与跟踪块匹配，或者当目录拥有者与符号链接拥有者匹配时，才允许跟踪符号链接。
    </para>
   </sect2>

   <sect2 xml:id="sec-sec-prot-general-dmesg">
    <title>增加的 <command>dmesg</command> 限制</title>
    <para>
     <command>dmesg</command> 提供各种系统内部信息，例如内核地址、服务崩溃以及本地攻击者可能使用的类似信息。这就是为何对 <command>dmesg</command> 的访问默认仅限于 <systemitem class="username">root</systemitem> 的原因所在。相应行为由 <literal>kernel.dmesg_restrict</literal> 选项（默认值为 1）进行控制。如果设置为 0，则任何用户都可以查看 <command>dmesg</command> 的输出。
    </para>
   </sect2>

   <sect2 xml:id="sec-sec-prot-general-devmem">
    <title>过滤对 <filename>/dev/mem</filename> 的访问（<phrase role="productname"><phrase os="sles">SUSE Linux Enterprise Server</phrase></phrase> 12 中的默认设置）</title>
    <para>
     <filename>/dev/mem</filename> 中会存储系统主内存的映像，包括内核和用户空间内存。允许对此信息的未经过滤访问是危险的，因此已对 <phrase role="productname"><phrase os="sles">SUSE Linux Enterprise Server</phrase></phrase> 上的内核进行了编译，启用了 <envar>CONFIG_STRICT_DEVMEM</envar>。此设置会将对 <filename>/dev/mem</filename> 的用户空间访问限制为内存映射的外设。
    </para>
   </sect2>
  </sect1>
  <sect1 xml:id="sec-sec-prot-general-aa">
   <title><phrase>AppArmor</phrase></title>

   <para>
    <phrase>AppArmor</phrase> 包含在 <phrase role="productname"><phrase os="sles">SUSE Linux Enterprise Server</phrase></phrase> 中，是一种旨在为您的应用程序提供易于使用的安全框架的应用程序安全工具。<phrase>AppArmor</phrase> 可通过强制执行特定行为以及防止一些未知的应用程序缺陷被恶意利用，来主动保护操作系统和应用程序免受外部或内部威胁，甚至是零时差攻击。<phrase>AppArmor</phrase> 安全策略（称为<quote>配置文件</quote>）完整地定义了每个应用程序可访问的系统资源和文件。配置文件还定义了访问模式，例如读取或写入。<phrase>AppArmor</phrase> 随附多个默认配置文件，并结合使用高级静态分析和基于学习的工具，甚至在几个小时内便能成功部署适用于非常复杂的应用程序的 <phrase>AppArmor</phrase> 配置文件。
   </para>

   <para>
    <phrase>AppArmor</phrase> 由以下部分组成：
   </para>

   <itemizedlist>
    <listitem>
     <para>
      强制执行安全配置文件的内核扩展。
     </para>
    </listitem>
    <listitem>
     <para>
      RPM 的集合，还随附有提供了以下项目的 <phrase role="productname"><phrase os="sles">SUSE Linux Enterprise Server</phrase></phrase>：
     </para>
     <itemizedlist>
      <listitem>
       <para>
        <phrase role="productname"><phrase os="sles">SUSE Linux Enterprise Server</phrase></phrase> 随附有适用于众多程序的一组 <phrase>AppArmor</phrase> 配置文件。
       </para>
      </listitem>
      <listitem>
       <para>
        用于创建和管理新的和现有的 <phrase>AppArmor</phrase> 配置文件的工具。
       </para>
      </listitem>
      <listitem>
       <para>
        用于管理安全事件的报告和通知的 YaST 用户界面。
       </para>
      </listitem>
      <listitem>
       <para>
        有关 <phrase>AppArmor</phrase> 工具的文档。
       </para>
      </listitem>
     </itemizedlist>
    </listitem>
   </itemizedlist>
   <para>
    最好在完成安装之后重引导系统，以便 <phrase>AppArmor</phrase> 能够限制所有系统守护程序。
   </para>
   <para>
    有关 <phrase>AppArmor</phrase> 的使用和配置的其他细节和逐步说明，您还可以参见<xref linkend="part-apparmor"/>。
   </para>
  </sect1>

  <sect1 xml:id="sec-sec-prot-general-selinux">
   <title>SELinux</title>
   <para>
    除了传统的读取、写入或执行权限之外，SELinux 还提供更精细的访问控制。例如，您可以控制取消链接、追加或移动文件的人员。您可以控制对除文件以外的许多资源（例如网络资源和进程间通讯）的访问。此功能与基本启用一起随附于 <phrase role="productname"><phrase os="sles">SUSE Linux Enterprise Server</phrase></phrase>
    <phrase role="productnumber"><phrase os="sles;sled">15 SP2</phrase></phrase> 中。SUSE Linux Enterprise Server 上支持 SELinux 框架；SLES 提供在您的服务器上使用 SELinux 所需的所有二进制文件和库。有关详细信息，请参见<xref linkend="part-selinux"/>的<quote>配置 SELinux</quote>一章。
   </para>
  </sect1>
  <sect1 xml:id="sec-sec-prot-general-remote">
   <title>FTP、<command>telnet</command> 和 <command>rlogin</command> (rsh)</title>

   <para>
    FTP 的程序/协议、<command>telnet</command> 和 <command>rlogin</command> (<command>rsh</command>) 都容易遭到窃听，这是改用 <command>ssh</command>、<command>scp</command> 或 <command>sftp</command> 等安全替代方案的主要原因之一。强烈建议您不要运行这些不安全的服务。由于存在高风险，本指南未涵盖这些服务（vsftp 除外）。最好不要在系统上安装 FTP 和 Telnet 服务器 RPM（作为我们的指导的一部分，请参见下一节）。请注意，EAL 4+ 评估安装了 vsftp。<quote>vs</quote>表示<quote>非常安全</quote>，与常规 FTP 相比，具有竞争优势。
   </para>
  </sect1>
  <sect1 xml:id="sec-sec-prot-general-remove-packs">
   <title>去除不需要的软件包 (RPM)</title>

   <para>
    保护 Linux 系统的一个非常重要的步骤就是确定 Linux 服务器的主要功能或角色。否则，就很难了解需要保护哪些方面，并且对这些 Linux 系统的保护可能是无效的。因此，请务必查看默认的软件包列表，并去除任何与您定义的安全策略不符的不需要的软件包。
   </para>

   <para>
    一般而言，RPM 软件包包含以下各项：
   </para>
   <itemizedlist>
    <listitem>
     <para>
      在安装时写入到 RPM 数据库的软件包元数据。
     </para>
    </listitem>
    <listitem>
     <para>
      软件包的文件和目录。
     </para>
    </listitem>
    <listitem>
     <para>
      安装和去除之前和之后执行的脚本。
     </para>
    </listitem>
   </itemizedlist>
   <para>
    <emphasis>除非</emphasis>软件包包含以下项目，否则一般不会给系统带来任何安全风险：
   </para>
   <orderedlist spacing="normal">
    <listitem>
     <para>
      任何已安装文件上的 setuid 或 setgid 位
     </para>
    </listitem>
    <listitem>
     <para>
      组可写或全局可写的文件或目录
     </para>
    </listitem>
    <listitem>
     <para>
      在安装时激活或默认激活的服务。
     </para>
    </listitem>
   </orderedlist>
   <para>
    假设上述三个条件均不适用，软件包只是文件集合。安装或卸载此类软件包对系统的安全价值不会产生影响。
   </para>

   <para>
    但无论如何，将您系统中的已安装软件包限制为最少数量都会很有用。当发布安全警报和补丁时，限制最少数量将使得需要更新的软件包更少，并将简化维护工作。最好的做法是不要在生产服务器上安装开发软件包或桌面软件包（例如 X 服务器）。如果您不需要这些软件包，您也不应该安装它们，例如 Apache Web 服务器或 Samba 文件共享服务器。
   </para>

   <important>
    <title>第三方安装程序的要求</title>
    <para>
     Oracle 和 IBM 等许多第三方供应商需要桌面环境和开发库来运行安装程序。为避免它对生产服务器的安全产生影响，许多组织都会通过在开发实验室中创建静默安装（响应文件）来解决此问题。
    </para>
   </important>

   <para>
    此外，除非有正当的理由，否则也不应安装 FTP 和 Telnet 守护程序等其他软件包。应改用 <command>ssh</command>、<command>scp</command> 或 <command>sftp</command> 替代方案，请参见<xref linkend="sec-sec-prot-general-remote"/>。
   </para>

   <para>
    最先执行的操作中的一项操作应该是创建<emphasis>仅</emphasis>包含系统和应用程序所需 RPM 以及维护和查错目的所需 RPM 的 Linux 映像。较好的做法是从 RPM 最少列表开始，然后根据需要添加软件包。此过程比较耗时，但通常是值得的。
   </para>

   <tip>
    <title>Just Enough Operating System (JeOS)</title>
    <para>
     SUSE Appliance Program 包含一个称为 JeOS（最精简操作系统，Just Enough Operating System）的组件。JeOS 的占用量非常小，并且可以对其进行自定义，以满足系统开发人员的特定需求。JeOS 主要用于硬件/软件设备或虚拟机开发。JeOS 的主要优点是高效、高性能、高安全性以及管理简单。
    </para>
    <para>
     如果您无法选择 JeOS，较好的选择是最小安装模式。
    </para>
   </tip>

   <para>
    要生成所有已安装软件包的列表，请使用以下命令：
   </para>

<screen><prompt role="root">root # </prompt>zypper packages -i</screen>

   <para>
    要检索有关特定软件包的细节，请运行：
   </para>

<screen><prompt role="root">root # </prompt>zypper info <replaceable>PACKAGE_NAME</replaceable></screen>

   <para>
    要在删除某个软件包时检查并报告可能的冲突或依赖项，请运行：
   </para>

<screen><prompt role="root">root # </prompt>zypper rm -D <replaceable>PACKAGE_NAME</replaceable></screen>

   <para>
    此命令非常有用，因为在未测试的情况下就运行去除命令常常会产生大量投诉，并且需要手动寻找递归依赖项。
   </para>

   <important>
    <title>去除基本系统软件包</title>
    <para>
     去除软件包时，请小心不要去除任何基本的系统软件包。这可能会使您的系统受损，无法再引导或修复。如果您对此不确定，最好是先对您的系统进行完整的备份，然后再去除任何软件包。
    </para>
   </important>

   <para>
    对于使用以下 <command>zypper</command> 命令并添加<quote>-u</quote>开关最后去除的一个或多个软件包，这将导致由于移除指定软件包而变为未使用的任何依赖项也将被去除：
   </para>

   <screen><prompt role="root">root # </prompt>zypper rm -u <replaceable>PACKAGE_NAME</replaceable></screen>

  </sect1>
  <sect1 xml:id="sec-sec-prot-general-patching">
   <title>修补 Linux 系统</title>

   <para>
    为补丁管理构建基础结构是构成主动且安全的 Linux 生产环境的另一个非常重要的部分。
   </para>

   <para>
    建议您实施书面安全策略和程序，以处理 Linux 安全更新和问题。例如，安全策略应详细指出评估、测试和发布补丁的时间范围。与网络有关的安全漏洞应具有最高优先级，并应在短时间内立即予以解决。评估阶段应发生于测试实验室内，并应首先在开发系统中进行初始发布。
   </para>

   <para>
    独立的安全日志文件应包含有关已接收的 Linux 安全公告、已研究和已评估的补丁、补丁的应用时间等细节。
   </para>

   <para>
    SUSE 发布以下三类补丁：安全、推荐和可选。可以使用一些选项来确保系统获得修补、是最新的且安全。每个系统都可以注册，然后使用附带的 YaST 工具（YaST 联机更新）通过 SUSE 更新网站来检索更新。SUSE 还创建了储存库镜像工具 (RMT)，它可以有效地维护可用/已发布补丁/更新/修复的本地储存库，以便系统随后可从该储存库中提取相应补丁/更新/修复，减少了因特网流量。SUSE 还提供 SUSE Manager，用于维护、修补、报告和集中管理 Linux 系统，不仅仅是 SUSE，其他分发包也提供有该工具。
   </para>

   <sect2 xml:id="sec-sec-prot-general-patching-you">
    <title>YaST 联机更新</title>
    <para>
     可使用 YaST 联机更新工具基于每台服务器安装重要的更新和改进。可通过包含补丁的产品特定更新目录获取 SUSE Linux Enterprise 系列的当前更新。使用 YaST 并选择<guimenu>软件</guimenu>组中的<guimenu>联机更新</guimenu>完成更新和改进的安装。已将您系统当前可用的所有新补丁（可选补丁除外）标记为待安装。单击<guimenu>接受</guimenu>将会自动安装这些补丁。
    </para>
   </sect2>

   <sect2 xml:id="sec-sec-prot-general-patching-auto">
    <title>自动联机更新</title>
    <para>
     YaST 还可设置自动更新。选择<menuchoice> <guimenu>软件</guimenu> <guimenu>自动联机更新</guimenu></menuchoice>。配置每日或每周更新。有些补丁（如内核更新）需要用户交互，交互可能会导致自动更新停止。请选中<guimenu>跳过交互补丁</guimenu>使更新过程自动进行。
    </para>
    <para>
     在这种情况下，请手动运行联机更新安装需要交互的补丁。
    </para>
    <para>
     选中<guimenu>仅下载补丁</guimenu>后，将在指定时间下载补丁但不会进行安装。必须使用 <command>rpm</command> 或 <command>zypper</command> 对其进行手动安装。
    </para>
   </sect2>

   <sect2 xml:id="sec-sec-prot-general-patching-smt">
    <title>储存库镜像工具 — RMT</title>
    <para>
     适用于 SUSE Linux Enterprise 的储存库镜像工具比联机更新进程更进一步，建立了具有储存库和注册目标的代理系统。这有助于客户在每个系统上的防火墙内集中管理软件更新，同时维护其公司安全政策和法规合规性。
    </para>
    <para>
     可下载的 RMT (<link xlink:href="http://download.suse.com/"/>) 与 SUSE Customer Center (<link xlink:href="https://scc.suse.com/"/>) 集成在一起，并提供与其同步的储存库和注册目标。这对于跟踪大型部署中的权利非常有帮助。RMT 可维护 SUSE Customer Center 的所有功能，同时允许更安全的集中部署。它随每个 SUSE Linux Enterprise 订购提供，因此完全受支持。
    </para>
    <para>
     RMT 提供了默认配置的替代配置，需要打开出站连接的防火墙，然后每个设备才能接收更新。此要求通常会违反公司安全策略，并且可能被某些组织视为对法规遵从的威胁。RMT 与 SUSE Customer Center 集成，可确保每个设备都可以接收相应的更新，而无需打开防火墙，也没有冗余带宽要求。
    </para>
    <para>
     RMT 还让客户能够在本地跟踪整个企业中的 SUSE Linux Enterprise 设备（即服务器、桌面或服务点终端）。现在，客户可以轻松确定帐单周期结束时有多少权利需要续约，而不必走到数据中心来手动更新电子表格。
    </para>
    <para>
     RMT 会向 SUSE Linux Enterprise 设备告知任何可用的软件更新。每个设备随后可从 RMT 获取所需的软件更新。RMT 的引入改进了网络中的 SUSE Linux Enterprise 设备之间的交互，并简化了这些设备接收系统更新的方式。RMT 支持每个安装实例均拥有一个适用于数百个 SUSE Linux Enterprise 设备的基础结构（取决于特定的使用配置文件）。这使服务器跟踪更精确、更有效。
    </para>
    <para>
     简单来说，适用于 SUSE Linux Enterprise 的储存库镜像工具向客户提供：
    </para>
    <itemizedlist>
     <listitem>
      <para>
       防火墙和法规遵从保证
      </para>
     </listitem>
     <listitem>
      <para>
       软件更新期间缩减的带宽使用率
      </para>
     </listitem>
     <listitem>
      <para>
       来自 SUSE 的完全支持（依照活动订阅）
      </para>
     </listitem>
     <listitem>
      <para>
       对与 SUSE Customer Center 的现有客户接口的维护
      </para>
     </listitem>
     <listitem>
      <para>
       准确的服务器授权跟踪以及对订购使用情况的有效测量
      </para>
     </listitem>
     <listitem>
      <para>
       自动化的过程以便轻松计算权利总数（不再需要电子表格！）
      </para>
     </listitem>
     <listitem>
      <para>
       简单的安装过程，该过程会自动与 SUSE Customer Center 同步服务器权利
      </para>
     </listitem>
    </itemizedlist>
   </sect2>

   <sect2 xml:id="sec-sec-prot-general-patching-suma">
    <title>SUSE Manager</title>
    <para>
     SUSE Manager 可自动进行 Linux 服务器管理，可让您更快且更准确地对服务器进行配置和维护。它会通过单个控制台监视每台 Linux 服务器的运行状况，以便您可以在服务器性能问题对业务产生影响之前识别出该问题。SUSE Manager 还可让您在物理、虚拟和云环境中全面管理您的 Linux 服务器的同时提高数据中心效率。SUSE Manager 为 Linux 提供全面的生命周期管理：
    </para>
    <itemizedlist>
     <listitem>
      <para>
       资产管理
      </para>
     </listitem>
     <listitem>
      <para>
       置备
      </para>
     </listitem>
     <listitem>
      <para>
       软件包管理
      </para>
     </listitem>
     <listitem>
      <para>
       补丁管理
      </para>
     </listitem>
     <listitem>
      <para>
       配置管理
      </para>
     </listitem>
     <listitem>
      <para>
       重新部署
      </para>
     </listitem>
    </itemizedlist>
    <para>
     有关 SUSE Manager 的详细信息，请参见 <link xlink:href="https://www.suse.com/products/suse-manager/"/>。
    </para>
   </sect2>
  </sect1>
  <sect1 xml:id="sec-sec-prot-general-ports">
   <title>保护网络 — 开放网络端口检测</title>

   <para>
    为了保护服务器安全需要您了解其所提供的服务，即正在运行的服务。默认的服务器安装可能会包含非自显运行且使用开放网络端口的服务。因此最重要的任务之一就是检测并关闭不需要的网络端口。要获取监听网络端口（TCP 和 UDP 套接字）的列表，您可以使用 <command>netstat</command> 服务运行以下命令：
   </para>

<screen><prompt role="root">root # </prompt>ss -tulpn</screen>

   <para>
    请注意，<command>ss</command> 输出的宽度可能大于默认终端屏幕的宽度。如果屏幕太窄，上述选项将可能导致输出换行，并且可读性变差。
   </para>

   <para>
    下面是上述命令的一个输出示例：
   </para>

<screen>Netid  State  Recv-Q Send-Q Local Address:Port  Peer Address:Port
udp    UNCONN 0      0        0.0.0.0%eth0:68         0.0.0.0:*   users:(("wickedd-dhcp4",pid=541,fd=8))
tcp    LISTEN 0      128           0.0.0.0:22         0.0.0.0:*   users:(("sshd",pid=1562,fd=3))
tcp    LISTEN 0      100         127.0.0.1:25         0.0.0.0:*   users:(("master",pid=1701,fd=13))
tcp    LISTEN 0      128              [::]:22            [::]:*   users:(("sshd",pid=1562,fd=4))
tcp    LISTEN 0      100             [::1]:25            [::]:*   users:(("master",pid=1701,fd=14))</screen>

   <para>
    从上面的输出可以看到，有 2 个基于 TCP 的服务和 1 个基于 UDP 的服务正在运行和监听：master、sshd 和 wickedd。应停止不需要的服务。使用其他计算机中的端口扫描进行确认。请务必获取适当的权限，以扫描生产网络上的计算机。
   </para>

   <important>
    <para>
     一些组织将未经许可的端口扫描视为安全违规。
    </para>
   </important>

   <para>
    使用 <command>nmap</command> 命令可执行此类扫描：
   </para>

<screen><prompt role="root">root # </prompt>nmap -sS -sU <replaceable>REMOTE_HOST</replaceable>
Starting nmap 3.70 ( http://www.insecure.org/nmap/ ) at 2004-12-10 22:51 CST
Interesting ports on venus (192.168.2.101):
(The 3131 ports scanned but not shown below are in state: closed)
PORT     STATE         SERVICE
22/tcp   open          ssh
69/tcp   open          auth

Nmap run completed -- 1 IP address (1 host up) scanned in 221.669 seconds</screen>

   <para>
    请注意，默认情况下，运行 <command>nmap</command> 命令将只会扫描某些知名端口。如果您要扫描所有端口，则需要指定 <command>-p 1-65535</command>。执行此操作将明显降低扫描速度。特别是对于 UDP 扫描，建议使用 masscan (<link xlink:href="https://software.opensuse.org/package/masscan"/>) 等异步扫描仪。
   </para>

<screen><prompt role="root">root # </prompt>masscan <replaceable>REMOTE_HOST</replaceable>/32 -p 1-65535

Starting masscan 1.0.4 (http://bit.ly/14GZzcT) at 2017-11-28 10:51:58 GMT
 -- forced options: -sS -Pn -n --randomize-hosts -v --send-eth
Initiating SYN Stealth Scan
Scanning 1 hosts [65535 ports/host]
Discovered open port 222/tcp on 192.168.1.2
Discovered open port 443/tcp on 192.168.1.2
Discovered open port 25/tcp on 192.168.1.2
Discovered open port 9030/tcp on 192.168.1.2
Discovered open port 587/tcp on 192.168.1.2
Discovered open port 80/tcp on 192.168.1.2</screen>

   <para>
    要扫描 UDP，请使用 <command>U:</command> 前缀指定端口：<command>masscan <replaceable>REMOTE_HOST</replaceable>/32 -p U:1-65535</command>。
   </para>

   <para>
    扫描结果之间可能会有较大差别，并且可能不会显示所有监听网络套接字，具体视防火墙状态而定。
   </para>

   <para>
    从上面运行的第一个示例中，您会看到 <systemitem class="daemon">tftpd</systemitem> 守护程序正在端口 auth（端口 69）上监听 <literal>IDENT</literal>。您还可以看到 sendmail 未监听远程传入网络连接。
   </para>

   <para>
    另一种列出程序正在主机上监听的所有 TCP 和 UDP 套接字的方法是使用 <command>lsof</command> 命令，它会列出打开的文件：
   </para>

<screen><prompt role="root">root # </prompt>lsof -i -n | egrep 'COMMAND|LISTEN|UDP'
COMMAND  PID   USER   FD   TYPE    DEVICE SIZE/OFF NODE NAME
sshd     2317  root   3u   IPv6    6579   0t0      TCP *:ssh (LISTEN)
tftpd    2328  root   5u   IPv4    6698   0t0      TCP *:auth (LISTEN)
sendmail 2360  root   3u   IPv4    6729   0t0      TCP 127.0.0.1:smtp (LISTEN)</screen>

   <para>
    您应始终检查使用外部扫描通过在计算机上运行命令获得的结果。
   </para>

  </sect1>
  <sect1 xml:id="sec-sec-prot-general-postfix">
   <title>保护 Postfix</title>

   <para>
    Postfix 是 Sendmail 的替代方案，与 Sendmail 相比具有多项安全优势。Postfix 是 <phrase role="productname"><phrase os="sles">SUSE Linux Enterprise Server</phrase></phrase> 中的默认邮件系统，并包含多个小程序，每个程序都可以执行各自的小型任务，大部分此类程序都在 chroot jail 中运行。这是建议使用 Postfix 来替代 Sendmail 的原因之一。
   </para>

   <para>
    不属于专用邮件或中继服务器的 Linux 服务器不应接受外部电子邮件。但对于生产服务器来说，将本地电子邮件发送到中继服务器很重要 — 可以配置一些安全设置（例如 seccheck 脚本）以向除 <systemitem class="username">root</systemitem> 以外的其他人发送电子邮件，甚至发送到本地系统之外。
   </para>

   <para>
    校验 <filename>/etc/postfix/main.cf</filename> 中是否已设置下列参数，以确保 Postfix 仅接受传递本地电子邮件（请直达文件底部，因为前面的部分主要是注释掉的示例项和解释）：
   </para>

<screen>mydestination = $myhostname, localhost.$mydomain, localhost
inet_interfaces = localhost</screen>

   <para>
    <literal>mydestination</literal> 参数列出用于接收电子邮件的所有域。<literal>inet_interfaces</literal> 参数指定要在其上监听的网络。重新配置 Postfix 之后，必须重启动邮件系统。
   </para>

<screen><prompt role="root">root # </prompt>systemctl restart postfix</screen>

   <para>
    从其他主机运行下面其中一个命令，以校验 Postfix 是否未监听网络请求（传入）：
   </para>

<screen>nmap -sT -p 25 <replaceable>REMOTE_HOST</replaceable>
telnet &lt;remote_host&gt; 25</screen>

   <note>
    <para>
     在本地主机上运行这些命令将提供不准确的结果，因为 Postfix 预期接受来自本地节点的连接。请使用外部主机，以获取正确结果。
    </para>
   </note>
  </sect1>
  <sect1 xml:id="sec-sec-prot-general-nfs">
   <title>文件系统：保护 NFS</title>

   <para>
    NFS（网络文件系统）允许服务器通过网络共享文件。但使用 NFS 的所有网络服务都存在风险。
   </para>

   <para>
    下面是一些基本规则：
   </para>

   <itemizedlist>
    <listitem>
     <para>
      在不需要使用 NFS 的情况下，不应将其启用。
     </para>
    </listitem>
    <listitem>
     <para>
      如果确实需要 NFS，请使用 TCP 封装程序来限制远程访问。
     </para>
    </listitem>
    <listitem>
     <para>
      请确保只导出到确实需要访问的主机。
     </para>
    </listitem>
    <listitem>
     <para>
      使用完全限定的域名减少任何欺骗尝试。
     </para>
    </listitem>
    <listitem>
     <para>
      在可能的情况下，只以只读方式导出。
     </para>
    </listitem>
    <listitem>
     <para>
      只通过 TCP 使用 NFS。
     </para>
    </listitem>
   </itemizedlist>

   <para>
    如果您没有要导出的共享目录，则应确保<emphasis>未</emphasis>启用 NFS 服务，也未在系统上运行该服务。
   </para>

   <para>
    检查 NFS 服务状态：
   </para>

<screen><prompt role="root">root # </prompt>systemctl status nfsserver</screen>

   <para>
    检查当前目标：
   </para>

<screen><prompt role="root">root # </prompt>ls /etc/systemd/system/*.wants/nfsserver.service</screen>

   <sect2 xml:id="sec-sec-prot-general-nfs-start">
    <title>启用和启动 NFS 服务器</title>
    <para>
     如果必须使用 NFS，可以使用以下命令在 <phrase role="productname"><phrase os="sles">SUSE Linux Enterprise Server</phrase></phrase> 上将其激活，或者可以使用更简便安全的 YaST 插件 (ncurses) 进行激活。直接通过带有 <command>yast nfs_server</command> 或 <command>yast nfs_client</command> 的命令行进行访问，或者手动访问：
    </para>
<screen><prompt role="root">root # </prompt>systemctl enable nfs
systemctl start nfs</screen>
    <para>
     Portmapper 信息：
    </para>
<screen><prompt role="root">root # </prompt>rpcinfo -p <replaceable>SERVERNAME</replaceable>
   program vers proto   port
    100000    2   tcp    111  portmapper
    100000    2   udp    111  portmapper
    100003    2   udp   2049  nfs
    100003    3   udp   2049  nfs
    100003    2   tcp   2049  nfs
    100003    3   tcp   2049  nfs
    100005    1   udp    623  mountd
    100005    1   tcp    626  mountd
    100005    2   udp    623  mountd
    100005    2   tcp    626  mountd
    100005    3   udp    623  mountd
    100005    3   tcp    626  mountd</screen>
    <para>
     如果您通过“不可信”服务器或网络运行该命令，会收到以下输出：
    </para>
<screen><prompt role="root">root # </prompt>rpcinfo -p <replaceable>SERVERNAME</replaceable>
No remote programs registered.</screen>
   </sect2>

   <sect2 xml:id="sec-sec-prot-general-nfs-export">
    <title>导出 NFS</title>
    <para>
     要允许客户端访问文件系统或目录，请将 <filename>/etc/exports</filename> 文件充当访问控制列表。要授予网络“network.example.com”对 <filename>/pub</filename> 的只读访问权限，<filename>/etc/exports</filename> 中的项应如下所示：
    </para>
    <screen>      /pub *.network.example.com(ro,sync)</screen>
    <para>
     如果不是绝对需要，请<emphasis>勿</emphasis>授予对 NFS 客户端的写入访问权限！默认情况下，<filename>/etc/exports</filename> 中的导出项为只读（<option>ro</option> 选项）。要允许服务器 <systemitem class="systemname">sles-ha1</systemitem>、<systemitem class="systemname">sles-ha2</systemitem> 和 <systemitem class="systemname">sles-ha3</systemitem> 拥有对 <filename>/data/MYSQL</filename> 目录的读写访问权限，<filename>/etc/exports</filename> 中的项应如下所示：
    </para>
    <screen>/data/MYSQL sles-ha1.example.com(rw,sync) sles-ha2.example.com(rw,sync) sles-ha3.example.com(rw,sync)</screen>
    <para>
     请注意，选项<emphasis>不得</emphasis>使用空格来分隔主机名或网络。此外，还应<emphasis>始终</emphasis>使用完全限定的域名，以减少欺骗尝试。默认情况下，会使用 <option>root_squash</option> 选项（<quote>根权限压缩</quote>）导出 <filename>/etc/exports</filename> 中的所有项。这意味着客户端计算机上的 root 用户没有导出的 NFS 上文件的 root 特权（root 访问权限）。不建议使用 <option>no_root_squash</option> 选项关闭<quote>根权限压缩</quote>！将您的所有项放入 <filename>/etc/exports</filename> 之后，便可以使用以下命令导出所有文件系统/目录：
    </para>
    <screen><prompt role="root">root # </prompt>exportfs -a</screen>
    <para>
     要取消导出所有共享文件系统/目录，请运行：
    </para>
    <screen><prompt role="root">root # </prompt>exportfs -ua</screen>
    <para>
     要查看所有共享文件系统/目录，请运行：
    </para>
<screen><prompt role="root">root # </prompt>showmount -e localhost
Export list for localhost:

/pub *.network.example.com/data/MYSQL
sles-ha1.example.com,sles-ha2.example.com,sles-ha3.example.com</screen>
   </sect2>

   <sect2 xml:id="sec-sec-prot-general-nfs-tcp">
    <title>通过 TCP 使用 NFS</title>
    <para>
     如果您需要 NFS，建议仅通过 TCP 使用 NFS，因为通过 UDP 使用 NFS 并不安全。所有 2.4 及更高版本的内核都支持在客户端通过 TCP 使用 NFS。服务器支持 2.4 及以上版本的内核使用 TCP。要通过 TCP 使用 NFS 来装入共享目录，必须使用 <option>proto=tcp</option> 装入选项：
    </para>
    <screen><prompt role="root">root # </prompt>mount -o proto=tcp <replaceable>SERVERNAME</replaceable>:/pub /usr/local/pub
    </screen>
    <para>
     校验客户端上是否存在目标目录（此示例中为 <filename>/usr/local/pub</filename>）：
    </para>
<screen><prompt role="root">root # </prompt>mount [...] <replaceable>SERVERNAME</replaceable>:/pub on
/usr/local/pub type nfs (rw,proto=tcp,addr=192.168.1.110)</screen>
    <para>
     要于引导时在客户端上装入共享目录，请使用 <filename>/etc/fstab</filename> 文件。对于上述示例，<filename>/etc/fstab</filename> 项如下所示：
    </para>
    <screen><replaceable>SERVERNAME</replaceable>:/pub /usr/local/pub nfs rsize=8192,wsize=8192,timeo=14,intr,tcp 0 0
    </screen>
   </sect2>
  </sect1>
  <sect1 xml:id="sec-sec-prot-general-scp">
   <title>在未提供登录提示的情况下使用 SSH 复制文件</title>

   <para>
    在某些情况下，需要此示例，以便在未提供交互式登录提示的情况下使用 SSH 通过网络来复制文件。此操作允许设置可信主机 — 即是一种联合。
   </para>

   <para>
    SSH 允许使用<quote>command</quote>选项的强制命令。使用此选项可以禁用 scp（安全复制）并强制忽略每个已传递的 <command>ssh</command> 命令。在您要检索其中文件的服务器端，将以下项添加到 <filename>~/.ssh/authorized_keys</filename> 文件中 SSH 密钥的开头（<filename>~</filename> 表示特定的用户主目录 – <systemitem class="username">root</systemitem> 的主目录为 <filename>/root</filename> – 其他用户通常位于 <filename>/home/<replaceable>USERNAME</replaceable></filename>）：
   </para>

   <screen>command="/bin/cat ~/&lt;file_name&gt;" ssh-rsa AAAAB3N...{etc}</screen>

   <para>
    要立即从远程服务器复制文件，请运行以下命令：
   </para>

   <para>
    ssh <replaceable>USER</replaceable>@<replaceable>SERVERNAME</replaceable>
    <replaceable>LOCAL_FILE</replaceable>
   </para>

   <para>
    由于在服务器端运行了 <command>/bin/cat</command>，需要将其输出重定向到本地文件。
   </para>

   <para>
    另一种方法是使用您自己的脚本替换 <command>/bin/cat</command>（上文中提及），该脚本通过读取环境变量 <envar>$SSH_ORIGINAL_COMMAND</envar> 检查已传递的 SSH 命令。例如：
   </para>

<screen>#!/bin/ksh
 if [[ $SSH_ORIGINAL_COMMAND = "File1" ||
       $SSH_ORIGINAL_COMMAND = "File2" ]]
 then
     /bin/cat $SSH_ORIGINAL_COMMAND
 else
     echo "Invalid file name!"
     exit 1
 fi</screen>

   <para>
    因此在 <filename>~/.ssh/authorized_keys</filename> 中使用脚本名称替换 <command>/bin/cat</command> 部分，然后运行以下命令以复制 <filename>Foo1</filename>：
   </para>

<screen><prompt>tux &gt; </prompt>ssh <replaceable>USER</replaceable>@<replaceable>SERVERNAME</replaceable> Foo1 &gt; <replaceable>LOCAL_FILE</replaceable></screen>

   <para>
    要复制 <filename>Foo 2</filename>，请运行：
   </para>

<screen><prompt>tux &gt; </prompt>ssh <replaceable>USER</replaceable>@<replaceable>SERVERNAME</replaceable> Foo2 &gt; <replaceable>LOCAL_FILE</replaceable></screen>

   <para>
    完成上述修改后，其他任何一种已传递参数都将返回错误。
   </para>
  </sect1>
  <sect1 xml:id="sec-sec-prot-general-check-perms">
   <title>检查文件权限和所有权</title>

   <para>
    以下几节介绍修改默认权限和文件设置以提高主机安全性的一些方法。请务必注意 <command>seccheck</command> 等默认 <phrase role="productname"><phrase os="sles">SUSE Linux Enterprise Server</phrase></phrase> 实用程序的使用 - 可运行该实用程序进行锁定，提高一般文件安全性并改善用户环境。但最好了解如何修改这些项目。
   </para>

   <para>
    <phrase role="productname"><phrase os="sles">SUSE Linux Enterprise Server</phrase></phrase> 主机包含以下三个默认文件权限设置：<filename>permissions.easy</filename>、<filename>permissions.secure</filename> 和 <filename>permissions.paranoid</filename>，这三者均位于 <filename>/etc</filename> 目录中。这些文件用于定义特殊权限（如全局可写目录），或为文件定义 setuser ID 位（设置了 setuser ID 位的程序未以启动该程序的用户权限运行，而是以文件拥有者权限运行，通常为 <systemitem class="username">root</systemitem>）。
   </para>

   <para>
    管理员可以使用文件 <filename>/etc/permissions.local</filename> 添加自己的设置。实施上述其中一个默认权限规则集最简单的方法就是使用 YaST 中的<guimenu>本地安全</guimenu>模块。
   </para>

   <para>
    将由某个选定规则集修改以下每一个主题，但请务必了解其自身信息。
   </para>
  </sect1>
  <sect1 xml:id="sec-sec-prot-general-umask">
   <title>默认的 umask</title>

   <para>
    <command>umask</command>（用户文件创建模式掩码）命令是一个外壳内置命令，决定了新创建文件和目录的默认文件权限。它可被系统调用重写，但许多程序和实用程序都使用 <command>umask</command>。默认情况下，<command>umask</command> 设置为 <literal>022</literal>。您可以更改 <filename>/etc/profile</filename> 中的值以全局修改此设置，也可针对外壳启动文件中的每个用户进行更改。
   </para>

   <para>
    要确定活动的 umask，请使用 <command>umask</command> 命令：
   </para>

<screen><prompt>tux &gt; </prompt>umask
022</screen>

   <para>
   如果至少设置了一个位，则将从访问模式 <literal>777</literal> 去除 umask。
   </para>

   <para>
    使用默认的 umask，您将会看到大多数用户预期可在 Linux 系统上看到的行为。
   </para>

<screen>
<prompt>tux &gt; </prompt>touch a
<prompt>tux &gt; </prompt>mkdir b
<prompt>tux &gt; </prompt>ls -on
total 16
-rw-r--r--. 1 17086    0 Nov 29 15:05 a
drwxr-xr-x. 2 17086 4096 Nov 29 15:05 b
</screen>

   <para>
    您可以指定任意 umask 值，具体取决于您的需求。
   </para>
<screen>
<prompt>tux &gt; </prompt>umask 111
<prompt>tux &gt; </prompt>touch c
<prompt>tux &gt; </prompt>mkdir d
<prompt>tux &gt; </prompt>ls -on
total 16
-rw-rw-rw-. 1 17086    0 Nov 29 15:05 c
drw-rw-rw-. 2 17086 4096 Nov 29 15:05 d
</screen>

   <para>
    根据您的线程模型，您可以使用 <literal>037</literal> 等更严格的 umask，以防止意外数据泄漏。
   </para>
<screen>
<prompt>tux &gt; </prompt>umask 037
<prompt>tux &gt; </prompt>touch e
<prompt>tux &gt; </prompt>mkdir f
<prompt>tux &gt; </prompt>ls -on
total 16
-rw-r-----. 1 17086    0 Nov 29 15:06 e
drwxr-----. 2 17086 4096 Nov 29 15:06 f
</screen>

  </sect1>
  <sect1 xml:id="sec-sec-prot-general-s-bit">
   <title>SUID/SGID 文件</title>

   <para>
    如果在可执行文件上设置 SUID（设置用户 ID）位或 SGID（设置组 ID）位，它会以可执行文件拥有者的 UID 或 GID 来执行，而不是以执行人员的 UID 或 GID 来执行。举例来说，这意味着会以 <systemitem class="username">root</systemitem> 的 UID 执行设置了 SUID 位且由 <systemitem class="username">root</systemitem> 拥有的所有可执行文件。<command>passwd</command> 命令就是一个典型的示例，它允许普通用户更新由 <systemitem class="username">root</systemitem> 拥有的 <filename>/etc/shadow</filename> 文件中的口令字段。
   </para>

   <para>
    但当可执行文件存在安全漏洞时，SUID/SGID 位可能会被滥用。因此，您应该搜索整个系统中的 SUID/SGID 可执行文件并进行记录。要搜索整个系统中的 SUID 或 SGID 文件，您可以运行以下命令：
   </para>

<screen><prompt role="root">root # </prompt>find /bin /boot /etc /home /lib /lib64 /opt /root /sbin /srv /tmp /usr /var -type f -perm '/6000' -ls</screen>

   <para>
    如果您有其他文件系统结构，则需要扩展搜索的目录列表。
   </para>


   <para>
    SUSE 仅在确实需要时才会在二进制文件上设置 SUID/SGID 位。不是绝对必要的情况下，请确保代码开发人员未在其程序上设置 SUID/SGID 位。通常，您可以使用诸如去除世界/其他可执行文件位等解决方法。但更好的方法是更改软件设计或使用权限。
   </para>

   <para>
    <phrase role="productname"><phrase os="sles">SUSE Linux Enterprise Server</phrase></phrase> 支持文件权限，可授予程序更精细的特权，而不是 <systemitem class="username">root</systemitem> 的全部权限：
   </para>

<screen><prompt role="root">root # </prompt>getcap -v /usr/bin/ping
      /usr/bin/ping = cap_new_raw+eip</screen>

   <para>
    上一个命令只会为执行 <command>ping</command> 的人员授予 CAP_NET_RAW 权限。如果 <command>ping</command> 的内部存在漏洞，攻击者最多可以获得此权限，而不是 <systemitem class="username">root</systemitem> 的全部权限。可能的情况下，应选择文件权限以支持 SUID 位。但仅当二进制文件的 suid 设置为 <systemitem class="username">root</systemitem>，而不是其他 <literal>news</literal>、<literal>lp</literal> 等类似用户时，这一条才适用。
   </para>

  </sect1>
  <sect1 xml:id="sec-sec-prot-general-filepermissions">
   <title>全局可写文件</title>

   <para>
    全局可写文件存在安全风险，因为系统上的任何用户都可以对其进行修改。此外，全局可写目录允许任何人添加或删除文件。要查找全局可写文件和目录，您可以使用以下命令：
   </para>

<screen><prompt role="root">root # </prompt>find /bin /boot /etc /home /lib /lib64 /opt /root /sbin /srv /tmp /usr /var -type f -perm -2 ! -type l -ls</screen>

   <para>
   如果您有其他文件系统结构，则需要扩展搜索的目录列表。
   </para>

   <para>
    <option>! -type l</option> 参数可跳过所有符号链接，因为符号链接始终为全局可写。但只要链接的目标不是全局可写（由上述查找命令进行检查），就不会发生问题。
   </para>

   <para>
    带有粘滞位的全局可写目录（例如 <filename>/tmp</filename> 目录）不允许任何人（文件拥有者除外）在此目录中执行文件删除或重命名操作。粘滞位使文件与其创建用户相关联，可防止其他用户删除和重命名该文件。因此，带有粘滞位的全局可写目录通常都不会发生问题，具体视目录的用途而定。例如 <filename>/tmp</filename> 目录：
   </para>

<screen><prompt>tux &gt; </prompt>ls -ld /tmp
drwxrwxrwt 18 root root 16384 Dec 23 22:20 /tmp</screen>

   <para>
    输出中的 <literal>t</literal> 模式位表示粘滞位。
   </para>

  </sect1>
  <sect1 xml:id="sec-sec-prot-general-orphaned">
   <title>孤立文件或无拥有者的文件</title>

   <para>
    未被任何用户或组拥有的文件本身不一定会发生安全问题。但无拥有者的文件可能会在将来发生安全问题。例如，如果创建了新用户，并且该新用户获得的 UID 刚好与无拥有者文件的 UID 相同，则该新用户将自动成为这些文件的拥有者。
   </para>

   <para>
    要查找未被任何用户或组拥有的文件，请使用以下命令：
   </para>

    <screen><prompt role="root">root # </prompt>find /bin /boot /etc /home /lib /lib64 /opt /root /sbin /srv /tmp /usr /var -nouser -o -nogroup</screen>

   <para>
   如果您有其他文件系统结构，则需要扩展搜索的目录列表。
   </para>

   <para>
    另一个问题是未通过打包系统安装因此未收到更新的文件。您可以使用以下命令检查此类文件：
   </para>

   <screen><prompt>tux &gt; </prompt>find /bin /lib /lib64 /usr -path /usr/local -prune -o -type f -a -exec /bin/sh -c "rpm -qf {} &amp;&gt; /dev/null || echo {}" \;</screen>

   <para>
    因为经过设计的文件名可能会导致命令执行，会以不可信用户（例如“没有任何用户”）运行此命令。这不应成为一个问题，因为这些目录只能由 <systemitem class="username">root</systemitem> 进行写入，但仍不失为一项良好的安全预防措施。
   </para>

   <para>
    这将会显示 <filename>/bin</filename>、<filename>/lib</filename>、<filename>/lib64</filename> 和 <filename>/usr</filename>（<filename>/usr/local</filename> 中的文件除外）下软件包管理器未跟踪的所有文件。这些文件可能不代表安全问题，但您应注意未跟踪的文件，并执行必要的预防措施确保这些文件是最新的。
   </para>
  </sect1>
  
  <sect1 xml:id="sec-sec-prot-general-removable-media">
    <title>限制访问可移动媒体</title>



    <para>
     在某些环境中，需要限制访问可移动媒体，例如 USB 储存或光学设备。<systemitem>udisks2</systemitem> 软件包随附的工具有助于进行此类配置。
    </para>

    <procedure>
     <step>
      <para>
       创建允许用户装入和弹出移动设备的用户组，例如 <replaceable>mmedia_all</replaceable>：
      </para>
<screen><prompt>tux &gt; </prompt><command>sudo</command> groupadd <replaceable>mmedia_all</replaceable></screen>
     </step>
     <step>
      <para>
       向新组添加特定用户 <systemitem class="username">tux</systemitem>：
      </para>
<screen><prompt>tux &gt; </prompt><command>sudo</command> usermod -a -G <replaceable>mmedia_all</replaceable> <systemitem class="username">tux</systemitem></screen>
     </step>
     <step>
      <para>
       创建包含以下内容的 <filename>/etc/polkit-1/rules.d/10-mount.rules</filename> 文件：
      </para>
<screen>
<prompt>tux &gt; </prompt>cat /etc/polkit-1/rules.d/10-mount.rules
polkit.addRule(function(action, subject) {
 if (action.id =="org.freedesktop.udisks2.eject-media"
  &amp;&amp; subject.isInGroup("<replaceable>mmedia_all</replaceable>")) {
   return polkit.Result.YES;
  }
});

polkit.addRule(function(action, subject) {
 if (action.id =="org.freedesktop.udisks2.filesystem-mount"
  &amp;&amp; subject.isInGroup("<replaceable>mmedia_all</replaceable>")) {
   return polkit.Result.YES;
  }
});
</screen>
      <important>
       <title>规则文件命名</title>
       <para>
        规则文件的名称必须以数字开头，否则将忽略该名称。
       </para>
       <para>
        规则文件按字母顺序进行处理。函数按其添加的顺序进行调用，直到其中一个函数返回值为止。因此，要添加在其他规则之前处理的授权规则，请将其放入 /etc/polkit-1/rules.d 中名称排序在其他规则文件之前的某个文件，例如 <filename>/etc/polkit-1/rules.d/10-mount.rules</filename>。每个函数应从 <literal>polkit.Result</literal> 返回值。
       </para>
      </important>
     </step>
     <step>
      <para>
       重启动 <systemitem>udisks2</systemitem>：
      </para>
<screen><prompt role="root">root # </prompt>systemctl restart udisks2</screen>
     </step>
     <step>
      <para>
       重启动 <systemitem>polkit</systemitem>
      </para>
<screen><prompt role="root">root # </prompt>systemctl restart polkit</screen>
     </step>
    </procedure>
   </sect1>

  <sect1 xml:id="sec-sec-prot-general-accounts">
   <title>各种帐户检查</title>

   <sect2 xml:id="sec-sec-prot-general-accounts-unlocked">
    <title>未锁定的帐户</title>
    <para>
     请务必锁定未用于登录的所有系统帐户和供应商帐户。要获取您系统中未锁定帐户的列表，您可以查找<emphasis>不含</emphasis>以 <literal>! </literal> 或 <literal>*</literal> 开头（在 <filename>/etc/shadow</filename> 文件中）的加密口令字符串的帐户。如果使用 <command>passwd</command> <option>-l</option> 锁定帐户，将会在加密口令之前添加 <literal>!! </literal>，以有效禁用该口令。如果使用 <command>usermod</command> <option>-L</option> 锁定帐户，将会在加密口令之前添加 <literal>! </literal>。默认情况下，许多系统和共享帐户通常都由口令字段中的 <literal>*</literal> 或 <literal>!! </literal> 进行锁定，这会让加密口令变为无效字符串。因此，要获取所有未锁定（可加密）帐户的列表，请运行（使用 <command>egrep</command> 以允许使用正则表达式）：
    </para>
    <screen><prompt role="root">root # </prompt>egrep -v ':\*|:\!' /etc/shadow | awk -F: '{print $1}'</screen>
    <para>
     同时确保所有帐户在 <filename>/etc/passwd</filename> 中的口令字段中都有 <literal>x</literal>。以下命令列出口令字段中没有 <literal>x</literal> 的所有帐户：
    </para>
    <screen><prompt role="root">root # </prompt>grep -v ':x:' /etc/passwd</screen>
    <para>
     口令字段中的 <literal>x</literal> 表示该口令已阴影化，例如需要在 <filename>/etc/shadow</filename> 文件中查找加密口令。如果 <filename>/etc/passwd</filename> 中的口令字段为空，则系统将不会查找阴影文件，并且不会在出现登录提示时提示用户提供口令。
    </para>
   </sect2>

   <sect2 xml:id="sec-sec-prot-general-accounts-unused">
    <title>未使用的帐户</title>
    <para>
     应从系统中去除未被用户、应用程序、系统或守护程序使用的所有系统帐户或供应商帐户。您可以使用以下命令，查找特定帐户是否拥有任何文件：
    </para>
    <screen><prompt role="root">root # </prompt>find / -path /proc -prune -o -user <replaceable>ACCOUNT</replaceable> -ls</screen>
    <para>
     在此示例中，<option>-prune</option> 选项用于跳过 /proc 文件系统。如果您确定可以删除某个帐户，可以使用以下命令去除该帐户：
    </para>
    <screen><prompt role="root">root # </prompt>userdel -r <replaceable>ACCOUNT</replaceable></screen>
    <para>
     如果没有 <option>-r</option> 选项，<command>userdel</command> 将不会删除用户的主目录和邮件假脱机目录 (<filename>/var/spool/mail/<replaceable>USER</replaceable></filename>)。请注意，许多系统帐户都没有主目录。
    </para>
   </sect2>
  </sect1>
  <sect1 xml:id="sec-sec-prot-general-pw-aging">
   <title>启用口令时效</title>

   <para>
    口令失效是一种普遍采用的最佳实践，但对于一些系统帐户和共享帐户（例如 Oracle 等）而言，可能需要将其排除。如果应用程序帐户失效，这些帐户上的失效口令可能会导致系统服务中断。
   </para>

   <para>
    通常情况下，应针对系统帐户和共享帐户的口令更改规则/程序制定相应的公司政策。但常规用户帐户口令应该会自动失效。以下示例显示如何针对各个用户帐户设置口令失效。
   </para>

   <para>
    使用 <command>useradd</command> 命令创建新帐户时，可以使用下表中的文件和参数。将在 <filename>/etc/shadow</filename> 文件中为每个用户帐户储存此类设置。如果使用 YaST 工具（<guimenu>用户和组管理</guimenu>）添加用户，则会为每个用户提供该设置。下面是各种不同的设置，其中一些也可能是系统范围的设置（例如修改 <filename>/etc/login.defs</filename> 和 <filename>/etc/default/useradd</filename>）：
   </para>

   <informaltable>
    <tgroup cols="3">
     <tbody>
      <row>
       <entry>
        <para>
         <filename>/etc/login.defs</filename>
        </para>
       </entry>
       <entry>
        <para>
         <literal>PASS_MAX_DAYS</literal>
        </para>
       </entry>
       <entry>
        <para>
         口令保持有效的最大天数。
        </para>
       </entry>
      </row>
      <row>
       <entry>
        <para>
         <filename>/etc/login.defs</filename>
        </para>
       </entry>
       <entry>
        <para>
         <literal>PASS_MIN_DAYS</literal>
        </para>
       </entry>
       <entry>
        <para>
         自上次更改到用户下次可更改口令之前的最小天数。
        </para>
       </entry>
      </row>
      <row>
       <entry>
        <para>
         <filename>/etc/login.defs</filename>
        </para>
       </entry>
       <entry>
        <para>
         <literal>PASS_WARN_AGE</literal>
        </para>
       </entry>
       <entry>
        <para>
         口令更改提醒启动时的天数。
        </para>
       </entry>
      </row>
      <row>
       <entry>
        <para>
         <filename>/etc/default/useradd</filename>
        </para>
       </entry>
       <entry>
        <para>
         <literal>INACTIVE</literal>
        </para>
       </entry>
       <entry>
        <para>
         口令失效后帐户处于禁用状态的天数。
        </para>
       </entry>
      </row>
      <row>
       <entry>
        <para>
         <filename>/etc/default/useradd</filename>
        </para>
       </entry>
       <entry>
        <para>
         <literal>EXPIRE</literal>
        </para>
       </entry>
       <entry>
        <para>
         帐户失效日期（采用 YYYY-MM-DD 格式）。
        </para>
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>

   <note>
    <para>
     在这些修改之前创建的用户不受影响。
    </para>
   </note>

   <para>
    请确保在 <filename>/etc/login.defs</filename> 和 <filename>/etc/default/useradd</filename> 文件中更改上述参数。审阅 <filename>/etc/shadow</filename> 文件将显示在添加用户之后如何储存这些设置。
   </para>

   <para>
    要创建新用户帐户，请执行以下命令：
   </para>

   <screen><prompt role="root">root # </prompt>useradd -c "<replaceable>TEST_USER</replaceable>" -g <replaceable>USERS</replaceable> <replaceable>TEST</replaceable></screen>

   <para>
    <option>-g</option> 选项指定此帐户的主组：
   </para>

<screen><prompt role="root">root # </prompt>id <replaceable>TEST</replaceable>
uid=509(test) gid=100(users) groups=100(users)</screen>

   <para>
    为 <filename>/etc/shadow</filename> 文件中的测试用户在 <filename>/etc/login.defs</filename> 和 <filename>/etc/default/useradd</filename> 中记录的设置如下所示：
   </para>

<screen><prompt role="root">root # </prompt>grep <replaceable>TEST</replaceable> /etc/shadow
test:!!:12742:7:60:7:14::</screen>

   <para>
    可使用 <command>chage</command> 命令随时修改口令时效。要禁用系统帐户和共享帐户的口令时效，您可以运行以下 <command>chage</command> 命令：
   </para>

   <screen><prompt role="root">root # </prompt>chage -M -1 <replaceable>SYSTEM_ACCOUNT_NAME</replaceable></screen>

   <para>
    要获取口令失效信息，请运行：
   </para>

   <screen><prompt role="root">root # </prompt>chage -l <replaceable>SYSTEM_ACCOUNT_NAME</replaceable></screen>

   <para>
    例如：
   </para>

<screen><prompt role="root">root # </prompt>chage -l <replaceable>TEST</replaceable>
Minimum: 7
Maximum: 60
Warning: 7
Inactive: 14
Last Change: Jan 11, 2015
Password Expires: Mar 12, 2015
Password Inactive: Mar 26, 2015
Account Expires: Never</screen>
  </sect1>
  <sect1 xml:id="sec-sec-prot-general-pw-strength">
   <title>实施更强的口令</title>

   <para>
    在经审计的系统上，请务必限制用户使用可被轻松破解的简单口令。可以将复杂的口令记下来，只要妥善保管即可。有些人主张通过强口令来保护您免受字典攻击，并可通过数次失败尝试之后锁定帐户来防御此类攻击。但此方法并非始终有效。如果进行此类设置，锁定系统帐户可能会使应用程序和系统服务中断，这无异会产生另一个问题 — 拒绝服务攻击。
   </para>

   <para>
    但无论怎样，实施有效的口令管理安全措施都很重要。大多数公司会要求口令至少包含一个数字、一个小写字母和一个大写字母。虽政策各不相同，但有时要在口令强度/复杂性和管理之间取得平衡并不容易。
   </para>
  </sect1>
  <xi:include href="hardening_pam_stack.xml"/>
  <sect1 xml:id="sec-sec-prot-restrict-root">
   <title>限制 <systemitem class="username">root</systemitem> 登录</title>

   <para>
    默认情况下，为 <systemitem class="username">root</systemitem> 用户分配了口令，并且该用户可以使用各种方法进行登录 — 例如，在本地终端上、在图形会话中，或者通过 SSH 远程登录。应尽可能限制使用这些方法登录。应避免共享使用 root 帐户。而是由各个管理员使用 <literal>su</literal> 或 <literal>sudo</literal> 等工具（有关详细信息，请键入 <command>man 1 su</command> 或 <command>man 8 sudo</command>）获取提升的特权。如此可将 <systemitem class="username">root</systemitem> 登录与特定用户相关联。同时还可增加另一层安全保护；不仅仅是 <systemitem class="username">root</systemitem> 口令，还有管理员常规帐户的 <systemitem class="username">root</systemitem> <emphasis>以及</emphasis>口令都需要破解后才能获得完全的 root 访问权限。本节说明如何限制在不同级别系统上的直接 root 登录。
   </para>
   <sect2 xml:id="sec-sec-prot-restrict-root-tty">
    <title>限制本地文本控制台登录</title>

    <para>
     TTY 设备通过控制台提供文本模式的系统访问权限。对于桌面系统，通过本地键盘进行访问；或如果是服务器系统，则通过连接到 KVM 交换机或远程管理卡（ILO、DRAC 等）的输入设备进行访问。默认情况下，Linux 提供 6 个不同的控制台，在文本模式下运行时，可通过组合键 <keycombo><keycap function="alt"/><keycap>F1</keycap></keycombo> 到 <keycombo><keycap function="alt"/><keycap>F6</keycap></keycombo> 进行切换；或在图形会话中运行时，可通过组合键 <keycombo><keycap function="control"/><keycap function="alt"/><keycap>F1</keycap></keycombo> 到 <keycombo><keycap function="control"/><keycap function="alt"/><keycap>F6</keycap></keycombo> 进行切换。关联的终端设备则相应地名为 <literal>tty1</literal> ..<literal>tty6</literal>。
    </para>

    <para>
     下面的步骤限制对第一个 TTY 的 root 访问。此访问方法仅作为系统的紧急访问方式，绝不应将其用于日常系统管理任务。
    </para>

    <note>
     <para>
      此处显示的步骤根据 PC 体系结构（x86 和 AMD64/Intel 64）进行定制。在 POWER 等体系结构上，可能会使用除 <literal>tty1</literal> 以外的其他终端设备名称。请小心不要因为指定了错误的终端设备名称而将您自己完全锁定。您可以通过运行 <literal>tty</literal> 命令，确定当前登录的终端的设备名称。请注意不要在虚拟终端（例如通过 SSH）或图形会话（设备名称 <filename>/dev/pts/<replaceable>N</replaceable></filename>）中执行此操作，而只通过实际登录终端（可通过 <keycombo><keycap function="alt"/><keycap>F<replaceable>N</replaceable></keycap></keycombo> 访问）进行操作。
     </para>
    </note>

    <procedure>
     <title>限制在本地 TTY 上进行 root 登录</title>
     <step>
      <para>
       请确保 PAM 堆栈配置文件 <filename>/etc/pam.d/login</filename> 包含 <literal>auth</literal> 块中的 <literal>pam_securetty</literal> 模块：
      </para>
      <screen>auth     requisite      pam_nologin.so
 auth     [user_unknown=ignore success=ok ignore=ignore auth_err=die default=bad] pam_securetty.so noconsole
 auth     include        common-auth</screen>
      <para>
        在本地控制台上进行身份验证过程中，将包含 <literal>pam_securetty</literal> 模块，该模块会将 <systemitem class="username">root</systemitem> 限制为仅在文件 <filename>/etc/securetty</filename> 中列出的 TTY 设备上登录。
      </para>
     </step>
     <step>
      <para>
       去除 <filename>/etc/securetty</filename> 中除这一项外的其他所有项。这将限制对 TTY 设备的 root 访问。
      </para>
     <screen>#
# This file contains the device names of tty lines (one per line,
# without leading /dev/) on which root is allowed to login.
#
tty1</screen>
     </step>
     <step>
      <para>
       检查是否会拒绝 <systemitem class="username">root</systemitem> 登录其他终端。应立即拒绝在 <literal>tty2</literal> 等终端上登录，甚至无需查询帐户口令。同时确保您仍可以成功登录 <literal>tty1</literal>，因此不会完全锁定系统的 <systemitem class="username">root</systemitem>。
      </para>
     </step>
    </procedure>

    <important>
     <para>
      请不要将 <literal>pam_securetty</literal> 模块添加到 <filename>/etc/pam.d/common-auth</filename> 文件中。这将破坏 <command>su</command> 和 <command>sudo</command> 命令，因为这些工具也会拒绝 <systemitem class="username">root</systemitem> 身份验证。
     </para>
    </important>

    <important>
     <para>
      这些配置更改还将导致拒绝在 <filename>/dev/ttyS0</filename> 等串行控制台上进行 root 登录。如果您需要此类用例，则需要在 <filename>/etc/securetty</filename> 文件中额外列出相应的 tty 设备。
     </para>
    </important>
   </sect2>

   <sect2 xml:id="sec-sec-prot-retrict-root-graphical">
    <title>限制图形会话登录</title>

    <para>
     要提高您服务器的安全性，请完全避免使用图形环境。通常，图形程序不会设计为以 <systemitem class="username">root</systemitem> 身份运行，因此与控制台程序相比更可能包含安全问题。如果您需要图形登录，请使用非 <systemitem class="username">root</systemitem> 登录。配置您的系统，禁止通过 <systemitem class="username">root</systemitem> 登录图形会话。
    </para>

    <para>
     为了防止通过 <systemitem class="username">root</systemitem> 登录图形会话，您可以采用<xref linkend="sec-sec-prot-restrict-root-tty"/>中概述的相同基本步骤。只需将 <literal>pam_securetty</literal> 模块添加到属于显示管理器的 PAM 堆栈文件 — 例如，GDM 的 <filename>/etc/pam.d/gdm</filename>。图形会话还会在 TTY 设备上运行：默认为 <literal>tty7</literal>。因此，如果您限制 <systemitem class="username">root</systemitem> 登录到 <literal>tty1</literal>，将拒绝通过 <systemitem class="username">root</systemitem> 登录图形会话。
    </para>
   </sect2>

   <sect2 xml:id="sec-sec-prot-restrict-root-ssh">
    <title>限制 SSH 登录</title>
    <para>
     默认情况下，还允许 <systemitem class="username">root</systemitem> 用户通过 SSH 网络协议（如果 SSH 端口未被防火墙阻止）远程登录计算机。要限制此类登录，请对 OpenSSH 配置进行以下更改：
    </para>
    <procedure>
     <step>
      <para>编辑 <filename>/etc/ssh/sshd_config</filename> 并调整以下参数：</para>
      <screen>PermitRootLogin no</screen>
     </step>
     <step>
      <para>重启动 <systemitem class="service">sshd</systemitem> 服务以使更改生效：</para>
      <screen>systemctl restart sshd.service</screen>
     </step>
    </procedure>
    <note>
     <para>
      对于 OpenSSH，不适合使用 PAM <literal>pam_securetty</literal> 模块，因为在授权期间并非所有 SSH 登录都会通过 PAM 堆栈进行（例如使用 SSH 公共密钥身份验证时）。此外，攻击者能够区分错误口令和策略只能在稍后予以拒绝的成功登录。
     </para>
    </note>
   </sect2>

  </sect1>
  <sect1 xml:id="sec-sec-prot-inactivity-logout">
   <title>为交互式外壳会话设置无活动超时</title>
   <para>
    最好在一段无活动时间之后终止交互式外壳会话。例如，为了阻止打开的无人监管会话或为了避免浪费系统资源。
   </para>
   <para>
    默认情况下，外壳没有无活动超时。如此当外壳处于打开状态且在几天甚至几年内未被使用时，也不会有任何反应。您可以通过在一段时间后自动终止空闲会话的方式配置大多数外壳。以下示例显示如何为一些常见类型的外壳设置无活动超时。
   </para>
   <para>
    可仅为登录外壳配置无活动超时，也可以为所有交互式外壳配置无活动超时。对于后者，将针对每个外壳实例单独运行无活动超时。这意味着超时将会累积。当启动子外壳时，会为子外壳开始新的超时，并且仅在此超时过后，才会继续运行父外壳的超时。
   </para>
   <para>
    下表包含 <phrase role="productname"><phrase os="sles">SUSE Linux Enterprise Server</phrase></phrase> 随附的常见外壳选集的配置详细信息：
   </para>
   <informaltable frame="all" rowsep="1" colsep="1">
    <tgroup cols="7">
     <colspec colname="col_1" colwidth="10*"/>
     <colspec colname="col_2" colwidth="18*"/>
     <colspec colname="col_3" colwidth="20*"/>
     <colspec colname="col_4" colwidth="12*"/>
     <colspec colname="col_5" colwidth="20*"/>
     <colspec colname="col_6" colwidth="15*"/>
     <colspec colname="col_7" colwidth="15*"/>
     <thead>
      <row>
       <entry>软件包</entry>
       <entry>外壳特点</entry>
       <entry align="center">外壳变量</entry>
       <entry align="center">时间单位</entry>
       <entry>只读设置</entry>
       <entry align="center">配置路径（仅登录外壳）</entry>
       <entry align="center">配置路径（所有外壳）</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry><para><literal>bash</literal></para></entry>
       <entry><para><literal>bash、sh</literal></para></entry>
       <entry align="center"><para><literal>TMOUT</literal></para></entry>
       <entry align="center"><para>秒</para></entry>
       <entry><para><literal>readonly TMOUT=</literal></para></entry>
       <entry><para><filename>/etc/profile.​local</filename>、​<filename>/etc/profile.​d/</filename></para></entry>
       <entry><para><filename>/etc/bash.​bashrc</filename></para></entry>
      </row>
      <row>
       <entry><para><literal>mksh</literal></para></entry>
       <entry><para><literal>ksh、​lksh、​mksh、​pdksh</literal></para></entry>
       <entry align="center"><para><literal>TMOUT</literal></para></entry>
       <entry align="center"><para>秒</para></entry>
       <entry><para><literal>readonly TMOUT=</literal></para></entry>
       <entry><para><filename>/etc/profile.​local</filename>、​<filename>/etc/profile.​d/</filename></para></entry>
       <entry><para><filename>/etc/ksh.​kshrc.​local</filename></para></entry>
      </row>
      <row>
       <entry><para><literal>tcsh</literal></para></entry>
       <entry><para><literal>csh、tcsh</literal></para></entry>
       <entry align="center"><para><literal>autologout</literal></para></entry>
       <entry align="center"><para>分钟</para></entry>
       <entry><para><literal>set -r autologout=</literal></para></entry>
       <entry><para><filename>/etc/csh.​login.​local</filename></para></entry>
       <entry><para><filename>/etc/csh.​cshrc.​local</filename></para></entry>
      </row>
      <row>
       <entry><para><literal>zsh</literal></para></entry>
       <entry><para><literal>zsh</literal></para></entry>
       <entry align="center"><para><literal>TMOUT</literal></para></entry>
       <entry align="center"><para>秒</para></entry>
       <entry><para><literal>readonly TMOUT=</literal></para></entry>
       <entry><para><filename>/etc/profile.​local</filename>、​<filename>/etc/profile.​d/</filename></para></entry>
       <entry><para><filename>/etc/zsh.​zshrc.​local</filename></para></entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
   <para>
    每个列出的外壳支持使用一个内部超时外壳变量，可将该变量设置为某个特定时间值以触发无活动超时。如果您要防止用户覆盖超时设置，可以将相应的外壳超时变量标记为只读。上表中还提供了相应的变量声明语法。
   </para>

   <note>
    <para>
     此功能仅有助于避免因用户疏忽或遵循不安全做法而导致的风险。而无法防范恶意用户。超时只适用于外壳的交互式等待状态。恶意用户总是能找到绕过超时的方法，使得无论在任何情况下，都可以让其会话保持打开状态。
    </para>
   </note>

   <para>
    要配置无活动超时，您需要为每个外壳的启动脚本添加匹配的超时变量声明。可仅为登录外壳使用一种路径，或为所有外壳使用一种路径，如表中所列。以下示例使用适合 <command>bash</command> 和 <command>ksh</command> 的路径和设置，以设置无法被用户覆盖的只读登录外壳超时。使用以下内容创建文件 <filename>/etc/profile.d/timeout.sh</filename>：
   </para>
   <screen># /etc/profile.d/timeout.sh for SUSE Linux
#
# Timeout in seconds until the bash/ksh session is terminated
# in case of inactivity.
# 24h = 86400 sec
readonly TMOUT=86400</screen>

   <tip>
    <para>
     建议使用 <command>screen</command> 工具在注销前分离会话。<command>screen</command> 会话不会终止，一旦有需要便可重新挂接。可以在未注销的情况下锁定活动会话（有关细节，请阅读 <command>man screen</command> 中的 <keycombo action="seq">
     <keycombo action="press"><keycap function="control"/><keycap>a</keycap></keycombo>
     <keycap>x</keycap>
     </keycombo> / <command>lockscreen</command>）。
    </para>
   </tip>

  </sect1>
  <sect1 xml:id="sec-sec-prot-dos">
   <title>防止意外拒绝服务</title>

   <para>
    Linux 允许您对用户和组可以使用的系统资源量设置限制。如果因为程序中的 bug 导致用户和组使用太多资源（例如内存泄漏）、减慢计算机速度，甚至使系统无法使用，此项设置也非常有用。错误的设置可允许程序使用过多资源，导致服务器无法响应新连接，甚至无法响应本地登录（例如，如果某个程序用掉主机上的所有可用文件句柄）。如果允许某人用掉所有系统资源并因此导致拒绝服务攻击（无论是未计划还是更糟的计划攻击），这也会成为一个安全问题。设置用户和组的资源限制可能是一种有效的系统保护方法，具体视环境而定。
   </para>

   <sect2 xml:id="sec-sec-prot-dos-restrict-ressources">
    <title>限制系统资源示例</title>
    <para>
     以下示例演示了设置或限制 Oracle 用户帐户的系统资源使用的实际用法。有关系统资源设置列表，请参见 <filename>/etc/security/limits.conf</filename> 或 <command>man limits.conf</command>。
    </para>
    <para>
     Bash 等大多数外壳都提供有基于用户的各种资源控制（例如最大的可打开文件描述符数目或最大进程数）。要检查外壳中的所有当前限制，请执行：
    </para>
    <screen><prompt role="root">root # </prompt>ulimit -a</screen>
    <para>
     有关 Bash 外壳的 <command>ulimit</command> 的详细信息，请查看 Bash 手册页。
    </para>
    <important>
     <title>设置 SSH 会话的限制</title>
     <para>
      使用 SSH 会话时，设置“硬”和“软”限制可能无法如预期般起效。要查看有效行为，可能需要以 root 身份登录，然后再使用 su 命令转为具有限制的身份（例如，在这些示例中为 <literal>oracle</literal>）。假设在引导过程中已自动启动应用程序，资源限制也应正常起效。如果对资源限制的更改似乎未起效（通过 SSH），可能需要将 <filename>/etc/ssh/sshd_config</filename> 中的 <option>UsePrivilegeSeparation</option> 设置为“no”，并重启动 SSH 守护程序 (<command>systemctl restart sshd</command>)。但一般不建议您这样做，因为这会降低系统安全性。
     </para>
    </important>
    <tip>
     <title>禁用通过 <command>ssh</command> 进行的口令登录</title>
     <para>
      您可以通过禁用 SSH 的口令身份验证来为服务器增加一定程度的安全性。请记住，您需要配置 SSH 密钥，否则无法访问服务器。要禁用口令登录，请在 <filename>/etc/ssh/sshd_config</filename> 中添加下面几行：
     </para>
<screen>UseLogin no
UsePAM no
PasswordAuthentication no
PubkeyAuthentication yes</screen>
    </tip>
    <para>
     在此示例中，可通过以 <systemitem class="username">root</systemitem> 身份编辑 <filename>/etc/security/limits.conf</filename> 并进行以下更改，来更改用户 <literal>oracle</literal> 可使用的文件句柄数或打开的文件数：
    </para>
<screen>oracle           soft    nofile          4096
oracle           hard    nofile          63536</screen>
    <para>
     第一行中的软限制定义了登录后 <systemitem class="username">oracle</systemitem> 用户将拥有的文件句柄（打开的文件）数目限制。如果用户看到有关文件句柄用尽的错误消息，则可以执行以下命令，将此示例中所示的文件句柄数增加到硬限制（在此示例中为 63536）：
    </para>
    <screen><prompt role="root">root # </prompt>ulimit -n 63536</screen>
    <para>
     必要时，您可以设置更高的软限制和硬限制。
    </para>
    <note>
     <para>
      请务必合理利用 ulimit。允许某个用户的<quote>nofile</quote>的“硬”限制（相当于内核限制 (<filename>/proc/sys/fs/file-max</filename>)）会非常糟糕！如果用户用完所有可用的文件句柄，则系统将无法启动新登录，因为无法访问（打开）执行登录所需的 PAM 模块。
     </para>
    </note>
    <para>
     您还需要确保在 <filename>/etc/pam.d/common-auth</filename> 中全局配置 <literal>pam_limits</literal>，或者针对以下文件中的 SSH、su、login 和 telnet 等个别服务进行配置：
    </para>
    <simplelist>
     <member><filename>/etc/pam.d/sshd</filename>（用于 SSH）</member>
     <member><filename>/etc/pam.d/su</filename>（用于 su）</member>
     <member><filename>/etc/pam.d/login</filename>（本地登录和 telnet）</member>
    </simplelist>
    <para>
     如果您不想为所有登录启用该配置，会有一个特定 PAM 模块读取 <filename>/etc/security/limits.conf</filename> 文件。PAM 配置指令中的项如下所示：
    </para>
<screen>session     required      /lib/security/pam_limits.so
session     required      /lib/security/pam_unix.so</screen>
    <para>
     请务必注意，更改不会立即生效，需要新的登录会话：
    </para>
<screen><prompt role="root">root # </prompt>su – oracle
<prompt>tux &gt; </prompt>ulimit -n
4096</screen>
    <para>
     请注意，这些示例特定于 Bash 外壳 - 其他外壳的 <command>ulimit</command> 选项会有所不同。用户 <literal>oracle</literal> 的默认限制为 <literal>4096</literal>。要将用户 <literal>oracle</literal> 可使用的文件句柄数增加至 <literal>63536</literal>，请执行：
    </para>
<screen><prompt role="root">root # </prompt>su – oracle
<prompt>tux &gt; </prompt>ulimit -n
4096
<prompt>tux &gt; </prompt>ulimit -n 63536
<prompt>tux &gt; </prompt>ulimit -n
63536</screen>
    <para>
     要使此项成为永久设置，需要向用户配置文件（<filename>~/.bashrc</filename> 或 <filename>~/.profile</filename> 文件）添加设置 <literal>ulimit -n 63536</literal>（仍是适用于 Bash），该配置文件为 <phrase role="productname"><phrase os="sles">SUSE Linux Enterprise Server</phrase></phrase> 上的 Bash 外壳的用户启动文件（用于校验您的外壳运行：echo <envar>$SHELL</envar>）。要执行此操作，您只需针对用户 <literal>oracle</literal> 的 Bash 外壳键入（或复制/粘贴 - 如果您是在系统上读取）以下命令：
    </para>
<screen><prompt role="root">root # </prompt>su - oracle
<prompt>tux &gt; </prompt>cat &gt;&gt; ~oracle/.bash_profile &lt;&lt; EOF
ulimit -n 63536
EOF</screen>
   </sect2>
  </sect1>
  <sect1 xml:id="sec-sec-prot-banners">
   <title>显示登录标题</title>

   <para>
    出于法律/审计政策原因，或者为了向用户提供安全说明，通常有必要在所有服务器上的登录屏幕上设置一个标题。
   </para>

   <para>
    如果您想要在用户登录文本型终端（例如，使用 SSH 或在本地控制台上）<emphasis>后</emphasis>列显登录标题，可以使用文件 <filename>/etc/motd</filename>（motd = 当天的消息）。默认情况下，该文件存在于 <phrase role="productname"><phrase os="sles">SUSE Linux Enterprise Server</phrase></phrase> 上，但是空文件。只需向适用的/组织所需的文件中添加内容。
   </para>

   <note>
    <title>标题长度</title>
    <para>
     请尽量将登录标题内容放在一个终端页面（或更少）中，如果一页容纳不下而需要滚动屏幕，会使阅读变得更加困难。
    </para>
   </note>

   <para>
    您也可以在用户登录文本型终端<emphasis>前</emphasis>列显登录标题。如果是本地控制台登录，您可以编辑 <filename>/etc/issue</filename> 文件，这会导致在出现登录提示前显示标题。如果是通过 SSH 进行登录，您可以编辑 <filename>/etc/ssh/sshd_config</filename> 文件中的<quote>标题</quote>参数，这会在出现 SSH 登录提示前相应地显示标题文本。
   </para>

   <para>
    如果是通过 GDM 进行的图形登录，您可以遵循 <link xlink:href="https://help.gnome.org/admin/system-admin-guide/stable/login-banner.html.en">GNOME 管理员指南</link>设置登录标题。此外，您可以进行以下更改，要求用户通过选择<guimenu>是</guimenu>或<guimenu>否</guimenu>来确认法律标题。编辑 <filename>/etc/gdm/Xsession</filename> 文件，并在脚本<emphasis>开头</emphasis>添加下面几行：
   </para>

<screen>if ! /usr/bin/gdialog --yesno '\n<replaceable>This system is classified...</replaceable>\n' 10 10; then
    /usr/bin/gdialog --infobox 'Aborting login'
    exit 1;
fi</screen>

   <para>
    需要将文本 <replaceable>This system is classified...</replaceable> 替换为所需的标题文本。请务必注意，此对话框不会阻止登录进行。有关 GDM 脚本的详细信息，请参见 <link xlink:href="https://help.gnome.org/admin/gdm/stable/configuration.html.en#scripting">GDM 管理员手册</link>。
   </para>

  </sect1>
  <sect1 xml:id="sec-sec-prot-misc">
   <title>杂项</title>

   <para/>

   <sect2 xml:id="sec-sec-prot-misc-aide">
    <title>基于主机的 Linux 监视和入侵检测</title>
    <para>
     将主机置于生产环境甚至是网络之前，请考虑使用 <command>seccheck</command>（已在<xref linkend="sec-sec-prot-general-seccheck"/>中讨论）等系统完整性检查器，以便在发生未授权更改时发出通知。此外，还请考虑使用 AIDE（高级入侵检测环境）等入侵检测环境。
    </para>
    <para>
     AIDE 是一种 GPL 许可的开源入侵检测系统。可视为一种系统指纹机制。AIDE 的工作方式是创建一个包含您系统上文件的相关信息的数据库。该数据库遵循配置文件 aide.conf 中规定的规则进行创建。AIDE 运行时，将参考此数据库来检查是否有更改（或首次创建）。假设运行的是比较检查，将会报告配置文件不允许的任何更改。
    </para>
    <para>
     通过利用 AIDE（在一个安全的位置储存主机数据库的副本）并进行比较（定期或作为取证工作的一部分），系统完整性/保证就是一个直观且程序化的事项。如果入侵者入侵您的系统，比较工作可让管理员或安全专员了解主机上发生的更改。将系统部署到生产环境<emphasis>前</emphasis>，最后一步应是创建初始数据库。
    </para>
    <para>
     Linux 监视和详细的入侵检测系统 (IDS) 或解决方案不在本文的讨论范围内，不过，您可在 Web 上找到大量有关配置 AIDE 或其他解决方案的信息以及众多内容丰富的文章。
    </para>
   </sect2>

   <sect2 xml:id="sec-sec-prot-misc-account-utils">
    <title>连接统计实用程序</title>
    <para>
     下面是您可以用于获取有关用户登录的数据的命令列表：
    </para>
    <formalpara>
     <title><command>who</command></title>
     <para>
      列出当前登录的用户。
     </para>
    </formalpara>
    <formalpara>
     <title><command>w</command></title>
     <para>
      显示登录者及其执行的操作。
     </para>
    </formalpara>
    <formalpara>
     <title><command>last</command></title>
     <para>
      显示上次登录的用户列表，包括登录时间、注销时间、登录 IP 地址等。
     </para>
    </formalpara>
    <formalpara>
     <title><command>lastb</command></title>
     <para>
      与 <command>last</command> 相同（除了默认显示 <filename>/var/log/btmp</filename>），包含所有无效登录尝试。
     </para>
    </formalpara>
    <formalpara>
     <title><command>lastlog</command></title>
     <para>
      此命令报告 <filename>/var/log/lastlog</filename> 中维护的数据，该文件是用户上次登录的记录。
     </para>
    </formalpara>
    <formalpara>
     <title><command>ac</command></title>
     <para>
      安装 <systemitem>acct</systemitem> 软件包之后提供。按每个用户或每天等条件列显连接时间（以小时为单位）。此命令读取 <filename>/var/log/wtmp</filename>。
     </para>
    </formalpara>
    <formalpara>
     <title><command>dump-utmp</command></title>
     <para>
      将原始数据从 /var/run/utmp 或 <filename>/var/log/wtmp</filename> 转换为 ASCII 可分析格式。
     </para>
    </formalpara>
    <para>
     此外，如果未运行任何日志记录工具，请检查 <filename>/var/log/messages</filename> 文件或 <command>journalctl</command> 的输出。有关 <systemitem class="daemon">systemd</systemitem> 日记的详细信息，请参见<xref linkend="cha-journalctl"/>。
    </para>
   </sect2>

   <sect2 xml:id="sec-sec-prot-misc-other">
    <title>其他</title>
    <para>
     最后，以下各项也与系统安全性相关，如果配置错误可能会导致许多问题，因此也应进行审阅：
    </para>
    <itemizedlist>
     <listitem>
      <para>
       解析程序（<filename>/etc/hosts</filename>、<filename>/var/run/netconfig/resolv.conf</filename>、<filename>/etc/nsswitch.conf</filename>）。
      </para>
      <para>
       <filename>/etc/resolv.conf</filename> 是指向 <filename>/run/netconfig/resolv.conf</filename> 的符号链接。
      </para>
     </listitem>
     <listitem>
      <para>
       NTP 配置 (<filename>/etc/chrony.conf</filename>)。
      </para>
     </listitem>
    </itemizedlist>
   </sect2>
  </sect1>
 </chapter>
 
</book>
