<?xml version="1.0" encoding="UTF-8"?>
<chapter xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xlink="http://www.w3.org/1999/xlink" xml:base="lxc.xml" version="5.0" xml:id="cha-lxc">



 <title>Linux 容器</title>
 <info>
      <dm:docmanager xmlns:dm="urn:x-suse:ns:docmanager">
        <dm:bugtracker>
   </dm:bugtracker>
        <dm:translation>是</dm:translation>
      </dm:docmanager>
    </info>
    <para/>


 <sect1 xml:id="sec-lxc-setup-container">
  <title>设置 LXC 发行套件容器</title>

  <para>
   容器是包含应用程序的代码及其所有依赖项的自包含软件。容器化应用程序可以快速完成部署，并可在计算环境中可靠运行。
  </para>
   
  <para>
   要设置 LXC 容器，需要创建一个包含 Guest 发行套件的根文件系统。
  </para>

  <procedure xml:id="pro-lxc-create-rootfs" os="sles;sled">
   <title>创建根文件系统</title>
   <para>
    目前没有任何 GUI 可用于创建根文件系统。请以 root 身份运行 <command>virt-create-rootfs</command> 命令，以设置新的根文件系统。执行以下步骤在 <replaceable>/path/to/rootfs</replaceable> 中创建新的<systemitem class="username">根</systemitem>文件系统。
   </para>
   <important>
    <title>需要注册代码</title>
    <para>
    <command>virt-create-rootfs</command> 需要使用注册代码来设置 <phrase role="productname"><phrase os="sles">SUSE Linux Enterprise Server</phrase></phrase> 根文件系统。
    </para>
   </important>
   <step>
    <para>
     运行 <command>virt-create-rootfs</command> 命令：
    </para>
<screen><prompt>tux &gt; </prompt>virt-create-rootfs --root <replaceable>/PATH/TO/ROOTFS</replaceable> --distro SLES-12.0 -c <replaceable>REGISTRATION_CODE</replaceable></screen>
   </step>
   <step>
    <para>
     使用 <command>chroot</command> 命令更改根文件系统的根路径：
    </para>
<screen><prompt>tux &gt; </prompt>chroot <replaceable>/path/to/rootfs</replaceable></screen>
   </step>
   <step>
    <para>
     使用 <command>passwd</command> 更改 <systemitem class="username">root</systemitem> 用户的口令。
    </para>
   </step>
   <step>
    <para>
     创建一个不具有 <systemitem class="username">root</systemitem> 特权的<systemitem class="username">操作员</systemitem>用户：
    </para>
<screen>useradd -m operator</screen>
   </step>
   <step>
    <para>
     更改操作员的口令：
    </para>
<screen>passwd operator</screen>
   </step>
   <step>
    <para>
     使用 <command>exit</command> 退出 chroot 环境。
    </para>
   </step>
  </procedure>

  

  <procedure xml:id="pro-lxc-define-gui">
   <title>定义容器</title>
   <step>
    <para>
     启动虚拟机管理器。
    </para>
   </step>
   <step performance="optional">
    <para>
     单击<menuchoice><guimenu>文件</guimenu>
     <guimenu>添加连接</guimenu></menuchoice>以添加一个本地 LXC 连接（如果尚不存在）。
    </para>
    <para>
     选择 <guimenu>LXC（Linux 容器）</guimenu>作为超级管理程序，然后单击<guimenu>连接</guimenu>。
    </para>
   </step>
   <step>
    <para>
     选择 <guimenu>localhost (LXC)</guimenu> 连接并单击<guimenu>文件</guimenu> <guimenu>新建虚拟机</guimenu>菜单。
    </para>
   </step>
   <step>
    <para>
     激活<guimenu>操作系统容器</guimenu>并单击<guimenu>前进</guimenu>。
    </para>
   </step>
   <step>
    <para>
     键入<xref os="sles;sled" linkend="pro-lxc-create-rootfs"/>中所述的根文件系统路径，然后单击<guimenu>前进</guimenu>按钮。
    </para>
   </step>
   <step>
    <para>
     选择要分配给该容器的最大内存量和最大 CPU 数量。然后单击<guimenu>前进</guimenu>按钮。
    </para>
   </step>
   <step>
    <para>
     键入容器的名称。对容器运行的所有 <command>virsh</command> 命令都将使用此名称。
    </para>
    <para>
     单击<guimenu>高级选项</guimenu>。选择要将容器连接到的网络，然后单击<guimenu>完成</guimenu>按钮：系统随即会创建并启动该容器。此外一个控制台会自动打开。
    </para>
   </step>
  </procedure>

  <procedure xml:id="pro-lxc-ip-network">
 <title>配置网络接口的 IP 地址</title>
   <para>
    对于网络设备以及具有网络功能的 hostdev 设备，系统可能会为其提供要在 Guest 中的网络设备上设置的一个或多个 IP 地址。但某些超级管理程序或网络设备会直接忽略这些 IP 地址，或者只使用第一个 IP 地址。
   </para>
 <step>
  <para>
   使用 virsh 编辑容器 XML 配置：
  </para>
  <screen><prompt>tux &gt; </prompt>virsh -c lxc:/// edit <replaceable>MYCONTAINER</replaceable></screen>
 </step>
 <step>
  <para>
   下面的示例说明如何设置一个或多个 IP 地址：
  </para>
  <screen>[...]
&lt;devices&gt;
 &lt;interface type='network'&gt;
  &lt;source network='default'/&gt;
  &lt;target dev='vnet0'/&gt;
  &lt;ip address='192.168.122.5' prefix='24'/&gt;
  &lt;ip address='192.168.122.5' prefix='24' peer<co xml:id="co-lxc-netw-peer"/>='10.0.0.10'/&gt;
   &lt;route family<co xml:id="co-lxc-netw-family"/>='ipv4' address<co xml:id="co-lxc-netw-addr"/>='192.168.122.0' prefix<co xml:id="co-lxc-netw-prefix"/>='24'
          gateway<co xml:id="co-lxc-netw-gateway"/>='192.168.122.1'/&gt;
   &lt;route family<xref linkend="co-lxc-netw-family" xrefstyle="select:label"/>='ipv4' address<xref linkend="co-lxc-netw-addr" xrefstyle="select:label"/>='192.168.122.8' gateway<xref linkend="co-lxc-netw-gateway" xrefstyle="select:label"/>='192.168.122.1'/&gt;
 &lt;/interface&gt;
 [...]
 &lt;hostdev mode='capabilities' type='net'&gt;
  &lt;source&gt;
   &lt;interface&gt;eth0&lt;/interface&gt;
  &lt;/source&gt;
  &lt;ip address='192.168.122.6' prefix='24'/&gt;
  &lt;route family='ipv4' address='192.168.122.0' prefix='24' gateway='192.168.122.1'/&gt;
  &lt;route family='ipv4' address='192.168.122.8' gateway='192.168.122.1'/&gt;
 &lt;/hostdev&gt;
&lt;/devices&gt;
[...]</screen>
  <calloutlist>
   <callout arearefs="co-lxc-netw-peer">
    <para>
     可选属性。包含点对点网络设备另一端的 IP 地址。
    </para>
   </callout>
   <callout arearefs="co-lxc-netw-family">
    <para>
     可设置为 <literal>ipv4</literal> 或 <literal>ipv6</literal>。
    </para>
   </callout>
   <callout arearefs="co-lxc-netw-addr">
    <para>
     包含 IP 地址。
    </para>
   </callout>
   <callout arearefs="co-lxc-netw-prefix">
    <para>
     可选参数（如果不指定，则会自动设置）。定义网络掩码中的 1 位的数量。对于 IPv4，将根据网络<quote>类别</quote>（<literal>A</literal>、<literal>B</literal> 或 <literal>C</literal>）确定默认前缀。对于 IPv6，默认前缀为 <literal>64</literal>。
    </para>
   </callout>
   <callout arearefs="co-lxc-netw-gateway">
    <para>
     如果您未在 XML 文件中指定默认网关，将不会设置网关。
    </para>
   </callout>
  </calloutlist>
 </step>
 <step>
    <para>
     您还可以添加 route 元素来定义要在 Guest 中添加的 IP 路由。这些路由将由 LXC 驱动程序使用。
    </para>
  <screen>[...]
&lt;devices&gt;
 &lt;interface type<co xml:id="co-lxc-netw-ethernet"/>='ethernet'&gt;
  &lt;source&gt;<co xml:id="co-lxc-netw-source"/>
   &lt;ip address<co xml:id="co-lxc-netw-ip1"/>='192.168.123.1' prefix='24'/&gt;
   &lt;ip address<co xml:id="co-lxc-netw-ip2"/>='10.0.0.10' prefix='24' peer='192.168.122.5'/&gt;
   &lt;route<co xml:id="co-lxc-netw-route"/> family='ipv4' address='192.168.42.0' prefix='24'
            gateway='192.168.123.4'/&gt;
  &lt;/source&gt;
  [...]
 &lt;/interface&gt;
 [...]
&lt;/devices&gt;
[...]</screen>
  <calloutlist>
   <callout arearefs="co-lxc-netw-ethernet">
      <para>
       对于<literal>以太网</literal>类型的网络设备，可以选择性地为其提供要在网络设备主机端设置的一个或多个 IP 地址（<xref linkend="co-lxc-netw-ip1" xrefstyle="select:label"/>、<xref linkend="co-lxc-netw-ip2" xrefstyle="select:label"/>），以及一个或多个路由 (<xref linkend="co-lxc-netw-route" xrefstyle="select:label"/>)。
      </para>
    <para>
     这些 IP 地址和路由将配置为接口的 <literal>source</literal> 元素 (<xref linkend="co-lxc-netw-source"/>) 的子元素。它们的属性与用于配置接口 Guest 端的名称类似的元素的属性相同（请参见上一步）。
    </para>
   </callout>
   <callout arearefs="co-lxc-netw-ip1">
    <para>
     <literal>以太网</literal>类型的网络设备的第一个 IP 地址。
    </para>
   </callout>
   <callout arearefs="co-lxc-netw-ip2">
    <para>
     <literal>以太网</literal>类型的网络设备的第二个 IP 地址。
    </para>
   </callout>
   <callout arearefs="co-lxc-netw-route">
    <para>
     要在网络设备主机端设置的路由。
    </para>
   </callout>
  </calloutlist>
  <para>
   <link xlink:href="http://libvirt.org/formatnetwork.html#elementsStaticroute"/> 上提供了有关此元素的属性的更多细节。
  </para>
 </step>
 <step>
  <para>
   保存更改并退出编辑器。
  </para>
 </step>
</procedure>
  <note>
   <title>容器网络</title>
   <para>
    要配置容器网络，请编辑 <filename>/etc/sysconfig/network/ifcfg-*</filename> 文件。
   </para>
  </note>
 </sect1>
 <sect1 xml:id="sec-lxc-setup-container-app">
  <title>设置 LXC 应用程序容器</title>

  <para>
   Libvirt 还允许在容器中仅运行应用程序，而无需运行庞大的 Linux 发行套件。在此示例中，<command>bash</command> 将在自己的容器中启动。
  </para>

  <procedure xml:id="pro-lxc-define-app-gui">
   <title>使用 YaST 定义应用程序容器</title>
   <step>
    <para>
     启动虚拟机管理器。
    </para>
   </step>
   <step performance="optional">
    <para>
     单击<menuchoice><guimenu>文件</guimenu>
     <guimenu>添加连接</guimenu></menuchoice>以添加一个本地 LXC 连接（如果尚不存在）。
    </para>
    <para>
     选择 <guimenu>LXC（Linux 容器）</guimenu>作为超级管理程序，然后单击<guimenu>连接</guimenu>。
    </para>
   </step>
   <step>
    <para>
     选择 <guimenu>localhost (LXC)</guimenu> 连接并单击<guimenu>文件</guimenu> <guimenu>新建虚拟机</guimenu>菜单。
    </para>
   </step>
   <step>
    <para>
     激活<guimenu>应用程序容器</guimenu>并单击<guimenu>前进</guimenu>。
    </para>
    <para>
     设置要启动的应用程序的路径。例如，在字段中填充 <command>/bin/sh</command>，这样就可以创建第一个容器。单击<guimenu>前进</guimenu>。
    </para>
   </step>
   <step>
    <para>
     选择要分配给该容器的最大内存量和最大 CPU 数量。单击<guimenu>前进</guimenu>。
    </para>
   </step>
   <step>
    <para>
     键入容器的名称。对容器运行的所有 <command>virsh</command> 命令都将使用此名称。
    </para>
    <para>
     单击<guimenu>高级选项</guimenu>。选择要将容器连接到的网络，然后单击<guimenu>完成</guimenu>。系统即会创建并启动该容器。一个控制台将会自动打开。
    </para>
    <para>
     请注意，当应用程序运行完后，系统会销毁该容器。
    </para>
   </step>
  </procedure>
 </sect1>
 <sect1 xml:id="sec-lxc-config-apparmor">
  <title>使用 <phrase>AppArmor</phrase> 保护容器</title>

  <para>
   默认未使用 <phrase>AppArmor</phrase> 或 SELinux 来保护容器。没有任何图形用户界面可用来更改 libvirt 域的安全模型，但 <command>virsh</command> 可提供帮助。
  </para>

  <procedure xml:id="pro-lxc-setup-apparmor">
   <step>
    <para>
     使用 virsh 编辑容器 XML 配置：
    </para>
<screen><prompt>tux &gt; </prompt>virsh -c lxc:/// edit <replaceable>MYCONTAINER</replaceable></screen>
   </step>
   <step>
    <para>
     将以下内容添加到 XML 配置中，然后保存配置并退出编辑器。
    </para>
<screen>&lt;domain&gt;
    ...
    &lt;seclabel type="dynamic" model="apparmor"/&gt;
    ...
&lt;/domain&gt;</screen>
   </step>
   <step>
    <para>
     设置此配置，系统将会在 <filename>/etc/apparmor.d/libvirt</filename> 目录中为容器创建 <phrase>AppArmor</phrase> 配置文件。默认配置文件仅允许最少量的应用程序在容器中运行。可以通过修改 <filename>libvirt-<replaceable>CONTAINER-uuid</replaceable></filename> 文件来更改此设置：libvirt 不会重写此文件。
    </para>
   </step>
  </procedure>
 </sect1>
 <sect1 xml:id="lxc-diff">
  <title>libvirt LXC 驱动程序与 LXC 之间的差异</title>

  <para>
   <phrase os="sles;sled">SUSE Linux Enterprise Server 11 SP3</phrase> 随附的是 LXC，而 <phrase os="sles;sled">SUSE Linux Enterprise Server 12</phrase> 随附的是 libvirt LXC 驱动程序（为避免混淆，有时称为 libvirt-lxc）。容器在这些工具中的管理或配置方式是不同的。下面列出了部分差异。
  </para>

  <para>
   主要差异在于，libvirt 中的域配置是一个 XML 文件，而 LXC 配置是一个属性文件。大多数 LXC 属性都可映射到域 XML。无法迁移的属性如下：
  </para>

  <itemizedlist mark="bullet" spacing="normal">
   <listitem>
    <para>
     <emphasis>lxc.network.script.up</emphasis>：可以使用 <filename>/etc/libvirt/hooks/network</filename> libvirt 钩子实现此脚本，不过需要调整该脚本。
    </para>
   </listitem>
   <listitem>
    <para>
     <emphasis>lxc.network.ipv*</emphasis>：libvirt 无法基于域配置设置容器网络配置。
    </para>
   </listitem>
   <listitem>
    <para>
     <emphasis>lxc.network.name</emphasis>：libvirt 无法设置容器网卡名称。
    </para>
   </listitem>
   <listitem>
    <para>
     <emphasis>lxc.devttydir</emphasis>：libvirt 不允许更改控制台设备的位置。
    </para>
   </listitem>
   <listitem>
    <para>
     <emphasis>lxc.console</emphasis>：目前无法将控制台输出记录到 libvirt LXC 容器主机上的文件中。
    </para>
   </listitem>
   <listitem>
    <para>
     <emphasis>lxc.pivotdir</emphasis>：libvirt 不允许微调用于 <command>pivot_root</command> 的目录。将使用 <filename>/.olroot</filename>。
    </para>
   </listitem>
   <listitem>
    <para>
     <emphasis>lxc.rootfs.mount</emphasis>：libvirt 不允许微调此项。
    </para>
   </listitem>
  </itemizedlist>

  <para>
   LXC VLAN 网络会自动在主机上创建 VLAN 接口，然后将其移入 Guest 名称空间。libvirt-lxc 配置只能为 <phrase role="productname">Open vSwitch</phrase> tap 设备或 SR-IOV VF 的 PCI 直通指出 VLAN 标记 ID。转换工具实际上需要用户手动在主机端创建 VLAN 接口。
  </para>

  <para>
   LXC rootfs 也可以是映像文件，但 LXC 会强行突破装入点，以尝试检测适当的文件系统格式。libvirt-lxc 可以装入多种格式的映像文件，但不显式支持格式参数的“auto”值。这意味着，在此情况下，用户需要优化生成的配置才能获得适当的匹配项。
  </para>

  <para>
   LXC 支持任何 cgroup 配置（即使是将来的配置），而 libvirt 域配置需要映射每个 cgroup 配置。
  </para>

  <para>
   LXC 可以在 rootfs 中装入块设备，但无法装入原始分区文件：需要手动将文件挂接到循环设备。相比之下，libvirt-lxc 既可以装入块设备，也可以装入任何格式的分区文件。
  </para>
 </sect1>
 <sect1 xml:id="sec-lxc-namespaces">
  <title>跨容器共享名称空间</title>
  <para>
   与 Docker 开源引擎一样，libvirt 可让您从容器或进程继承名称空间，以共享网络名称空间。下面的示例说明如何共享所需的名称空间。
   </para>
 <screen>&lt;domain type='lxc' xmlns:lxc='http://libvirt.org/schemas/domain/lxc/1.0'&gt;
 [...]
 &lt;lxc:namespace&gt;
  &lt;lxc:sharenet type='netns' value='red'/&gt;
  &lt;lxc:shareuts type='name' value='<replaceable>CONTAINER_1</replaceable>'/&gt;
  &lt;lxc:shareipc type='pid' value='<replaceable>12345</replaceable>'/&gt;
 &lt;/lxc:namespace&gt;
 &lt;/domain&gt;
</screen>
    <para>
     <option>netns</option> 选项特定于 <literal>sharenet</literal>。可通过此选项使用现有的网络名称空间（无需为容器创建新的网络名称空间）。在这种情况下，将忽略 <option>privnet</option> 选项。
    </para>
 </sect1>

 <sect1 xml:id="sec-lxc-moreinfo">
  <title>更多信息</title>

  <variablelist>
   <varlistentry>
    <term>LXC 容器驱动程序</term>
    <listitem>
     <para>
      <link xlink:href="http://libvirt.org/drvlxc.html"/>
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </sect1>
</chapter>
