<?xml version="1.0" encoding="UTF-8"?>
<chapter xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xlink="http://www.w3.org/1999/xlink" xml:base="sle_update_upgrading.xml" version="5.0" xml:id="cha-update-sle">
 <title>SUSE Linux Enterprise 업그레이드</title>
 <info>
  <abstract>
   <para>
    SLE(SUSE® Linux Enterprise)를 사용하여 기존 시스템을 새 버전으로 업데이트할 수 있습니다. 예를 들어 SLE 11 SP4를 SLE 12로 전환합니다. 새로 설치할 필요가 없습니다. 홈 디렉토리, 데이터 디렉토리 및 시스템 구성과 같은 기존 데이터가 원래 상태로 보존됩니다. 로컬 CD나 DVD 드라이브 또는 중앙 네트워크 설치 원본에서 업데이트할 수 있습니다.
   </para>

   <para>
    이 장에서는 DVD, 네트워크, 자동 프로세스 또는 SUSE Manager를 통해 SUSE Linux Enterprise 시스템을 수동으로 업그레이드하는 방법을 설명합니다.
   </para>
  </abstract>
  <dm:docmanager xmlns:dm="urn:x-suse:ns:docmanager">
   <dm:translation>예</dm:translation>
  </dm:docmanager>
 </info>
 <sect1 xml:id="sec-update-sle-paths">
  <title>SLE 12 SP3에 대해 지원되는 업그레이드 경로</title>

  <important>
   <title>아키텍처 간 업그레이드 지원 안 함</title>
   <para>
    아키텍처 간 업그레이드(예: 32비트 버전의 <phrase role="productname"><phrase os="sles">SUSE Linux Enterprise Server</phrase></phrase>에서 64비트 버전으로 또는 big endian에서 little endian으로 업그레이드)는 지원되지 <emphasis>않습니다</emphasis>.
   </para>
   <para>
    특히, SLE 11 on POWER(big endian)에서 SLE 12 SP2 on POWER(최신: little endian)로의 업그레이드는 지원되지 <emphasis>않습니다</emphasis>.
   </para>
   <para>
    또한 SUSE Linux Enterprise 12는 64비트 전용이므로 32비트 SUSE Linux Enterprise 11 시스템에서 SUSE Linux Enterprise 12 이상 버전으로의 업그레이드는 지원되지 <emphasis>않습니다</emphasis>.
   </para>
   <para>
    아키텍처 간 업그레이드가 필요한 경우 새로 설치해야 합니다.
   </para>
  </important>

  <para>
   마이그레이션을 수행하기 전에 <xref linkend="sec-update-prep"/>을(를) 읽어 보십시오.
  </para>

  <note>
   <title>서비스 팩 건너뛰기</title>
   <para>
    모든 서비스 팩을 연속해서 설치하는 것이 가장 안전한 업그레이드 경로입니다. 경우에 따라 업그레이드할 때 1~2개의 서비스 팩을 건너뛸 수 있습니다. 그러나 서비스 팩을 건너뛰지 <emphasis>않는</emphasis> 것이 좋습니다. 
   </para>
  </note>

  <note>
   <title>주 릴리스 업그레이드</title>
   <para>
    SUSE Linux Enterprise 11에서 SUSE Linux Enterprise 12로 업그레이드하는 경우와 같이 새 주 릴리스로 업그레이드할 때는 새로 설치하는 것이 좋습니다.
   </para>
  </note>

  <variablelist>
   <varlistentry>
    <term>SUSE Linux Enterprise 10(서비스 팩)에서 업그레이드</term>
    <listitem>
     <para>
      SUSE Linux Enterprise 12에 대해 지원되는 직접 마이그레이션 경로는 없습니다. 이 경우 새로 설치하는 것이 좋습니다.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>SUSE Linux Enterprise 11 GA, SP1 또는 SP2에서 업그레이드</term>
    <listitem>
     <para>
      SUSE Linux Enterprise 12에 대해 지원되는 직접 마이그레이션 경로는 없습니다. SLE 11 SP4 이상이 있어야만 SLE 12 SP3로 넘어갈 수 있습니다.
     </para>
     <para>
      새로 설치할 수 없는 경우 먼저 설치된 SLE 11 서비스 팩을 SLE 11 SP4로 업그레이드하십시오. 이러한 단계에 대한 자세한 내용은 <link xlink:href="https://www.suse.com/documentation/sles11/">SUSE Linux Enterprise 11 배포 설명서</link>를 참조하십시오.
     </para>
     <para>
      그런 다음 <xref linkend="sec-update-sle-methods"/>을(를) 계속합니다.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>SUSE Linux Enterprise 11 SP4에서 업그레이드</term>
    <listitem>
     <para>
      SLE 11에서 SLE 12 SP3로 업그레이드하려면 오프라인 업그레이드를 사용해야 합니다. 자세한 내용은 <xref linkend="sec-update-sle-methods"/>을(를) 참조하십시오.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>SUSE Linux Enterprise 12 GA에서 SP3로 업그레이드</term>
    <listitem>
     <para>
      SLE 12 GA에서 SP3로 직접 업그레이드할 수 없습니다. 먼저 SLE 12 SP2로 업그레이드하십시오.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>SUSE Linux Enterprise 12 SP1 또는 SP2에서 SP3로 업그레이드</term>
    <listitem>
     <para>
      SUSE Linux Enterprise 12 SP1 또는 SP2에서 SP3로 업그레이드할 수 있습니다.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>SUSE Linux Enterprise 12 LTSS GA, SP1 또는 SP2에서 SP3로 업그레이드</term>
    <listitem>
     <para>
      이전 SLE 12 LTSS 버전에서 SP3로 업데이트할 수 있습니다.
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
  <figure xml:id="fig-update-sle-paths-overview">
   <title>최단 업그레이드 경로 개요</title>
   <mediaobject>
    <imageobject role="fo">
     <imagedata fileref="upgrade-paths.svg" width="100%" format="SVG"/>
    </imageobject>
    <imageobject role="html">
     <imagedata fileref="upgrade-paths.png" width="80%" format="PNG"/>
    </imageobject>
   </mediaobject>
  </figure>
 </sect1>
 <sect1 xml:id="sec-update-sle-methods">
  <title>온라인 및 오프라인 업그레이드</title>
  <para>
   SUSE에서 두 가지 업그레이드 및 마이그레이션 방법을 지원합니다. 용어에 대한 자세한 내용은 <xref linkend="sec-update-sle-terminology"/>를 참조하십시오. 방법은 다음과 같습니다.
  </para>

  <variablelist>
   <varlistentry>
    <term>온라인</term>
    <listitem>
     <para>
      실행 중인 시스템에서 실행되는 모든 업그레이드는 온라인으로 간주됩니다. 예: zypper 또는 YaST를 사용하여 SUSE Customer Center, SMT(Subscription Management Tool), SUSE Manager를 통한 연결.
     </para>
     <para>
      동일한 주 릴리스의 서비스 팩 간에 마이그레이션하는 경우 <xref linkend="sec-update-migr-yast-onlinemigr"/> 또는 <xref linkend="sec-update-migr-zypper-onlinemigr"/>을 따르는 것이 좋습니다.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>오프라인</term>
    <listitem>
     <para>
      오프라인 방법에서는 일반적으로 설치된 SLE 버전이 업그레이드되는 다른 운영 체제를 부팅합니다. 예: DVD, 플래시 디스크, ISO 이미지, AutoYaST, <quote>일반 RPM</quote> 또는 PXE 부팅
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
  <para>
   SUSE Linux Enterprise 11 SP4에서 SUSE Linux Enterprise 12 SP3로의 업그레이드는 오프라인 업그레이드를 통해서만 지원됩니다. <xref linkend="cha-update-offline"/>를 참조하십시오.
  </para>

  <para>
   모든 SUSE Linux Enterprise 12 LTSS 버전 또는 SUSE Linux Enterprise 12 SP1/SP2에서 SP3로의 업그레이드는 오프라인과 온라인 방법 모두로 지원됩니다. <xref linkend="cha-update-offline"/> 및 <xref linkend="cha-update-online"/> 단원을 참조하십시오.
  </para>
 </sect1>
 <sect1 xml:id="sec-update-prep">
  <title>시스템 준비</title>
  <para>
   업그레이드 절차를 시작하기 전에 시스템을 올바르게 준비해야 합니다. 무엇보다도 데이터를 백업하고 릴리스 정보를 확인하는 것이 중요합니다.
  </para>

  <sect2 xml:id="sec-update-prep-relnotes">
   <title>릴리스 정보 읽기</title>
   <para>
    릴리스 정보에서 이전 릴리스의 <phrase role="productname"><phrase os="sles">SUSE Linux Enterprise Server</phrase></phrase> 이후에 변경된 내용에 대한 추가 정보를 확인할 수 있습니다. 릴리스 정보에서 다음을 확인하십시오.
   </para>
   <itemizedlist>
    <listitem>
     <para>
      하드웨어에 대해 특별히 고려할 사항이 있는지 여부
     </para>
    </listitem>
    <listitem>
     <para>
      사용된 소프트웨어 패키지가 크게 변경되었는지 여부
     </para>
    </listitem>
    <listitem>
     <para>
      설치할 때 특별히 주의해야 할 사항
     </para>
    </listitem>
   </itemizedlist>
   <para>
    또한 릴리스 정보에서는 설명서에 즉시 제공할 수 없는 정보도 제공하며, 알려진 문제점에 대한 정보도 포함합니다.
   </para>
   <para>
    하나 이상의 서비스 팩을 건너뛰는 경우 건너뛴 서비스 팩의 릴리스 정보도 확인하십시오. 일반적으로 릴리스 정보에는 연속되는 두 릴리스 간의 변경 사항만 포함됩니다. 현재 릴리스 정보만 확인하는 경우 중요한 변경 사항을 놓칠 수 있습니다.
   </para>
   <para>
    릴리스 정보는 <filename>/usr/share/doc/release-notes</filename> 디렉토리에서 로컬로 확인하거나 <link xlink:href="https://www.suse.com/releasenotes/"/>에서 온라인으로 확인할 수 있습니다.
   </para>
  </sect2>
  <sect2 xml:id="sec-update-prep-backup">
   <title>백업</title>
   <para>
    업데이트하기 전에 기존 구성 파일을 테이프 장치, 이동식 하드 디스크 등과 같은 별도의 매체에 복사하여 데이터를 백업합니다. 이 사항은 주로 <filename>/var</filename> 및 <filename>/opt</filename>의 일부 디렉토리 및 파일과 <filename>/etc</filename>에 저장된 파일에 적용됩니다. 또한 <filename>/home</filename>(<envar>HOME</envar> 디렉토리)의 사용자 데이터를 백업 매체에 기록해야 할 수도 있습니다. 이 데이터를 <systemitem class="username">root</systemitem>로 백업하십시오. <systemitem class="username">root</systemitem>에만 모든 로컬 파일에 대한 읽기 권한이 있습니다.
   </para>
   <para>
    YaST에서 설치 모드로 <guimenu>기존 시스템 업데이트</guimenu>를 선택한 경우 나중에 (시스템) 백업을 수행하도록 선택할 수 있습니다. 수정된 모든 파일과 <filename>/etc/sysconfig</filename> 디렉토리의 파일을 포함하도록 선택할 수 있습니다. 그러나 이는 위에서 언급한 다른 모든 중요한 디렉토리가 없기 때문에 전체 백업은 아닙니다. <filename>/var/adm/backup</filename> 디렉토리에서 백업을 확인하십시오.
   </para>
   <sect3 xml:id="sec-update-prep-backup-packagelist">
    <title>설치된 패키지 및 리포지토리 나열</title>
    <para>
     새 주 SLE 릴리스를 새로 설치하거나 이전 버전으로 되돌릴 경우와 같이 설치된 패키지 목록이 있으면 유용한 경우가 많습니다.
    </para>
    <para>
     설치된 패키지나 사용된 리포지토리 중 일부는 SUSE Linux Enterprise의 최신 릴리스에서 제공되지 않을 수 있습니다. 이름이 바뀌거나 대체된 경우도 있습니다. 또한 레거시 용도로 계속 제공되는 패키지가 있는 반면 기본적으로 사용되는 패키지도 있을 수 있습니다. 따라서 파일을 수동으로 편집해야 하는 경우가 있습니다. 그럴 경우 텍스트 편집기를 사용하면 됩니다.
    </para>
    <para>
     사용된 모든 리포지토리 목록을 포함하는 <filename>repositories.bak</filename>라는 파일을 만듭니다.
    </para>
    <screen><prompt role="root">root # </prompt><command>zypper</command> lr -e repositories.bak</screen>
    <para>
     설치된 모든 패키지 목록을 포함하는 <filename>installed-software.bak</filename> 파일도 만듭니다.
    </para>
    <screen><prompt role="root">root # </prompt><command>rpm</command> -qa --queryformat '%{NAME}\n' &gt; installed-software.bak</screen>
    <para>
     두 파일을 모두 백업합니다. 리포지토리 및 설치된 패키지는 다음 명령으로 복원할 수 있습니다.
    </para>
    <screen><prompt role="root">root # </prompt><command>zypper</command> ar repositories.bak
<prompt role="root">root # </prompt><command>zypper</command> install $(cat installed-software.bak)</screen>
   </sect3>
  </sect2>

  <sect2 xml:id="sec-update-prep-mariadb">
   <title>MySQL 데이터베이스 마이그레이션</title>
   <remark>toms 2015-09-03: already reviewed by Ondrej and Kristýna.</remark>
   <para>
    SUSE Linux Enterprise 12부터 SUSE는 MySQL에서 MariaDB로 전환했습니다. 업그레이드를 시작하기 전에 데이터베이스를 백업하는 것이 좋습니다.
   </para>

   <para>
    데이터베이스를 마이그레이션하려면 다음을 수행하십시오.
   </para>
   <procedure>
    <step>
     <para>
      SUSE Linux Enterprise 11 컴퓨터에 로그인합니다.
     </para>
    </step>
    <step>
     <para>
      덤프 파일을 생성합니다.
     </para>
<screen><prompt role="root">root # </prompt><command>mysqldump</command> -u root -p --all-databases &gt; mysql_backup.sql</screen>
     <para>
      기본적으로 <command>mysqldump</command>는 <literal>INFORMATION_SCHEMA</literal> 또는 <literal>performance_schema</literal> 데이터베이스를 덤프하지 않습니다. 자세한 내용은 <link xlink:href="https://dev.mysql.com/doc/refman/5.5/en/mysqldump.html"/>을(를) 참조하십시오.
     </para>
    </step>
    <step>
     <para>
      나중에 확인하기 위해(설치는 <emphasis>아님</emphasis>) 덤프 파일, 구성 파일 <filename>/etc/my.cnf</filename> 및 <filename>/etc/mysql/</filename> 디렉토리를 안전한 곳에 저장합니다.
     </para>
    </step>
    <step>
     <para>
      업그레이드를 수행합니다. 업그레이드 후에도 이전 구성 파일 <filename>/etc/my.cnf</filename>는 그대로 유지됩니다. 새 구성은 <filename>/etc/my.cnf.rpmnew</filename> 파일에 있습니다.
     </para>
    </step>
    <step>
     <para>
      MariaDB 데이터베이스를 필요에 따라 구성합니다. 이전 구성 파일 및 디렉토리는 사용하지 <emphasis>마십시오</emphasis>. 하지만 확인용으로 사용하거나 변경하여 사용할 수는 있습니다.
     </para>
    </step>
    <step>
     <para>
      다음과 같이 MariaDB 서버를 시작해야 합니다.
     </para>
<screen><prompt role="root">root # </prompt><command>systemctl</command> start mysql</screen>
     <para>
      부팅할 때마다 MariaDB 서버를 시작하려면 다음과 같이 서비스를 활성화합니다.
     </para>
<screen><prompt role="root">root # </prompt><command>systemctl</command> enable mysql</screen>

    </step>
    <step>
     <para>
      데이터베이스에 연결하여 MariaDB가 올바로 실행 중인지 확인합니다.
     </para>
<screen><prompt role="root">root # </prompt><command>mysql</command> -u root -p</screen>
    </step>
   </procedure>
  </sect2>

  <sect2 xml:id="sec-update-prep-postgresql">
   <title>PostgreSQL 데이터베이스 마이그레이션</title>
   <remark>toms 2015-09-09: FATE#319049</remark>
   <remark>Already reviewd by Reinhard</remark>
   <para>
    SLE11 SP3 및 SLE12 GA는 유지보수 업데이트로 최신 버전의 PostgreSQL 데이터베이스를 가져옵니다. 데이터베이스의 필수 마이그레이션 작업 때문에 자동 업그레이드 프로세스는 없습니다. 이처럼 한 버전에서 다른 버전으로 수동으로 전환해야 합니다.
   </para>
   <para>
    기본 덤프 및 다시 로드의 대체 방법인 <command>pg_upgrade</command> 명령으로 마이그레이션 프로세스를 수행합니다. <quote>덤프 및 다시 로드</quote> 방법에 비해 <command>pg_upgrade</command>를 사용하면 마이그레이션에 시간이 덜 듭니다.
   </para>
   <para>
    각 PostgreSQL 버전은 버전에 따라 다른 디렉토리에 파일을 저장합니다. 업데이트 후 디렉토리가 다음으로 변경됩니다.
   </para>
   <variablelist>
    <varlistentry>
     <term>SLE11 SP3/SP4</term>
     <listitem>
      <para>
       <filename>/usr/lib/postgresql91/</filename>에서 <filename>/usr/lib/postgresql94/</filename>로 변경
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>SLE12 GA</term>
     <listitem>
      <para>
       <filename>/usr/lib/postgresql93/</filename>에서 <filename>/usr/lib/postgresql94/</filename>로 변경
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
   <para>
    데이터베이스를 마이그레이션하려면 다음을 수행하십시오.
   </para>
   <procedure>
    <step>
     <para>
      다음 사전 조건이 충족되었는지 확인합니다.
     </para>
     <itemizedlist>
      <listitem>
       <para>
        아직 하지 않은 경우 유지보수 업데이트를 통해 이전 PostgreSQL 버전의 패키지를 최신 릴리스로 업그레이드합니다.
       </para>
      </listitem>
      <listitem>
       <para>
        기존 데이터베이스의 백업을 만듭니다.
       </para>
      </listitem>
      <listitem>
       <para>
        새 PostgreSQL 주 버전의 패키지를 설치합니다. SLE12의 경우
        <package>postgresql94-server</package>
        및 이 패키지가 종속된 패키지를 모두 설치합니다.
       </para>
      </listitem>
      <listitem>
       <para>
        패키지 설치
        <package>postgresql94-contrib</package>
        패키지(<command>pg_upgrade</command> 명령 포함)를 설치합니다.
       </para>
      </listitem>
      <listitem>
       <para>
        PostgreSQL 데이터 영역(기본적으로 <filename>/var/lib/pgsql/data</filename>)이 충분한지 확인하십시오. 공간이 부족한 경우 각 데이터베이스에서 다음 SQL 명령으로 크기를 줄여 보십시오(아주 오래 걸릴 수 있음).
       </para>
<screen>VACUUM FULL</screen>
      </listitem>
     </itemizedlist>
    </step>
    <step>
     <para>
      PostgreSQL 서버를 정지합니다.
     </para>
<screen><prompt role="root">root # </prompt><command>/usr/sbin/rcpostgresql</command> stop</screen>
    </step>
    <step>
     <para>
      이전 데이터 디렉토리 이름을 바꿉니다.
     </para>
<screen><prompt role="root">root # </prompt><command>mv</command> /var/lib/pgsql/data /var/lib/pgsql/data.old</screen>
    </step>
    <step>
     <para>
      새 데이터 디렉토리를 생성합니다.
     </para>
<screen><prompt role="root">root # </prompt><command>mkdir</command> -p /var/lib/pgsql/data</screen>
    </step>
    <step>
     <para>
      이전 버전에서 구성 파일을 변경한 경우 <filename>postgresql.conf</filename>
      <filename>, pg_hba.conf</filename> 파일을 새 <filename>data</filename> 디렉토리로 복사합니다.
     </para>
<screen><prompt role="root">root # </prompt><command>cp</command> /var/lib/pgsql/data.old/*.conf \
     /var/lib/pgsql/data</screen>
    </step>
    <step>
     <para>
      새 데이터베이스 인스턴스를 <command>initdb</command>를 사용하여 수동으로 초기화하거나 PostgreSQL를 시작했다가 정지하여 자동으로 초기화합니다.
     </para>
<screen><prompt role="root">root # </prompt><command>/usr/sbin/rcpostgresql</command> start
<prompt role="root">root # </prompt><command>/usr/sbin/rcpostgresql</command> stop</screen>
    </step>
    <step>
     <para>
      마이그레이션 프로세스를 시작하고 <replaceable>OLD</replaceable> 자리 표시자를 이전 버전으로 바꿉니다.
     </para>
<screen><prompt role="root">root # </prompt><command>pg_upgrade</command> \
   --old-datadir "/var/lib/pgsql/data.old" \
   --new-datadir "/var/lib/pgsql/data" \
   --old-bindir "/usr/lib/postgresql<replaceable>OLD</replaceable>/bin/" \
   --new-bindir "/usr/lib/postgresql94/bin/"</screen>
    </step>
    <step>
     <para>
      새 데이터베이스 인스턴스를 시작합니다.
     </para>
<screen><prompt role="root">root # </prompt><command>/usr/sbin/rcpostgresql</command> start</screen>
    </step>
    <step>
     <para>
      마이그레이션되었는지 확인합니다. 이 단계를 자동화하는 일반 도구는 없습니다. 테스트할 양 및 항목 등 사용 사례에 따라 단계가 달라집니다.
     </para>
    </step>
    <step>
     <para>
      이전 PostgreSQL 패키지와 이전 데이터 디렉토리를 제거합니다.
     </para>
<screen><prompt role="root">root # </prompt><command>zypper</command> search -s postgresql<replaceable>OLD</replaceable> | xargs zypper rm -u
<prompt role="root">root # </prompt><command>rm</command> -rf /var/lib/pgsql/data.old</screen>
    </step>
   </procedure>
  </sect2>

  <sect2 xml:id="sec-update-prep-ssl">
   <title>Java 응용 프로그램용 MD5 이외의 서버 인증서 생성</title>
   <remark>toms 2016-07-27: from bsc#970153, c#24</remark>
   <para>
    SP1에서 SP2로 업데이트하는 절차 중에 보안 수정의 일부로 MD5 기반 인증서가 비활성화 되었습니다. MD5로 작성한 인증서가 있는 경우 다음 과정에 따라 인증서를 재작성하십시오.
   </para>

   <procedure>
    <step>
     <para>
      터미널 창을 열고 <systemitem class="username">루트</systemitem>로 로그인하십시오.
     </para>
    </step>
    <step>
     <para>
      개인 키를 생성합니다.
     </para>
     <screen><prompt role="root">root # </prompt><command>openssl</command> genrsa -out server.key 1024</screen>
     <para>
      보다 강력한 키를 원하는 경우 <literal>1024</literal>를 <literal>4096</literal>과 같이 더 높은 숫자로 교환합니다.
     </para>
    </step>
    <step>
     <para>
      인증서 서명 요청 (CSR)을 생성합니다.
     </para>
     <screen><prompt role="root">root # </prompt><command>openssl</command> req -new -key server.key -out server.csr</screen>
    </step>
    <step>
     <para>
      인증서에 자체 서명합니다.
     </para>
     <screen><prompt role="root">root # </prompt><command>openssl</command> x509 -req -days 365 -in server.csr -signkey server.key -out server.crt</screen>
    </step>
    <step>
     <para>
      PEM 파일을 생성합니다.
     </para>
     <screen><prompt role="root">root # </prompt><command>cat</command> server.key server.crt &gt; server.pem</screen>
    </step>
    <step>
     <para><filename>server.crt</filename>, <filename>server.csr</filename>, <filename>server.key</filename>, 및 <filename>server.pem</filename> 파일을 키가 있는 각각의 디렉토리에 배치합니다. 예를 들어 Tomcat의 경우, 해당하는 디렉토리는 <filename>/etc/tomcat/ssl/</filename>입니다.
     </para>
    </step>
   </procedure>
  </sect2>

  <sect2 xml:id="sec-update-prep-vms">
   <title>가상 머신 게스트 종료</title>
   <para>
    시스템이 KVM 또는 Xen에 대한 VM 호스트 서버 역할을 할 경우 업데이트 전에 실행 중인 VM 게스트가 모두 올바르게 종료되었는지 확인합니다. 그렇지 않으면 업데이트 후 게스트에 액세스할 수 없습니다.
   </para>
  </sect2>

  <sect2 xml:id="sec-update-prep-smt">
   <title>SMT 클라이언트에서 <command>clientSetup4SMT.sh</command> 스크립트를 확인하십시오</title>
   <para>
    SMT 서버에 등록된 클라이언트 OS를 마이그레이션하는 경우 호스트의 <command>clientSetup4SMT.sh</command> 스크립트가 최신 상태인지 확인해야 합니다. 이전 버전 SMT의 <command>clientSetup4SMT.sh</command>는 SMT 12 클라이언트를 관리할 수 없습니다. 정기적으로 SMT 서버에 소프트웨어 패치를 적용하는 경우 언제든지 <filename>&lt;SMT_HOSTNAME&gt;/repo/tools/clientSetup4SMT.sh</filename>에서 최신 버전의 <command>clientSetup4SMT.sh</command>를 찾을 수 있습니다.
   </para>
  </sect2>

  <sect2 xml:id="sec-update-disk">
   <title>디스크 공간</title>

   <para>
    소프트웨어는 버전이 바뀌면서 커지는 경향이 있습니다. 따라서 업데이트하기 전에 사용 가능한 파티션 공간을 살펴보십시오. 디스크 공간 부족이 의심되면 예를 들어 파티션 크기를 조정하는 방법으로 가용 공간을 늘리기 전에 먼저 데이터를 백업하십시오. 각 파티션의 크기에 대한 일반적인 규칙은 없습니다. 공간 요구사항은 특정 파티셔닝 프로파일과 선택한 소프트웨어에 따라 달라집니다.
   </para>

   <note>
    <title>YaST에서 충분한 공간 자동 확인</title>
    <para>
     업데이트 절차 중 YaST가 사용 가능한 여유 디스크 공간을 검사하고 설치 용량이 여유 공간보다 클 경우 사용자에게 경고를 표시합니다. 이 경우 업데이트를 수행하면 <emphasis>사용할 수 없는 시스템</emphasis>이라는 오류가 발생할 수 있습니다. 상황을 정확히 알고 있는 경우에만(사전 테스트를 수행하여) 경고를 무시하고 업데이트를 진행할 수 있습니다.
    </para>
   </note>

   <sect3 xml:id="sec-update-disk-space">
    <title>비 Btrfs 파일 시스템에서 디스크 공간 확인</title>
    <para>
     <command>df</command> 명령을 사용하여 가용 디스크 공간을 나열합니다. 예를 들어 <xref linkend="aus-update-df"/>에서 루트 파티션은 <filename>/dev/sda3</filename>(<filename>/</filename>로 탑재됨)입니다.
    </para>
    <example xml:id="aus-update-df">
     <title><command>df -h</command>로 나열</title>

<screen os="sles">Filesystem     Size  Used Avail Use% Mounted on
/dev/sda3       74G   22G   53G  29% /
tmpfs          506M     0  506M   0% /dev/shm
/dev/sda5      116G  5.8G  111G   5% /home
/dev/sda1       44G    4G   40G   9% /data</screen>
    </example>
   </sect3>

   <sect3 xml:id="sec-update-disk-btrfs-on-root">
    <title>Btrfs 루트 파일 시스템에서 디스크 공간 확인</title>
    <para>
     시스템에서 Btrfs를 루트 파일 시스템으로 사용하는 경우 사용 가능한 공간이 충분한지 확인해야 합니다. 최악의 경우 업그레이드에 새 스냅샷용 현재 루트 파일 시스템만큼의 디스크 공간이 필요합니다(<filename>/.snapshot</filename>이 없는 경우). 사용 가능한 디스크 공간을 표시하려면 다음 명령을 사용합니다.
    </para>
<screen><prompt role="root">root # </prompt><command>df</command> -h /</screen>
    <para>
     탑재된 다른 모든 파티션에서도 가용 공간을 확인합니다. 다음은 검증된 권장 사항입니다.
    </para>
    <itemizedlist>
     <listitem>
      <para>
       Btrfs를 비롯한 모든 파일 시스템에서 사용 가능한 디스크 공간이 충분해야 큰 RPM을 다운로드하고 설치할 수 있습니다. 이전 RPM의 공간은 새 RPM을 설치해야만 비워집니다.
      </para>
     </listitem>
     <listitem>
      <para>
       스냅샷이 포함된 Btrfs의 경우 현재 설치에 소요되는 공간만큼의 사용 가능한 공간이 적어도 필요합니다. 사용 가능한 공간이 현재 설치보다 두 배 많은 것이 좋습니다.
      </para>
      <para>
       사용 가능한 공간이 충분하지 않으면 <command>스냅퍼</command>를 사용하여 이전 스냅샷을 삭제해 볼 수 있습니다.
      </para>
<screen><prompt role="root">root # </prompt><command>snapper</command> list
<prompt role="root">root # </prompt><command>snapper</command> delete NUMBER</screen>
      <para>
       하지만 경우에 따라서는 도움이 되지 않을 수도 있습니다. 마이그레이션 전에 대부분의 스냅샷은 적은 공간만 차지합니다.
      </para>
     </listitem>
    </itemizedlist>
   </sect3>
  </sect2>
  <sect2 xml:id="sec-update-prep-multiversion">
   <title>커널 다중 버전 지원을 일시적으로 비활성화</title>
   <para>
    <phrase role="productname"><phrase os="sles">SUSE Linux Enterprise Server</phrase></phrase>는 <filename>/etc/zypp/zypp.conf</filename>에서 해당 설정을 활성화하여 다중 커널 버전 설치를 지원합니다. 서비스 팩으로 업그레이드할 경우 이 기능에 대한 지원을 일시적으로 비활성화해야 합니다. 업그레이드가 성공적으로 끝나면 다중 버전 지원을 다시 활성화할 수 있습니다. 다중 버전 지원을 비활성화하려면 <filename>/etc/zypp/zypp.conf</filename>에 해당 줄에 주석을 추가하십시오. 결과는 다음과 같습니다.
   </para>
<screen>#multiversion = provides:multiversion(kernel)
#multiversion.kernels = latest,running</screen>
   <para>
    업데이트 성공 후 이 기능을 다시 활성화하려면 주석 기호를 제거하십시오. 다중 버전 지원에 관한 자세한 내용은 <xref linkend="cha-tuning-multikernel-enable"/> 항목을 참조하십시오.
   </para>
  </sect2>
 </sect1>
 <sect1 xml:id="sec-update-sle-sle12zseries" os="sles">
  <title>IBM z 시스템에서 업그레이드</title>
  <para>z 시스템에서 SUSE Linux Enterprise 설치를 업그레이드하려면 parmfile 등을 통해 <command>Upgrade=1</command> 커널 파라미터가 필요합니다. <xref linkend="sec-appdendix-parm" xrefstyle="HeadingOnPage"/> 참조.
  </para>
 </sect1>
 <sect1 xml:id="sec-update-prep-ppc-x" os="sles" arch="power">
  <title>IBM POWER: X 서버 시작</title>
  <para>
   SLES 12 for IBM POWER에서는 디스플레이 관리자가 기본적으로 로컬 X 서버를 시작하지 않도록 구성됩니다. SLES 12 SP1부터는 이 설정이 바뀌어 디스플레이 관리자가 X 서버와 함께 시작됩니다.
  </para>
  <para>
   업그레이드 중 문제를 방지하려면 <phrase role="productname"><phrase os="sles">SUSE Linux Enterprise Server</phrase></phrase> 설정을 자동으로 변경하지 않아야 합니다. 업그레이드 후 디스플레이 관리자가 X 서버를 시작하도록 하려면 <filename>/etc/sysconfig/displaymanager</filename>에서 <envar>DISPLAYMANAGER_STARTS_XSERVER</envar>의 설정을 다음과 같이 변경하십시오.
  </para>
  <screen>DISPLAYMANAGER_STARTS_XSERVER="yes"</screen>
 </sect1>
</chapter>
