<?xml version="1.0" encoding="UTF-8"?>
<chapter xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xlink="http://www.w3.org/1999/xlink" xml:base="adm_sudo.xml" version="5.0" xml:id="cha-adm-sudo">
 <title>sudo
</title>
 <info>
  <dm:docmanager xmlns:dm="urn:x-suse:ns:docmanager">
   <dm:bugtracker/>
   <dm:translation>yes (sim)</dm:translation>
  </dm:docmanager>
 </info>
 <para>
  Muitos comandos e utilitários do sistema precisam ser executados como <systemitem class="username">root</systemitem> para modificar arquivos e/ou executar tarefas que apenas o superusuário tem permissão de fazer. Por motivos de segurança e para evitar a execução acidental de comandos perigosos, não é aconselhável, de modo geral, efetuar login diretamente como <systemitem class="username">root</systemitem>. Em vez disso, é recomendável trabalhar como usuário normal, sem privilégio, e usar o comando <command>sudo</command> para executar comandos com privilégios elevados.
 </para>
 <para>
  No <phrase role="productname"><phrase os="sled">SUSE Linux Enterprise Desktop</phrase></phrase>, por padrão, o comando <command>sudo</command> é configurado para funcionar como o su. No entanto, o <command>sudo</command> oferece a possibilidade de permitir que os usuários executem comandos com privilégios de qualquer outro usuário de uma forma altamente configurável. Isso pode ser usado para atribuir funções com privilégios específicos a determinados usuários e grupos. Por exemplo, é possível permitir que os membros do grupo <systemitem class="groupname">usuários</systemitem> executem um comando com os privilégios de <systemitem class="username">wilber</systemitem>. É possível restringir ainda mais o acesso ao comando, por exemplo, proibindo a especificação de qualquer opção do comando. Enquanto o su sempre requer senha de <systemitem class="username">root</systemitem> para autenticação com PAM, o <command>sudo</command> pode ser configurado para autenticar com suas próprias credenciais. Isso reforça a segurança porque não há necessidade de compartilhar a senha de <systemitem class="username">root</systemitem>. Por exemplo, você pode permitir que os membros do grupo <systemitem class="groupname">usuários</systemitem> executem um comando <command>frobnicate</command> como <systemitem class="username">wilber</systemitem>, com a restrição de que nenhum argumento seja especificado. Isso pode ser usado para atribuir funções com habilidades específicas a determinados usuários e grupos.
 </para>
 <sect1 xml:id="sec-adm-sudo-usage">
  <title>Uso básico do <command>sudo</command></title>

  <para>
   O <command>sudo</command> é simples de usar, porém, muito poderoso.
  </para>

  <sect2 xml:id="sec-adm-sudo-usage-cmd">
   <title>Executando um único comando</title>
   <para>
    Conectado como usuário normal, você pode executar qualquer comando como <systemitem class="username">root</systemitem> inserindo <command>sudo</command> antes do comando. A senha de root será solicitada e, se autenticada com êxito, execute o comando como <systemitem class="username">root</systemitem>:
   </para>
<screen>
<prompt>tux &gt; </prompt><command>id -un</command><co xml:id="co-sudo-usage-id"/>
tux
<prompt>tux &gt; </prompt><command>sudo id -un</command>
root's password:<co xml:id="co-sudo-usage-pw"/>
root
<prompt>tux &gt; </prompt><command>id -un</command>
tux<co xml:id="co-sudo-usage-after"/>
<prompt>tux &gt; </prompt><command>sudo id -un</command>
<co xml:id="co-sudo-usage-nopw"/>
root
</screen>
   <calloutlist>
    <callout arearefs="co-sudo-usage-id">
     <para>
      O comando <command>id -un</command> imprime o nome de login do usuário atual.
     </para>
    </callout>
    <callout arearefs="co-sudo-usage-pw">
     <para>
      A senha não aparece ao ser inserida, nem como texto sem criptografia nem como marcadores.
     </para>
    </callout>
    <callout arearefs="co-sudo-usage-after">
     <para>
      Somente os comandos que começam com <command>sudo</command> são executados com privilégios elevados. Se você executar o mesmo comando sem o prefixo <command>sudo</command>, ele será executado com os privilégios do usuário atual novamente.
     </para>
    </callout>
    <callout arearefs="co-sudo-usage-nopw">
     <para>
      Durante um tempo limitado, você não precisa inserir a senha de <systemitem class="username">root</systemitem> novamente.
     </para>
    </callout>
   </calloutlist>
   <tip>
    <title>Redirecionamento de E/S</title>
    <para>
     O redirecionamento de E/S não funciona conforme você deve esperar:
    </para>
<screen>
<prompt>tux &gt; </prompt> sudo echo s &gt; /proc/sysrq-trigger
bash: /proc/sysrq-trigger: Permission denied
<prompt>tux &gt; </prompt> sudo cat &lt; /proc/1/maps
bash: /proc/1/maps: Permission denied
</screen>
    <para>
     Apenas o binário <command>echo</command>/<command>cat</command> é executado com privilégios elevados, enquanto o redirecionamento é executado pelo shell do usuário com os privilégios do usuário. Você pode iniciar um shell como na <xref linkend="sec-sudo-shell"/> ou usar o utilitário <command>dd</command>:
    </para>
<screen>
echo s | sudo dd of=/proc/sysrq-trigger
sudo dd if=/proc/1/maps | cat 
</screen>
   </tip>
  </sect2>

  <sect2 xml:id="sec-sudo-shell">
   <title>Iniciando um shell</title>
   <para>
    Ter que inserir <command>sudo</command> antes de cada comando pode ser trabalhoso. Embora seja possível especificar um shell como um comando <command>sudo bash</command>, é recomendável usar um dos mecanismos incorporados para iniciar um shell:
   </para>
   <variablelist>
    <varlistentry>
     <term><literal>sudo -s (&lt;comando&gt;)</literal>
     </term>
     <listitem>
      <para>
       Inicia um shell especificado pela variável de ambiente <envar>SHELL</envar> ou o shell padrão do usuário de destino. Se um comando for especificado, ele será passado para o shell (com a opção <option>-c</option>), do contrário, o shell será executado no modo interativo.
      </para>
<screen>
<prompt>tux:~ &gt; </prompt>sudo -i
root's password:
<prompt>root:/home/tux # </prompt>exit
<prompt>tux:~ &gt; </prompt>
</screen>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><literal>sudo -i (&lt;comando&gt;)</literal>
     </term>
     <listitem>
      <para>
       Igual ao <option>-s</option>, mas inicia o shell como login. Isso significa que os arquivos de inicialização do shell (<filename>.profile</filename>, etc.) são processados e o diretório de trabalho atual é definido como o diretório pessoal do usuário de destino.
      </para>
<screen>
<prompt>tux:~ &gt; </prompt>sudo -i
root's password:
<prompt>root:~ # </prompt>exit
<prompt>tux:~ &gt; </prompt>
            </screen>
     </listitem>
    </varlistentry>
   </variablelist>
  </sect2>

  <sect2 xml:id="sec-adm-sudo-usage-env">
   <title>Variáveis de ambiente</title>
   <para>
    Por padrão, o <command>sudo</command> não propaga as variáveis de ambiente:
   </para>
<screen>
<prompt>tux &gt; </prompt>ENVVAR=test env | grep ENVVAR
ENVVAR=test
<prompt>tux &gt; </prompt>ENVVAR=test sudo env | grep ENVVAR
root's password:
<co xml:id="co-sudo-env-novar"/>
<prompt>tux &gt; </prompt>
      </screen>
   <calloutlist>
    <callout arearefs="co-sudo-env-novar">
     <para>
      A saída vazia mostra que a variável de ambiente <envar>ENVVAR</envar> não existia no contexto do comando executado com o <command>sudo</command>.
     </para>
    </callout>
   </calloutlist>
   <para>
    É possível mudar esse comportamento com a opção <literal>env_reset</literal>. Consulte a <xref linkend="tab-adm-sudo-options"/>.
   </para>
  </sect2>
 </sect1>
 <sect1 xml:id="sec-sudo-conf">
  <title>Configurando o <command>sudo</command></title>

  <para>
   O <command>sudo</command> é uma ferramenta muito flexível com uma configuração extensa.
  </para>

  <note>
   <title>Comando sudo bloqueado</title>
   <para>
    Se você se bloqueou por engano fora do <command>sudo</command>, use <command>su -</command> e a senha de <systemitem class="username">root</systemitem> para obter um shell de root. Para corrigir o erro, execute <command>visudo</command>.
   </para>
  </note>

  <sect2 xml:id="sec-sudo-conf-edit">
   <title>Editando os arquivos de configuração</title>
   
   <para>
    O arquivo de configuração de política principal do <command>sudo</command> é <filename>/etc/sudoers</filename>. Já que é possível se bloquear fora do sistema em virtude de erros nesse arquivo, é altamente recomendado usar <command>visudo</command> para edição. Ele impedirá mudanças simultâneas no arquivo aberto e verificará se há erros de sintaxe antes de gravar as modificações.
   </para>
   <para>
    Apesar do nome, você também pode usar editores diferentes do vi definindo a variável de ambiente <envar>EDITOR</envar>, por exemplo:
   </para>
<screen>sudo EDITOR=<replaceable>/usr/bin/nano</replaceable> visudo</screen>
   <para>
    No entanto, o próprio arquivo <filename>/etc/sudoers</filename> é fornecido por pacotes do sistema, e as modificações podem falhar durante atualizações. Portanto, é recomendável inserir a configuração personalizada nos arquivos no diretório <filename>/etc/sudoers.d/</filename>. Qualquer arquivo nesse diretório é incluído automaticamente. Para criar ou editar um arquivo nesse subdiretório, execute:
   </para>
<screen>sudo visudo -f /etc/sudoers.d/<replaceable>NAME</replaceable></screen>
   <para>
    Se preferir, use um editor diferente (por exemplo, <command>nano</command>):
   </para>
<screen>sudo EDITOR=<replaceable>/usr/bin/nano</replaceable> visudo -f /etc/sudoers.d/<replaceable>NAME</replaceable></screen>
   <note>
    <title>Arquivos ignorados em <filename>/etc/sudoers.d</filename></title>
    <para>
     O comando <literal>#includedir</literal> em <filename>/etc/sudoers</filename>, usado para <filename>/etc/sudoers.d</filename>, ignora os arquivos que terminam em <literal>~</literal> (til) ou que contêm <literal>.</literal> (ponto).
    </para>
   </note>
   <para>
    Para obter mais informações sobre o comando <command>visudo</command>, execute <command>man 8 visudo</command>.
   </para>
  </sect2>

  <sect2 xml:id="sec-sudo-conf-syntax">
   <title>Sintaxe de configuração básica de sudoers</title>
   <para>
    Nos arquivos de configuração sudoers, há dois tipos de opções: strings e flags. Enquanto as strings podem conter qualquer valor, os flags podem ser ON ou OFF. As construções de sintaxe mais importantes dos arquivos de configuração sudoers são:
   </para>
<screen>
# Everything on a line after a # gets ignored <co xml:id="co-sudo-syntax-comment"/>
Defaults !insults # Disable the insults flag <co xml:id="co-sudo-syntax-flag"/>
Defaults env_keep += "DISPLAY HOME" # Add DISPLAY and HOME to env_keep
tux ALL = NOPASSWD: /usr/bin/frobnicate, PASSWD: /usr/bin/journalctl <co xml:id="co-sudo-syntax-rule"/>
</screen>
   <calloutlist>
    <callout arearefs="co-sudo-syntax-comment">
     <para>
      Há duas exceções: <literal>#include</literal> e <literal>#includedir</literal> são comandos normais. Seguidos por dígitos, eles especificam um UID.
     </para>
    </callout>
    <callout arearefs="co-sudo-syntax-flag">
     <para>
      Remova <literal>!</literal> para definir o flag especificado como ON.
     </para>
    </callout>
    <callout arearefs="co-sudo-syntax-rule">
     <para>
      Consulte a <xref linkend="sec-sudo-conf-rule"/>.
     </para>
    </callout>
   </calloutlist>
   <table xml:id="tab-adm-sudo-options">
    <title>Opções e flags úteis</title>
    <tgroup cols="3">
     <thead>
      <row>
       <entry>
        <para>
         Nome da opção
        </para>
       </entry>
       <entry>
        <para>
         Descrição
        </para>
       </entry>
       <entry>
        <para>
         Exemplo
        </para>
       </entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry><literal>targetpw</literal>
       </entry>
       <entry>
        <para>
         Esse flag controla se o usuário que faz a chamada deve digitar a senha do usuário de destino (ON) (por exemplo <systemitem class="username">root</systemitem>) ou do usuário que faz a chamada (OFF).
        </para>
       </entry>
       <entry>
<screen>Defaults targetpw # Turn targetpw flag ON</screen>
       </entry>
      </row>
      <row>
       <entry><literal>rootpw</literal>
       </entry>
       <entry>
        <para>
         Se definido, o <command>sudo</command> solicitará a senha de <systemitem class="username">root</systemitem> em vez da senha do usuário de destino ou do chamador. O padrão é OFF.
        </para>
       </entry>
       <entry>
<screen>Defaults !rootpw # Turn rootpw flag OFF</screen>
       </entry>
      </row>
      <row>
       <entry><literal>env_reset</literal>
       </entry>
       <entry>
        <para>
         Se definido, o <command>sudo</command> construirá um ambiente mínimo apenas com <envar>TERM</envar>, <envar>PATH</envar>, <envar>HOME</envar>, <envar>MAIL</envar>, <envar>SHELL</envar>, <envar>LOGNAME</envar>, <envar>USER</envar>, <envar>USERNAME</envar> e <envar>SUDO_*</envar> definidos. Além disso, as variáveis listadas em <literal>env_keep</literal> são importadas do ambiente de chamada. O padrão é ON.
        </para>
       </entry>
       <entry>
<screen>Defaults env_reset # Turn env_reset flag ON</screen>
       </entry>
      </row>
      <row>
       <entry><literal>env_keep</literal>
       </entry>
       <entry>
        <para>
         Lista de variáveis de ambiente para manter quando o flag <literal>env_reset</literal> é ON.
        </para>
       </entry>
       <entry>
<screen>
# Set env_keep to contain EDITOR and PROMPT
Defaults env_keep = "EDITOR PROMPT"
Defaults env_keep += "JRE_HOME" # Add JRE_HOME
Defaults env_keep -= "JRE_HOME" # Remove JRE_HOME
</screen>
       </entry>
      </row>
      <row>
       <entry><literal>env_delete</literal>
       </entry>
       <entry>
        <para>
         Lista de variáveis de ambiente para remover quando o flag <literal>env_reset</literal> é OFF.
        </para>
       </entry>
       <entry>
<screen>
# Set env_delete to contain EDITOR and PROMPT
Defaults env_delete = "EDITOR PROMPT"
Defaults env_delete += "JRE_HOME" # Add JRE_HOME
Defaults env_delete -= "JRE_HOME" # Remove JRE_HOME
</screen>
       </entry>
      </row>
     </tbody>
    </tgroup>
   </table>
   <para>
    É possível também usar o token <literal>Defaults</literal> para criar álias para uma coleção de usuários, hosts e comandos. Além disso, é possível aplicar uma opção apenas a um conjunto específico de usuários.
   </para>
   <para>
    Para obter informações detalhadas sobre o arquivo de configuração <filename>/etc/sudoers</filename>, consulte <command>man 5 sudoers</command>.
   </para>
  </sect2>

  <sect2 xml:id="sec-sudo-conf-rule">
   <title>Regras em sudoers</title>
   <para>
    As regras referentes à configuração sudoers podem ser muito complexas, portanto, esta seção abordará apenas os princípios básicos. Cada regra segue o esquema básico (<literal>[]</literal> marca as partes opcionais):
   </para>
<screen>
#Who      Where         As whom      Tag                What
User_List Host_List = [(User_List)] [NOPASSWD:|PASSWD:] Cmnd_List
</screen>
   <variablelist>
    <title>Sintaxe para as regras de sudoers</title>
    <varlistentry>
     <term><literal>User_List</literal>
     </term>
     <listitem>
      <para>
       Um ou mais identificadores (separados por <literal>,</literal>): Um nome de usuário, um grupo no formato <literal>%GROUPNAME</literal> ou um ID de usuário no formato <literal>#UID</literal>. A negação pode ser executada com <literal>!</literal> prefixo.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><literal>Host_List</literal>
     </term>
     <listitem>
      <para>
       Um ou mais identificadores (separados por <literal>,</literal>): Um nome (completo) do host ou um endereço IP. A negação pode ser executada com <literal>!</literal> prefixo. <literal>ALL</literal> é a opção comum para <literal>Host_List</literal>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><literal>NOPASSWD:|PASSWD:</literal>
     </term>
     <listitem>
      <para>
       Não será solicitada uma senha para o usuário ao executar comandos correspondentes a <literal>CMDSPEC</literal> após <literal>NOPASSWD:</literal>.
      </para>
      <para>
       O padrão é <literal>PASSWD</literal>, ela apenas deve ser especificada quando ambas estão na mesma linha:
      </para>
<screen>tux ALL = PASSWD: /usr/bin/foo, NOPASSWD: /usr/bin/bar</screen>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><literal>Cmnd_List</literal>
     </term>
     <listitem>
      <para>
       Um ou mais especificadores (separados por <literal>,</literal>): Um caminho para um executável seguido de argumentos permitidos ou nada.
      </para>
<screen>
/usr/bin/foo     # Anything allowed
/usr/bin/foo bar # Only "/usr/bin/foo bar" allowed
/usr/bin/foo ""  # No arguments allowed
</screen>
     </listitem>
    </varlistentry>
   </variablelist>
   <para>
    É possível usar <literal>ALL</literal> como <literal>User_List</literal>, <literal>Host_List</literal> e <literal>Cmnd_List</literal>.
   </para>
   <para>
    Uma regra que permite que o <systemitem class="username">tux</systemitem> execute todos os comandos como root sem digitar uma senha:
   </para>
<screen>tux ALL = NOPASSWD: ALL</screen>
   <para>
    Uma regra que permite que o <systemitem class="username">tux</systemitem> execute <command>systemctl restart apache2</command>:
   </para>
<screen>tux ALL = /usr/bin/systemctl restart apache2</screen>
   <para>
    Uma regra que permite que o <systemitem class="username">tux</systemitem> execute <command>wall</command> como <systemitem>admin</systemitem> sem argumentos:
   </para>
<screen>tux ALL = (admin) /usr/bin/wall ""</screen>
   <warning>
    <title>Construções perigosas</title>
    <para>
     Construções do tipo
    </para>
<screen>ALL ALL = ALL</screen>
    <para>
     <emphasis>não devem</emphasis> ser usadas sem <literal>Defaults targetpw</literal>, do contrário, qualquer pessoa poderá executar comandos como <systemitem class="username">root</systemitem>.
    </para>
   </warning>
  </sect2>
 </sect1>
 <sect1 xml:id="sec-sudo-usecases">
  <title>Casos de uso comuns</title>

  <para>
   Embora a configuração padrão geralmente seja suficiente para instalações e ambientes de área de trabalho simples, as configurações personalizadas podem ser muito úteis.
  </para>

  <sect2 xml:id="sec-sudo-usecases-userpw">
   <title>Usando o <command>sudo</command> sem senha de <systemitem class="username">root</systemitem></title>
   <para>
    Em casos com restrições especiais (<quote>o usuário X apenas pode executar o comando Y como <systemitem class="username">root</systemitem></quote>), isso não é possível. Em outros casos, ainda convém ter algum tipo de separação. Por convenção, os membros do grupo <systemitem class="groupname">wheel</systemitem> podem executar todos os comandos com <command>sudo</command> como root.
   </para>
   <procedure>
    <step>
     <para>
      Adicione você mesmo ao grupo <systemitem class="groupname">wheel</systemitem>.
     </para>
     <para>
      Se a sua conta do usuário ainda não é membro do grupo <systemitem class="groupname">wheel</systemitem>, adicione-a executando <command>sudo usermod -a -G wheel <replaceable>NOMEDEUSUÁRIO</replaceable></command> e efetuando logout e login novamente. Verifique se a mudança foi bem-sucedida executando <command>groups <replaceable>NOMEDEUSUÁRIO</replaceable></command>.
     </para>
    </step>
    <step>
     <para>
      Defina como padrão a autenticação com a senha do usuário que faz a chamada.
     </para>
     <para>
      Crie o arquivo <filename>/etc/sudoers.d/userpw</filename> com <command>visudo</command> (consulte a <xref linkend="sec-sudo-conf-edit"/>) e adicione:
     </para>
<screen>Defaults !targetpw</screen>
    </step>
    <step>
     <para>
      Selecione uma nova regra padrão.
     </para>
     <para>
      Se os usuários tiverem que digitar as senhas novamente, remova o comentário da linha específica em <filename>/etc/sudoers</filename> e comente a regra padrão.
     </para>
<screen>
## Uncomment to allow members of group wheel to execute any command
# %wheel ALL=(ALL) ALL

## Same thing without a password
# %wheel ALL=(ALL) NOPASSWD: ALL
</screen>
    </step>
    <step>
     <para>
      Torne a regra padrão mais restritiva.
     </para>
     <para>
      Comente ou remova a regra allow-everything em <filename>/etc/sudoers</filename>:
     </para>
<screen>ALL     ALL=(ALL) ALL   # WARNING! Only use this together with 'Defaults targetpw'!</screen>
     <warning>
      <title>Regra perigosa em sudoers</title>
      <para>
       Não se esqueça desta etapa, do contrário, <emphasis>qualquer</emphasis> usuário poderá executar <emphasis>qualquer</emphasis> comando como <systemitem class="username">root</systemitem>!
      </para>
     </warning>
    </step>
    <step>
     <para>
      Teste a configuração.
     </para>
     <para>
      Tente executar <command>sudo</command> como membro e não membro de <systemitem class="groupname">wheel</systemitem>.
     </para>
<screen>
<prompt>tux:~ &gt; </prompt>groups
users wheel
<prompt>tux:~ &gt; </prompt>sudo id -un
tux's password:
root
<prompt>wilber:~ &gt; </prompt>groups
users
<prompt>wilber:~ &gt; </prompt>sudo id -un
wilber is not in the sudoers file.  This incident will be reported.
          </screen>
    </step>
   </procedure>
  </sect2>

  <sect2 xml:id="sec-sudo-usecases-xorg">
   <title>Usando o <command>sudo</command> com aplicativos X.Org</title>
   <para>
    Ao iniciar os aplicativos gráficos com o <command>sudo</command>, você encontra o seguinte erro:
   </para>
<screen>
<prompt>tux &gt; </prompt>sudo xterm
xterm: Xt error: Can't open display: %s
xterm: DISPLAY is not set
      </screen>
   <para>
    O YaST selecionará a interface ncurses em vez da interface gráfica.
   </para>
   <para>
    Para usar o X.Org em aplicativos iniciados com o <command>sudo</command>, as variáveis de ambiente <envar>DISPLAY</envar> e <envar>XAUTHORITY</envar> precisam ser propagadas. Para fazer essa configuração, crie o arquivo <filename>/etc/sudoers.d/xorg</filename>, (consulte a <xref linkend="sec-sudo-conf-edit"/>) e adicione a seguinte linha:
   </para>
<screen>Defaults env_keep += "DISPLAY XAUTHORITY"</screen>
   <para>
    Se ainda não foi definida, defina a variável <envar>XAUTHORITY</envar> da seguinte maneira:
   </para>
<screen>export XAUTHORITY=~/.Xauthority</screen>
   <para>
    Agora é possível executar os aplicativos X.Org como de costume:
   </para>
<screen>sudo yast2</screen>

  </sect2>
 </sect1>
 <sect1 xml:id="sec-adm-sudo-moreinfo">
  <title>Mais informações</title>

  <para>
   Uma rápida visão geral sobre os switches de linha de comando disponíveis pode ser recuperada por <command>sudo --help</command>. Uma explicação e outras informações importantes estão disponíveis na página de manual: <command>man 8 sudo</command>, enquanto a configuração está documentada em <command>man 5 sudoers</command>.
  </para>
 </sect1>
</chapter>
